{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "approveMax",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "approveMaxMinusOne",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "approveZeroThenMax",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "approveZeroThenMaxMinusOne",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "callPositionManager",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "getApprovalType",
				"outputs": [
					{
						"internalType": "enum IApproveAndCall.ApprovalType",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							}
						],
						"internalType": "struct IApproveAndCall.IncreaseLiquidityParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "increaseLiquidity",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token0",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token1",
								"type": "address"
							},
							{
								"internalType": "uint24",
								"name": "fee",
								"type": "uint24"
							},
							{
								"internalType": "int24",
								"name": "tickLower",
								"type": "int24"
							},
							{
								"internalType": "int24",
								"name": "tickUpper",
								"type": "int24"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							}
						],
						"internalType": "struct IApproveAndCall.MintParams",
						"name": "params",
						"type": "tuple"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "result",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approveMax(address)": {
					"params": {
						"token": "The token to approve"
					}
				},
				"approveMaxMinusOne(address)": {
					"params": {
						"token": "The token to approve"
					}
				},
				"approveZeroThenMax(address)": {
					"params": {
						"token": "The token to approve"
					}
				},
				"approveZeroThenMaxMinusOne(address)": {
					"params": {
						"token": "The token to approve"
					}
				},
				"callPositionManager(bytes)": {
					"params": {
						"data": "Calldata to pass along to the position manager"
					},
					"returns": {
						"result": "The result from the call"
					}
				},
				"getApprovalType(address,uint256)": {
					"details": "Lens to be called off-chain to determine which (if any) of the relevant approval functions should be called",
					"params": {
						"amount": "The amount to approve",
						"token": "The token to approve"
					},
					"returns": {
						"_0": "The required approval type"
					}
				},
				"increaseLiquidity((address,address,uint256,uint256,uint256))": {
					"params": {
						"params": "Calldata to pass along to the position manager"
					},
					"returns": {
						"result": "The result from the call"
					}
				},
				"mint((address,address,uint24,int24,int24,uint256,uint256,address))": {
					"params": {
						"params": "Calldata to pass along to the position manager"
					},
					"returns": {
						"result": "The result from the call"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"approveMax(address)": {
					"notice": "Approves a token for the maximum possible amount"
				},
				"approveMaxMinusOne(address)": {
					"notice": "Approves a token for the maximum possible amount minus one"
				},
				"approveZeroThenMax(address)": {
					"notice": "Approves a token for zero, then the maximum possible amount"
				},
				"approveZeroThenMaxMinusOne(address)": {
					"notice": "Approves a token for zero, then the maximum possible amount minus one"
				},
				"callPositionManager(bytes)": {
					"notice": "Calls the position manager with arbitrary calldata"
				},
				"increaseLiquidity((address,address,uint256,uint256,uint256))": {
					"notice": "Calls the position manager's increaseLiquidity function"
				},
				"mint((address,address,uint24,int24,int24,uint256,uint256,address))": {
					"notice": "Calls the position manager's mint function"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/github/Uniswap/swap-router-contracts/contracts/interfaces/IApproveAndCall.sol": "IApproveAndCall"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".deps/github/Uniswap/swap-router-contracts/contracts/interfaces/IApproveAndCall.sol": {
			"keccak256": "0xf4ecfa3404dab6cba0a4543d82173fd86c4a74dc7ba680f4eceebd1b7c789904",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://74a39f2e860453ace7a5045731420f1acf6b98a96dadc75d913a19eff7ffca86",
				"dweb:/ipfs/QmcCGp4L4GyQj6XEmigWDKrcJHo1jML2d5ViSUUEDCTrwS"
			]
		}
	},
	"version": 1
}