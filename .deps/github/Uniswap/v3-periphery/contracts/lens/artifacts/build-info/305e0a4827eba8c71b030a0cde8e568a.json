{
	"id": "305e0a4827eba8c71b030a0cde8e568a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/libraries/SafeCast.sol';\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\nimport '@uniswap/v3-core/contracts/libraries/TickBitmap.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\nimport '../interfaces/IQuoterV2.sol';\nimport '../base/PeripheryImmutableState.sol';\nimport '../libraries/Path.sol';\nimport '../libraries/PoolAddress.sol';\nimport '../libraries/CallbackValidation.sol';\nimport '../libraries/PoolTicksCounter.sol';\n\n/// @title Provides quotes for swaps\n/// @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n/// @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n/// the swap and check the amounts in the callback.\ncontract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {\n    using Path for bytes;\n    using SafeCast for uint256;\n    using PoolTicksCounter for IUniswapV3Pool;\n\n    /// @dev Transient storage variable used to check a safety condition in exact output swaps.\n    uint256 private amountOutCached;\n\n    constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {}\n\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) private view returns (IUniswapV3Pool) {\n        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n    }\n\n    /// @inheritdoc IUniswapV3SwapCallback\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes memory path\n    ) external view override {\n        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n        (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n        CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee);\n\n        (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =\n            amount0Delta > 0\n                ? (tokenIn < tokenOut, uint256(amount0Delta), uint256(-amount1Delta))\n                : (tokenOut < tokenIn, uint256(amount1Delta), uint256(-amount0Delta));\n\n        IUniswapV3Pool pool = getPool(tokenIn, tokenOut, fee);\n        (uint160 sqrtPriceX96After, int24 tickAfter, , , , , ) = pool.slot0();\n\n        if (isExactInput) {\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountReceived)\n                mstore(add(ptr, 0x20), sqrtPriceX96After)\n                mstore(add(ptr, 0x40), tickAfter)\n                revert(ptr, 96)\n            }\n        } else {\n            // if the cache has been populated, ensure that the full output amount has been received\n            if (amountOutCached != 0) require(amountReceived == amountOutCached);\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountToPay)\n                mstore(add(ptr, 0x20), sqrtPriceX96After)\n                mstore(add(ptr, 0x40), tickAfter)\n                revert(ptr, 96)\n            }\n        }\n    }\n\n    /// @dev Parses a revert reason that should contain the numeric quote\n    function parseRevertReason(bytes memory reason)\n        private\n        pure\n        returns (\n            uint256 amount,\n            uint160 sqrtPriceX96After,\n            int24 tickAfter\n        )\n    {\n        if (reason.length != 96) {\n            if (reason.length < 68) revert('Unexpected error');\n            assembly {\n                reason := add(reason, 0x04)\n            }\n            revert(abi.decode(reason, (string)));\n        }\n        return abi.decode(reason, (uint256, uint160, int24));\n    }\n\n    function handleRevert(\n        bytes memory reason,\n        IUniswapV3Pool pool,\n        uint256 gasEstimate\n    )\n        private\n        view\n        returns (\n            uint256 amount,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256\n        )\n    {\n        int24 tickBefore;\n        int24 tickAfter;\n        (, tickBefore, , , , , ) = pool.slot0();\n        (amount, sqrtPriceX96After, tickAfter) = parseRevertReason(reason);\n\n        initializedTicksCrossed = pool.countInitializedTicksCrossed(tickBefore, tickAfter);\n\n        return (amount, sqrtPriceX96After, initializedTicksCrossed, gasEstimate);\n    }\n\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        public\n        override\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        )\n    {\n        bool zeroForOne = params.tokenIn < params.tokenOut;\n        IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee);\n\n        uint256 gasBefore = gasleft();\n        try\n            pool.swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                params.amountIn.toInt256(),\n                params.sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : params.sqrtPriceLimitX96,\n                abi.encodePacked(params.tokenIn, params.fee, params.tokenOut)\n            )\n        {} catch (bytes memory reason) {\n            gasEstimate = gasBefore - gasleft();\n            return handleRevert(reason, pool, gasEstimate);\n        }\n    }\n\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        public\n        override\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        )\n    {\n        sqrtPriceX96AfterList = new uint160[](path.numPools());\n        initializedTicksCrossedList = new uint32[](path.numPools());\n\n        uint256 i = 0;\n        while (true) {\n            (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n\n            // the outputs of prior swaps become the inputs to subsequent ones\n            (uint256 _amountOut, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =\n                quoteExactInputSingle(\n                    QuoteExactInputSingleParams({\n                        tokenIn: tokenIn,\n                        tokenOut: tokenOut,\n                        fee: fee,\n                        amountIn: amountIn,\n                        sqrtPriceLimitX96: 0\n                    })\n                );\n\n            sqrtPriceX96AfterList[i] = _sqrtPriceX96After;\n            initializedTicksCrossedList[i] = _initializedTicksCrossed;\n            amountIn = _amountOut;\n            gasEstimate += _gasEstimate;\n            i++;\n\n            // decide whether to continue or terminate\n            if (path.hasMultiplePools()) {\n                path = path.skipToken();\n            } else {\n                return (amountIn, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate);\n            }\n        }\n    }\n\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        public\n        override\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        )\n    {\n        bool zeroForOne = params.tokenIn < params.tokenOut;\n        IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee);\n\n        // if no price limit has been specified, cache the output amount for comparison in the swap callback\n        if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount;\n        uint256 gasBefore = gasleft();\n        try\n            pool.swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                -params.amount.toInt256(),\n                params.sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : params.sqrtPriceLimitX96,\n                abi.encodePacked(params.tokenOut, params.fee, params.tokenIn)\n            )\n        {} catch (bytes memory reason) {\n            gasEstimate = gasBefore - gasleft();\n            if (params.sqrtPriceLimitX96 == 0) delete amountOutCached; // clear cache\n            return handleRevert(reason, pool, gasEstimate);\n        }\n    }\n\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        public\n        override\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        )\n    {\n        sqrtPriceX96AfterList = new uint160[](path.numPools());\n        initializedTicksCrossedList = new uint32[](path.numPools());\n\n        uint256 i = 0;\n        while (true) {\n            (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool();\n\n            // the inputs of prior swaps become the outputs of subsequent ones\n            (uint256 _amountIn, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =\n                quoteExactOutputSingle(\n                    QuoteExactOutputSingleParams({\n                        tokenIn: tokenIn,\n                        tokenOut: tokenOut,\n                        amount: amountOut,\n                        fee: fee,\n                        sqrtPriceLimitX96: 0\n                    })\n                );\n\n            sqrtPriceX96AfterList[i] = _sqrtPriceX96After;\n            initializedTicksCrossedList[i] = _initializedTicksCrossed;\n            amountOut = _amountIn;\n            gasEstimate += _gasEstimate;\n            i++;\n\n            // decide whether to continue or terminate\n            if (path.hasMultiplePools()) {\n                path = path.skipToken();\n            } else {\n                return (amountOut, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate);\n            }\n        }\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\nlibrary PoolTicksCounter {\n    /// @dev This function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter.\n    /// When tickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the\n    /// direction of the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do\n    /// want to count tickAfter. The opposite is true if we are swapping downwards.\n    function countInitializedTicksCrossed(\n        IUniswapV3Pool self,\n        int24 tickBefore,\n        int24 tickAfter\n    ) internal view returns (uint32 initializedTicksCrossed) {\n        int16 wordPosLower;\n        int16 wordPosHigher;\n        uint8 bitPosLower;\n        uint8 bitPosHigher;\n        bool tickBeforeInitialized;\n        bool tickAfterInitialized;\n\n        {\n            // Get the key and offset in the tick bitmap of the active tick before and after the swap.\n            int16 wordPos = int16((tickBefore / self.tickSpacing()) >> 8);\n            uint8 bitPos = uint8((tickBefore / self.tickSpacing()) % 256);\n\n            int16 wordPosAfter = int16((tickAfter / self.tickSpacing()) >> 8);\n            uint8 bitPosAfter = uint8((tickAfter / self.tickSpacing()) % 256);\n\n            // In the case where tickAfter is initialized, we only want to count it if we are swapping downwards.\n            // If the initializable tick after the swap is initialized, our original tickAfter is a\n            // multiple of tick spacing, and we are swapping downwards we know that tickAfter is initialized\n            // and we shouldn't count it.\n            tickAfterInitialized =\n                ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&\n                ((tickAfter % self.tickSpacing()) == 0) &&\n                (tickBefore > tickAfter);\n\n            // In the case where tickBefore is initialized, we only want to count it if we are swapping upwards.\n            // Use the same logic as above to decide whether we should count tickBefore or not.\n            tickBeforeInitialized =\n                ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&\n                ((tickBefore % self.tickSpacing()) == 0) &&\n                (tickBefore < tickAfter);\n\n            if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {\n                wordPosLower = wordPos;\n                bitPosLower = bitPos;\n                wordPosHigher = wordPosAfter;\n                bitPosHigher = bitPosAfter;\n            } else {\n                wordPosLower = wordPosAfter;\n                bitPosLower = bitPosAfter;\n                wordPosHigher = wordPos;\n                bitPosHigher = bitPos;\n            }\n        }\n\n        // Count the number of initialized ticks crossed by iterating through the tick bitmap.\n        // Our first mask should include the lower tick and everything to its left.\n        uint256 mask = type(uint256).max << bitPosLower;\n        while (wordPosLower <= wordPosHigher) {\n            // If we're on the final tick bitmap page, ensure we only count up to our\n            // ending tick.\n            if (wordPosLower == wordPosHigher) {\n                mask = mask & (type(uint256).max >> (255 - bitPosHigher));\n            }\n\n            uint256 masked = self.tickBitmap(wordPosLower) & mask;\n            initializedTicksCrossed += countOneBits(masked);\n            wordPosLower++;\n            // Reset our mask so we consider all bits on the next iteration.\n            mask = type(uint256).max;\n        }\n\n        if (tickAfterInitialized) {\n            initializedTicksCrossed -= 1;\n        }\n\n        if (tickBeforeInitialized) {\n            initializedTicksCrossed -= 1;\n        }\n\n        return initializedTicksCrossed;\n    }\n\n    function countOneBits(uint256 x) private pure returns (uint16) {\n        uint16 bits = 0;\n        while (x != 0) {\n            bits++;\n            x &= (x - 1);\n        }\n        return bits;\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport './PoolAddress.sol';\n\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\nlibrary CallbackValidation {\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The V3 pool contract address\n    function verifyCallback(\n        address factory,\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal view returns (IUniswapV3Pool pool) {\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\n    }\n\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param poolKey The identifying key of the V3 pool\n    /// @return pool The V3 pool contract address\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\n        internal\n        view\n        returns (IUniswapV3Pool pool)\n    {\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\n        require(msg.sender == address(pool));\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport './BytesLib.sol';\n\n/// @title Functions for manipulating path data for multihop swaps\nlibrary Path {\n    using BytesLib for bytes;\n\n    /// @dev The length of the bytes encoded address\n    uint256 private constant ADDR_SIZE = 20;\n    /// @dev The length of the bytes encoded fee\n    uint256 private constant FEE_SIZE = 3;\n\n    /// @dev The offset of a single token address and pool fee\n    uint256 private constant NEXT_OFFSET = ADDR_SIZE + FEE_SIZE;\n    /// @dev The offset of an encoded pool key\n    uint256 private constant POP_OFFSET = NEXT_OFFSET + ADDR_SIZE;\n    /// @dev The minimum length of an encoding that contains 2 or more pools\n    uint256 private constant MULTIPLE_POOLS_MIN_LENGTH = POP_OFFSET + NEXT_OFFSET;\n\n    /// @notice Returns true iff the path contains two or more pools\n    /// @param path The encoded swap path\n    /// @return True if path contains two or more pools, otherwise false\n    function hasMultiplePools(bytes memory path) internal pure returns (bool) {\n        return path.length >= MULTIPLE_POOLS_MIN_LENGTH;\n    }\n\n    /// @notice Returns the number of pools in the path\n    /// @param path The encoded swap path\n    /// @return The number of pools in the path\n    function numPools(bytes memory path) internal pure returns (uint256) {\n        // Ignore the first token address. From then on every fee and token offset indicates a pool.\n        return ((path.length - ADDR_SIZE) / NEXT_OFFSET);\n    }\n\n    /// @notice Decodes the first pool in path\n    /// @param path The bytes encoded swap path\n    /// @return tokenA The first token of the given pool\n    /// @return tokenB The second token of the given pool\n    /// @return fee The fee level of the pool\n    function decodeFirstPool(bytes memory path)\n        internal\n        pure\n        returns (\n            address tokenA,\n            address tokenB,\n            uint24 fee\n        )\n    {\n        tokenA = path.toAddress(0);\n        fee = path.toUint24(ADDR_SIZE);\n        tokenB = path.toAddress(NEXT_OFFSET);\n    }\n\n    /// @notice Gets the segment corresponding to the first pool in the path\n    /// @param path The bytes encoded swap path\n    /// @return The segment containing all data necessary to target the first pool in the path\n    function getFirstPool(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(0, POP_OFFSET);\n    }\n\n    /// @notice Skips a token + fee element from the buffer and returns the remainder\n    /// @param path The swap path\n    /// @return The remaining token + fee elements in the path\n    function skipToken(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET);\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '../interfaces/IPeripheryImmutableState.sol';\n\n/// @title Immutable state\n/// @notice Immutable state used by periphery contracts\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override factory;\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override WETH9;\n\n    constructor(address _factory, address _WETH9) {\n        factory = _factory;\n        WETH9 = _WETH9;\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title QuoterV2 Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n/// @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoterV2 {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        external\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        external\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport './BitMath.sol';\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing\n    ) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2**255);\n        z = int256(y);\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.5.0 <0.8.0;\n\nlibrary BytesLib {\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, 'slice_overflow');\n        require(_start + _length >= _start, 'slice_overflow');\n        require(_bytes.length >= _start + _length, 'slice_outOfBounds');\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n                case 0 {\n                    // Get a location of some free memory and store it in tempBytes as\n                    // Solidity does for memory variables.\n                    tempBytes := mload(0x40)\n\n                    // The first word of the slice result is potentially a partial\n                    // word read from the original array. To read it, we calculate\n                    // the length of that partial word and start copying that many\n                    // bytes into the array. The first word we copy will start with\n                    // data we don't care about, but the last `lengthmod` bytes will\n                    // land at the beginning of the contents of the new array. When\n                    // we're done copying, we overwrite the full first word with\n                    // the actual length of the slice.\n                    let lengthmod := and(_length, 31)\n\n                    // The multiplication in the next line is necessary\n                    // because when slicing multiples of 32 bytes (lengthmod == 0)\n                    // the following copy loop was copying the origin's length\n                    // and then ending prematurely not copying everything it should.\n                    let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                    let end := add(mc, _length)\n\n                    for {\n                        // The multiplication in the next line has the same exact purpose\n                        // as the one above.\n                        let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                    } lt(mc, end) {\n                        mc := add(mc, 0x20)\n                        cc := add(cc, 0x20)\n                    } {\n                        mstore(mc, mload(cc))\n                    }\n\n                    mstore(tempBytes, _length)\n\n                    //update free-memory pointer\n                    //allocating the array padded to 32 bytes like the compiler does now\n                    mstore(0x40, and(add(mc, 31), not(31)))\n                }\n                //if we want a zero-length slice let's just return a zero-length array\n                default {\n                    tempBytes := mload(0x40)\n                    //zero out the 32 bytes slice we are about to return\n                    //we need to do it because Solidity does not garbage collect\n                    mstore(tempBytes, 0)\n\n                    mstore(0x40, add(tempBytes, 0x20))\n                }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_start + 20 >= _start, 'toAddress_overflow');\n        require(_bytes.length >= _start + 20, 'toAddress_outOfBounds');\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {\n        require(_start + 3 >= _start, 'toUint24_overflow');\n        require(_bytes.length >= _start + 3, 'toUint24_outOfBounds');\n        uint24 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x3), _start))\n        }\n\n        return tempUint;\n    }\n}\n"
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9"
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory"
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\"},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\"}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96\",\"dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5\"]},\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"IQuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							}
						},
						"title": "QuoterV2 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}}},\"title\":\"QuoterV2 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":\"IQuoterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.",
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol": {
				"QuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"stateVariables": {
							"amountOutCached": {
								"details": "Transient storage variable used to check a safety condition in exact output swaps."
							}
						},
						"title": "Provides quotes for swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":983:10316  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  mstore(0x40, 0xc0)\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1309:1399  constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1379:1387  _factory */\n  dup2\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1389:1395  _WETH9 */\n  dup2\n    /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":532:540  _factory */\n  dup2\n    /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":522:540  factory = _factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":558:564  _WETH9 */\n  dup1\n    /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":550:564  WETH9 = _WETH9 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":466:571  constructor(address _factory, address _WETH9) {... */\n  pop\n  pop\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1309:1399  constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {} */\n  pop\n  pop\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":983:10316  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:596   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:262   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":308:309   */\n  0x00\n    /* \"#utility.yul\":305:306   */\n  dup1\n    /* \"#utility.yul\":298:310   */\n  revert\n    /* \"#utility.yul\":260:262   */\ntag_15:\n    /* \"#utility.yul\":351:352   */\n  0x00\n    /* \"#utility.yul\":376:440   */\n  tag_16\n    /* \"#utility.yul\":432:439   */\n  dup6\n    /* \"#utility.yul\":423:429   */\n  dup3\n    /* \"#utility.yul\":412:421   */\n  dup7\n    /* \"#utility.yul\":408:430   */\n  add\n    /* \"#utility.yul\":376:440   */\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":366:440   */\n  swap3\n  pop\n    /* \"#utility.yul\":322:450   */\n  pop\n    /* \"#utility.yul\":489:491   */\n  0x20\n    /* \"#utility.yul\":515:579   */\n  tag_17\n    /* \"#utility.yul\":571:578   */\n  dup6\n    /* \"#utility.yul\":562:568   */\n  dup3\n    /* \"#utility.yul\":551:560   */\n  dup7\n    /* \"#utility.yul\":547:569   */\n  add\n    /* \"#utility.yul\":515:579   */\n  tag_10\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":505:579   */\n  swap2\n  pop\n    /* \"#utility.yul\":460:589   */\n  pop\n    /* \"#utility.yul\":250:596   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":602:698   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":668:692   */\n  tag_20\n    /* \"#utility.yul\":686:691   */\n  dup3\n    /* \"#utility.yul\":668:692   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":657:692   */\n  swap1\n  pop\n    /* \"#utility.yul\":647:698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":704:830   */\ntag_21:\n  0x00\n    /* \"#utility.yul\":781:823   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":774:779   */\n  dup3\n    /* \"#utility.yul\":770:824   */\n  and\n    /* \"#utility.yul\":759:824   */\n  swap1\n  pop\n    /* \"#utility.yul\":749:830   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":836:958   */\ntag_13:\n    /* \"#utility.yul\":909:933   */\n  tag_24\n    /* \"#utility.yul\":927:932   */\n  dup2\n    /* \"#utility.yul\":909:933   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":902:907   */\n  dup2\n    /* \"#utility.yul\":899:934   */\n  eq\n    /* \"#utility.yul\":889:891   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":945:946   */\n  dup1\n    /* \"#utility.yul\":938:950   */\n  revert\n    /* \"#utility.yul\":889:891   */\ntag_25:\n    /* \"#utility.yul\":879:958   */\n  pop\n  jump\t// out\n    /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":983:10316  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\ntag_8:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n  assignImmutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":983:10316  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc45a0155\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc6a5026a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcdca1753\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfa461e33\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2f80bb1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbd21704a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8694:10314  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":420:459  address public immutable override WETH9 */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7313:8688  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":328:369  address public immutable override factory */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4579:5683  function quoteExactInputSingle(QuoteExactInputSingleParams memory params)... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5689:7307  function quoteExactInput(bytes memory path, uint256 amountIn)... */\n    tag_8:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1703:3308  function uniswapV3SwapCallback(... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8694:10314  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n    tag_14:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8820:8836  uint256 amountIn */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8850:8888  uint160[] memory sqrtPriceX96AfterList */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8902:8945  uint32[] memory initializedTicksCrossedList */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8959:8978  uint256 gasEstimate */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9041:9056  path.numPools() */\n      tag_44\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9041:9045  path */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9041:9054  path.numPools */\n      tag_45\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9041:9056  path.numPools() */\n      jump\t// in\n    tag_44:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9027:9057  new uint160[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9003:9057  sqrtPriceX96AfterList = new uint160[](path.numPools()) */\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9110:9125  path.numPools() */\n      tag_48\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9110:9114  path */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9110:9123  path.numPools */\n      tag_45\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9110:9125  path.numPools() */\n      jump\t// in\n    tag_48:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9097:9126  new uint32[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_50:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9067:9126  initializedTicksCrossedList = new uint32[](path.numPools()) */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9137:9146  uint256 i */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9160:10308  while (true) {... */\n    tag_51:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9167:9171  true */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9160:10308  while (true) {... */\n      iszero\n      tag_52\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9188:9204  address tokenOut */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9206:9221  address tokenIn */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9223:9233  uint24 fee */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9237:9259  path.decodeFirstPool() */\n      tag_53\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9237:9241  path */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9237:9257  path.decodeFirstPool */\n      tag_54\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9237:9259  path.decodeFirstPool() */\n      jump\t// in\n    tag_53:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9187:9259  (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9354:9371  uint256 _amountIn */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9373:9399  uint160 _sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9401:9432  uint32 _initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9434:9454  uint256 _gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9474:9797  quoteExactOutputSingle(... */\n      tag_55\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9582:9589  tokenIn */\n      dup9\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9625:9633  tokenOut */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9667:9676  amountOut */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9707:9710  fee */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9755:9756  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9518:9779  QuoteExactOutputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9474:9496  quoteExactOutputSingle */\n      tag_24\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9474:9797  quoteExactOutputSingle(... */\n      jump\t// in\n    tag_55:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9353:9797  (uint256 _amountIn, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9839:9857  _sqrtPriceX96After */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9812:9833  sqrtPriceX96AfterList */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9834:9835  i */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9812:9836  sqrtPriceX96AfterList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9812:9857  sqrtPriceX96AfterList[i] = _sqrtPriceX96After */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9904:9928  _initializedTicksCrossed */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9871:9898  initializedTicksCrossedList */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9899:9900  i */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9871:9901  initializedTicksCrossedList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9871:9928  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9954:9963  _amountIn */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9942:9963  amountOut = _amountIn */\n      swap13\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9992:10004  _gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9977:10004  gasEstimate += _gasEstimate */\n      dup10\n      add\n      swap9\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10018:10021  i++ */\n      dup8\n      dup1\n      0x01\n      add\n      swap9\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10095:10118  path.hasMultiplePools() */\n      tag_58\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10095:10099  path */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10095:10116  path.hasMultiplePools */\n      tag_59\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10095:10118  path.hasMultiplePools() */\n      jump\t// in\n    tag_58:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10091:10298  if (path.hasMultiplePools()) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10145:10161  path.skipToken() */\n      tag_61\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10145:10149  path */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10145:10159  path.skipToken */\n      tag_62\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10145:10161  path.skipToken() */\n      jump\t// in\n    tag_61:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10138:10161  path = path.skipToken() */\n      swap14\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10091:10298  if (path.hasMultiplePools()) {... */\n      jump(tag_63)\n    tag_60:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10208:10217  amountOut */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10200:10283  return (amountOut, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate) */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_43)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":10091:10298  if (path.hasMultiplePools()) {... */\n    tag_63:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":9160:10308  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_51)\n    tag_52:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8694:10314  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n      pop\n    tag_43:\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":420:459  address public immutable override WETH9 */\n    tag_18:\n      immutable(\"0x789bcdf275fa270780a52ae3b79bb1ce0fda7e0aaad87b57b74bb99ac290714a\")\n      dup2\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7313:8688  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n    tag_24:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7451:7467  uint256 amountIn */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7481:7506  uint160 sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7520:7550  uint32 initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7564:7583  uint256 gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7608:7623  bool zeroForOne */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7643:7649  params */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7643:7658  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7626:7658  params.tokenIn < params.tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7626:7632  params */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7626:7640  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7626:7658  params.tokenIn < params.tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7608:7658  bool zeroForOne = params.tokenIn < params.tokenOut */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7668:7687  IUniswapV3Pool pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7690:7742  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      tag_65\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7698:7704  params */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7698:7712  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7714:7720  params */\n      dup9\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7714:7729  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7731:7737  params */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7731:7741  params.fee */\n      0x60\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7690:7697  getPool */\n      tag_66\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7690:7742  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      jump\t// in\n    tag_65:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7668:7742  IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7894:7895  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7866:7872  params */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7866:7890  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7866:7895  params.sqrtPriceLimitX96 == 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7862:7928  if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount */\n      iszero\n      tag_67\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7915:7921  params */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7915:7928  params.amount */\n      0x40\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7897:7912  amountOutCached */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7897:7928  amountOutCached = params.amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7862:7928  if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount */\n    tag_67:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7938:7955  uint256 gasBefore */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7958:7967  gasleft() */\n      gas\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7938:7967  uint256 gasBefore = gasleft() */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7993:7997  pool */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7993:8002  pool.swap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x128acb08\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8028:8032  this */\n      address\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8101:8111  zeroForOne */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8130:8154  params.amount.toInt256() */\n      tag_68\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8130:8136  params */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8130:8143  params.amount */\n      0x40\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8130:8152  params.amount.toInt256 */\n      tag_69\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8130:8154  params.amount.toInt256() */\n      jump\t// in\n    tag_68:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8129:8154  -params.amount.toInt256() */\n      0x00\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8200:8201  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8178  params */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8196  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8201  params.sqrtPriceLimitX96 == 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8343  params.sqrtPriceLimitX96 == 0... */\n      tag_70\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8319:8325  params */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8319:8343  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8343  params.sqrtPriceLimitX96 == 0... */\n      jump(tag_71)\n    tag_70:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8225:8235  zeroForOne */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8225:8295  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_72\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8294:8295  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1004:1053  1461446703485210103287273052203988822378723970342 */\n      0xfffd8963efd1fc6a506488495d951d5263988d26\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8268:8295  TickMath.MAX_SQRT_RATIO - 1 */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8225:8295  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_73)\n    tag_72:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8264:8265  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":824:834  4295128739 */\n      0x01000276a3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8238:8265  TickMath.MIN_SQRT_RATIO + 1 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8225:8295  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_73:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8172:8343  params.sqrtPriceLimitX96 == 0... */\n    tag_71:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8378:8384  params */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8378:8393  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8395:8401  params */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8395:8405  params.fee */\n      0x60\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8407:8413  params */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8407:8421  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8361:8422  abi.encodePacked(params.tokenOut, params.fee, params.tokenIn) */\n      add(0x20, mload(0x40))\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7993:8436  pool.swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x01\n    tag_79:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7977:8682  try... */\n      tag_82\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_86\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_85)\n    tag_86:\n      0x60\n      swap2\n      pop\n    tag_85:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8516:8525  gasleft() */\n      gas\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8504:8513  gasBefore */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8504:8525  gasBefore - gasleft() */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8490:8525  gasEstimate = gasBefore - gasleft() */\n      swap5\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8571:8572  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8543:8549  params */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8543:8567  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8543:8572  params.sqrtPriceLimitX96 == 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8539:8596  if (params.sqrtPriceLimitX96 == 0) delete amountOutCached */\n      iszero\n      tag_87\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8581:8596  amountOutCached */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8574:8596  delete amountOutCached */\n      dup1\n      sstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8539:8596  if (params.sqrtPriceLimitX96 == 0) delete amountOutCached */\n    tag_87:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8632:8671  handleRevert(reason, pool, gasEstimate) */\n      tag_88\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8645:8651  reason */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8653:8657  pool */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8659:8670  gasEstimate */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8632:8644  handleRevert */\n      tag_89\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8632:8671  handleRevert(reason, pool, gasEstimate) */\n      jump\t// in\n    tag_88:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":8625:8671  return handleRevert(reason, pool, gasEstimate) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_64)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7977:8682  try... */\n    tag_82:\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7313:8688  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n      pop\n      pop\n      pop\n    tag_64:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":328:369  address public immutable override factory */\n    tag_28:\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n      dup2\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4579:5683  function quoteExactInputSingle(QuoteExactInputSingleParams memory params)... */\n    tag_33:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4715:4732  uint256 amountOut */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4746:4771  uint160 sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4785:4815  uint32 initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4829:4848  uint256 gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4873:4888  bool zeroForOne */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4908:4914  params */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4908:4923  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4891:4923  params.tokenIn < params.tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4891:4897  params */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4891:4905  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4891:4923  params.tokenIn < params.tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4873:4923  bool zeroForOne = params.tokenIn < params.tokenOut */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4933:4952  IUniswapV3Pool pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4955:5007  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      tag_92\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4963:4969  params */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4963:4977  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4979:4985  params */\n      dup9\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4979:4994  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4996:5002  params */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4996:5006  params.fee */\n      0x60\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4955:4962  getPool */\n      tag_66\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4955:5007  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      jump\t// in\n    tag_92:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4933:5007  IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5018:5035  uint256 gasBefore */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5038:5047  gasleft() */\n      gas\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5018:5047  uint256 gasBefore = gasleft() */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5073:5077  pool */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5073:5082  pool.swap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x128acb08\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5108:5112  this */\n      address\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5181:5191  zeroForOne */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5209:5235  params.amountIn.toInt256() */\n      tag_93\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5209:5215  params */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5209:5224  params.amountIn */\n      0x40\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5209:5233  params.amountIn.toInt256 */\n      tag_69\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5209:5235  params.amountIn.toInt256() */\n      jump\t// in\n    tag_93:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5281:5282  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5259  params */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5277  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5282  params.sqrtPriceLimitX96 == 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5424  params.sqrtPriceLimitX96 == 0... */\n      tag_94\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5400:5406  params */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5400:5424  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5424  params.sqrtPriceLimitX96 == 0... */\n      jump(tag_95)\n    tag_94:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5306:5316  zeroForOne */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5306:5376  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_96\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5375:5376  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1004:1053  1461446703485210103287273052203988822378723970342 */\n      0xfffd8963efd1fc6a506488495d951d5263988d26\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5349:5376  TickMath.MAX_SQRT_RATIO - 1 */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5306:5376  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_97)\n    tag_96:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5345:5346  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":824:834  4295128739 */\n      0x01000276a3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5319:5346  TickMath.MIN_SQRT_RATIO + 1 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5306:5376  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_97:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5253:5424  params.sqrtPriceLimitX96 == 0... */\n    tag_95:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5459:5465  params */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5459:5473  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5475:5481  params */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5475:5485  params.fee */\n      0x60\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5487:5493  params */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5487:5502  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5442:5503  abi.encodePacked(params.tokenIn, params.fee, params.tokenOut) */\n      add(0x20, mload(0x40))\n      tag_98\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5073:5517  pool.swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_99:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_102:\n      0x01\n    tag_101:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5057:5677  try... */\n      tag_103\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_107\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_106)\n    tag_107:\n      0x60\n      swap2\n      pop\n    tag_106:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5597:5606  gasleft() */\n      gas\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5585:5594  gasBefore */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5585:5606  gasBefore - gasleft() */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5571:5606  gasEstimate = gasBefore - gasleft() */\n      swap5\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5627:5666  handleRevert(reason, pool, gasEstimate) */\n      tag_108\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5640:5646  reason */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5648:5652  pool */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5654:5665  gasEstimate */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5627:5639  handleRevert */\n      tag_89\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5627:5666  handleRevert(reason, pool, gasEstimate) */\n      jump\t// in\n    tag_108:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5620:5666  return handleRevert(reason, pool, gasEstimate) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_91)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5057:5677  try... */\n    tag_103:\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4579:5683  function quoteExactInputSingle(QuoteExactInputSingleParams memory params)... */\n      pop\n      pop\n      pop\n    tag_91:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5689:7307  function quoteExactInput(bytes memory path, uint256 amountIn)... */\n    tag_37:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5813:5830  uint256 amountOut */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5844:5882  uint160[] memory sqrtPriceX96AfterList */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5896:5939  uint32[] memory initializedTicksCrossedList */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5953:5972  uint256 gasEstimate */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6035:6050  path.numPools() */\n      tag_111\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6035:6039  path */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6035:6048  path.numPools */\n      tag_45\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6035:6050  path.numPools() */\n      jump\t// in\n    tag_111:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6021:6051  new uint160[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_113:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5997:6051  sqrtPriceX96AfterList = new uint160[](path.numPools()) */\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6104:6119  path.numPools() */\n      tag_114\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6104:6108  path */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6104:6117  path.numPools */\n      tag_45\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6104:6119  path.numPools() */\n      jump\t// in\n    tag_114:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6091:6120  new uint32[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_116:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6061:6120  initializedTicksCrossedList = new uint32[](path.numPools()) */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6131:6140  uint256 i */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6154:7301  while (true) {... */\n    tag_117:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6161:6165  true */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6154:7301  while (true) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6182:6197  address tokenIn */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6199:6215  address tokenOut */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6217:6227  uint24 fee */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6231:6253  path.decodeFirstPool() */\n      tag_119\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6231:6235  path */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6231:6251  path.decodeFirstPool */\n      tag_54\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6231:6253  path.decodeFirstPool() */\n      jump\t// in\n    tag_119:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6181:6253  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6348:6366  uint256 _amountOut */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6368:6394  uint160 _sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6396:6427  uint32 _initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6429:6449  uint256 _gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6469:6791  quoteExactInputSingle(... */\n      tag_120\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6575:6582  tokenIn */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6618:6626  tokenOut */\n      dup9\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6696:6704  amountIn */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6657:6660  fee */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6749:6750  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6512:6773  QuoteExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6469:6490  quoteExactInputSingle */\n      tag_33\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6469:6791  quoteExactInputSingle(... */\n      jump\t// in\n    tag_120:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6347:6791  (uint256 _amountOut, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6833:6851  _sqrtPriceX96After */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6806:6827  sqrtPriceX96AfterList */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6828:6829  i */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6806:6830  sqrtPriceX96AfterList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6806:6851  sqrtPriceX96AfterList[i] = _sqrtPriceX96After */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6898:6922  _initializedTicksCrossed */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6865:6892  initializedTicksCrossedList */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6893:6894  i */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6865:6895  initializedTicksCrossedList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6865:6922  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6947:6957  _amountOut */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6936:6957  amountIn = _amountOut */\n      swap13\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6986:6998  _gasEstimate */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6971:6998  gasEstimate += _gasEstimate */\n      dup10\n      add\n      swap9\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7012:7015  i++ */\n      dup8\n      dup1\n      0x01\n      add\n      swap9\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7089:7112  path.hasMultiplePools() */\n      tag_123\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7089:7093  path */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7089:7110  path.hasMultiplePools */\n      tag_59\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7089:7112  path.hasMultiplePools() */\n      jump\t// in\n    tag_123:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7085:7291  if (path.hasMultiplePools()) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7139:7155  path.skipToken() */\n      tag_125\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7139:7143  path */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7139:7153  path.skipToken */\n      tag_62\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7139:7155  path.skipToken() */\n      jump\t// in\n    tag_125:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7132:7155  path = path.skipToken() */\n      swap14\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7085:7291  if (path.hasMultiplePools()) {... */\n      jump(tag_126)\n    tag_124:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7202:7210  amountIn */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7194:7276  return (amountIn, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate) */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_110)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":7085:7291  if (path.hasMultiplePools()) {... */\n    tag_126:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":6154:7301  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_117)\n    tag_118:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":5689:7307  function quoteExactInput(bytes memory path, uint256 amountIn)... */\n      pop\n    tag_110:\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1703:3308  function uniswapV3SwapCallback(... */\n    tag_42:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1881:1882  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1866:1878  amount0Delta */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1866:1882  amount0Delta > 0 */\n      sgt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1866:1902  amount0Delta > 0 || amount1Delta > 0 */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1901:1902  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1886:1898  amount1Delta */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1886:1902  amount1Delta > 0 */\n      sgt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1866:1902  amount0Delta > 0 || amount1Delta > 0 */\n    tag_128:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1858:1903  require(amount0Delta > 0 || amount1Delta > 0) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1977:1992  address tokenIn */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1994:2010  address tokenOut */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2012:2022  uint24 fee */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2026:2048  path.decodeFirstPool() */\n      tag_130\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2026:2030  path */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2026:2046  path.decodeFirstPool */\n      tag_54\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2026:2048  path.decodeFirstPool() */\n      jump\t// in\n    tag_130:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1976:2048  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2058:2124  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      tag_131\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2092:2099  factory */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2101:2108  tokenIn */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2110:2118  tokenOut */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2120:2123  fee */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2058:2091  CallbackValidation.verifyCallback */\n      tag_132\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2058:2124  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2136:2153  bool isExactInput */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2155:2174  uint256 amountToPay */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2176:2198  uint256 amountReceived */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2229:2230  0 */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2214:2226  amount0Delta */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2214:2230  amount0Delta > 0 */\n      sgt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2214:2402  amount0Delta > 0... */\n      tag_133\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2347:2354  tokenIn */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2336:2354  tokenOut < tokenIn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2336:2344  tokenOut */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2336:2354  tokenOut < tokenIn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2364:2376  amount1Delta */\n      dup9\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2388:2400  amount0Delta */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2387:2400  -amount0Delta */\n      0x00\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2214:2402  amount0Delta > 0... */\n      jump(tag_134)\n    tag_133:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2260:2268  tokenOut */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2250:2268  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2250:2257  tokenIn */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2250:2268  tokenIn < tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2278:2290  amount0Delta */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2302:2314  amount1Delta */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2301:2314  -amount1Delta */\n      0x00\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2214:2402  amount0Delta > 0... */\n    tag_134:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2135:2402  (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2413:2432  IUniswapV3Pool pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2435:2466  getPool(tokenIn, tokenOut, fee) */\n      tag_135\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2443:2450  tokenIn */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2452:2460  tokenOut */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2462:2465  fee */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2435:2442  getPool */\n      tag_66\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2435:2466  getPool(tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_135:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2413:2466  IUniswapV3Pool pool = getPool(tokenIn, tokenOut, fee) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2477:2502  uint160 sqrtPriceX96After */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2504:2519  int24 tickAfter */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2533:2537  pool */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2533:2543  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2533:2545  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2476:2545  (uint160 sqrtPriceX96After, int24 tickAfter, , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2560:2572  isExactInput */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2556:3302  if (isExactInput) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2632:2636  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2626:2637  mload(0x40) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2666:2680  amountReceived */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2661:2664  ptr */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2654:2681  mstore(ptr, amountReceived) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2721:2738  sqrtPriceX96After */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2714:2718  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2709:2712  ptr */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2705:2719  add(ptr, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2698:2739  mstore(add(ptr, 0x20), sqrtPriceX96After) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2779:2788  tickAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2772:2776  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2767:2770  ptr */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2763:2777  add(ptr, 0x40) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2756:2789  mstore(add(ptr, 0x40), tickAfter) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2818:2820  96 */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2813:2816  ptr */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2806:2821  revert(ptr, 96) */\n      revert\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2597:2835  {... */\n    tag_141:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2989:2990  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2970:2985  amountOutCached */\n      dup1\n      sload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2970:2990  amountOutCached != 0 */\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2966:3034  if (amountOutCached != 0) require(amountReceived == amountOutCached) */\n      tag_143\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3018:3033  amountOutCached */\n      sload(0x00)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3000:3014  amountReceived */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3000:3033  amountReceived == amountOutCached */\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2992:3034  require(amountReceived == amountOutCached) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":2966:3034  if (amountOutCached != 0) require(amountReceived == amountOutCached) */\n    tag_143:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3092:3096  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3086:3097  mload(0x40) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3126:3137  amountToPay */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3121:3124  ptr */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3114:3138  mstore(ptr, amountToPay) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3178:3195  sqrtPriceX96After */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3171:3175  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3166:3169  ptr */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3162:3176  add(ptr, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3155:3196  mstore(add(ptr, 0x20), sqrtPriceX96After) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3236:3245  tickAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3229:3233  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3224:3227  ptr */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3220:3234  add(ptr, 0x40) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3213:3246  mstore(add(ptr, 0x40), tickAfter) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3275:3277  96 */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3270:3273  ptr */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3263:3278  revert(ptr, 96) */\n      revert\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1282:1517  function numPools(bytes memory path) internal pure returns (uint256) {... */\n    tag_45:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1342:1349  uint256 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1471:1475  path */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1471:1482  path.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1471:1494  path.length - ADDR_SIZE */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1470:1509  (path.length - ADDR_SIZE) / NEXT_OFFSET */\n      dup2\n      tag_146\n      jumpi\n      invalid\n    tag_146:\n      div\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1462:1510  return ((path.length - ADDR_SIZE) / NEXT_OFFSET) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1282:1517  function numPools(bytes memory path) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1779:2093  function decodeFirstPool(bytes memory path)... */\n    tag_54:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1883:1897  address tokenA */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1911:1925  address tokenB */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1939:1949  uint24 fee */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:2000  path.toAddress(0) */\n      tag_148\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1998:1999  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:1987  path */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:1997  path.toAddress */\n      tag_149\n      swap1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:2000  path.toAddress(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1974:2000  tokenA = path.toAddress(0) */\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2040  path.toUint24(ADDR_SIZE) */\n      tag_150\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2020  path */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2029  path.toUint24 */\n      tag_151\n      swap1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2040  path.toUint24(ADDR_SIZE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2010:2040  fee = path.toUint24(ADDR_SIZE) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2086  path.toAddress(NEXT_OFFSET) */\n      tag_152\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2063  path */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2073  path.toAddress */\n      tag_149\n      swap1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2086  path.toAddress(NEXT_OFFSET) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2050:2086  tokenB = path.toAddress(NEXT_OFFSET) */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1779:2093  function decodeFirstPool(bytes memory path)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":992:1130  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n    tag_59:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1060:1064  bool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":618:641  NEXT_OFFSET + ADDR_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":777:801  POP_OFFSET + NEXT_OFFSET */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1083:1087  path */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1083:1094  path.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1083:1123  path.length >= MULTIPLE_POOLS_MIN_LENGTH */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":1076:1123  return path.length >= MULTIPLE_POOLS_MIN_LENGTH */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":992:1130  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2635:2784  function skipToken(bytes memory path) internal pure returns (bytes memory) {... */\n    tag_62:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2696:2708  bytes memory */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2727:2777  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      tag_155\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2751:2755  path */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2751:2762  path.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2751:2776  path.length - NEXT_OFFSET */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2727:2731  path */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2727:2737  path.slice */\n      tag_156\n      swap1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2727:2777  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2720:2777  return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":2635:2784  function skipToken(bytes memory path) internal pure returns (bytes memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1405:1654  function getPool(... */\n    tag_66:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1518:1532  IUniswapV3Pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1566:1646  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_158\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1593:1600  factory */\n      immutable(\"0xd2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb\")\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1602:1645  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_159\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1625:1631  tokenA */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1633:1639  tokenB */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1641:1644  fee */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1602:1624  PoolAddress.getPoolKey */\n      tag_160\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1602:1645  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_159:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1566:1592  PoolAddress.computeAddress */\n      tag_161\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1566:1646  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n    tag_158:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1544:1647  return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee))) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":1405:1654  function getPool(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":924:1045  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n    tag_69:\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":976:984  int256 z */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":1008:1014  2**255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":1004:1005  y */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":1004:1014  y < 2**255 */\n      lt\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":996:1015  require(y < 2**255) */\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":1036:1037  y */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":1025:1038  z = int256(y) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":924:1045  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3907:4573  function handleRevert(... */\n    tag_89:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4081:4095  uint256 amount */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4109:4134  uint160 sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4148:4178  uint32 initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4192:4199  uint256 */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4224:4240  int24 tickBefore */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4250:4265  int24 tickAfter */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4302:4306  pool */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4302:4312  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4302:4314  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_168:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4275:4314  (, tickBefore, , , , , ) = pool.slot0() */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      pop\n      swap1\n      swap2\n      swap3\n      pop\n      swap1\n      swap2\n      pop\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4365:4390  parseRevertReason(reason) */\n      tag_169\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4383:4389  reason */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4365:4382  parseRevertReason */\n      tag_170\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4365:4390  parseRevertReason(reason) */\n      jump\t// in\n    tag_169:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4324:4390  (amount, sqrtPriceX96After, tickAfter) = parseRevertReason(reason) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap8\n      pop\n      dup3\n      swap9\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4427:4483  pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      tag_171\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4461:4471  tickBefore */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4473:4482  tickAfter */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4427:4431  pool */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4427:4460  pool.countInitializedTicksCrossed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4427:4483  pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4401:4483  initializedTicksCrossed = pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      swap4\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4502:4508  amount */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4510:4527  sqrtPriceX96After */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4529:4552  initializedTicksCrossed */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4554:4565  gasEstimate */\n      dup10\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":4494:4566  return (amount, sqrtPriceX96After, initializedTicksCrossed, gasEstimate) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3907:4573  function handleRevert(... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":683:942  function verifyCallback(... */\n    tag_132:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":829:848  IUniswapV3Pool pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":867:935  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_174\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":882:889  factory */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":891:934  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_175\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":914:920  tokenA */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":922:928  tokenB */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":930:933  fee */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":891:913  PoolAddress.getPoolKey */\n      tag_160\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":891:934  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_175:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":867:881  verifyCallback */\n      tag_176\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":867:935  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n    tag_174:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":860:935  return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":683:942  function verifyCallback(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3412:3828  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n    tag_149:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3491:3498  address */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3533:3539  _start */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3527:3529  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3524  _start */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3529  _start + 20 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3539  _start + 20 >= _start */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3510:3562  require(_start + 20 >= _start, 'toAddress_overflow') */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f416464726573735f6f766572666c6f770000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3606:3608  20 */\n      0x14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3597:3603  _start */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3597:3608  _start + 20 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3586  _bytes */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3593  _bytes.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3608  _bytes.length >= _start + 20 */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3572:3634  require(_bytes.length >= _start + 20, 'toAddress_outOfBounds') */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f416464726573735f6f75744f66426f756e64730000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3644:3663  address tempAddress */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3755:3782  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3745:3751  _start */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3738:3742  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3730:3736  _bytes */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3726:3743  add(_bytes, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3722:3752  add(add(_bytes, 0x20), _start) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3716:3753  mload(add(add(_bytes, 0x20), _start)) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3712:3783  div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      div\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3697:3783  tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3810:3821  tempAddress */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3803:3821  return tempAddress */\n      swap2\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3412:3828  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3834:4199  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n    tag_151:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3912:3918  uint24 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3952:3958  _start */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3947:3948  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3944  _start */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3948  _start + 3 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3958  _start + 3 >= _start */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3930:3980  require(_start + 3 >= _start, 'toUint24_overflow') */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f55696e7432345f6f766572666c6f77000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4024:4025  3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4015:4021  _start */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4015:4025  _start + 3 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4004  _bytes */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4011  _bytes.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4025  _bytes.length >= _start + 3 */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3990:4050  require(_bytes.length >= _start + 3, 'toUint24_outOfBounds') */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f55696e7432345f6f75744f66426f756e6473000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4060:4075  uint24 tempUint */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4149:4155  _start */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4143:4146  0x3 */\n      0x03\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4135:4141  _bytes */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4131:4147  add(_bytes, 0x3) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4127:4156  add(add(_bytes, 0x3), _start) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4121:4157  mload(add(add(_bytes, 0x3), _start)) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4109:4157  tempUint := mload(add(add(_bytes, 0x3), _start)) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4184:4192  tempUint */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4177:4192  return tempUint */\n      swap2\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3834:4199  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":399:3406  function slice(... */\n    tag_156:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":521:533  bytes memory */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":569:576  _length */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":563:565  31 */\n      0x1f\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":553:560  _length */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":553:565  _length + 31 */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":553:576  _length + 31 >= _length */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":545:595  require(_length + 31 >= _length, 'slice_overflow') */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x736c6963655f6f766572666c6f77000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":633:639  _start */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":622:629  _length */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":613:619  _start */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":613:629  _start + _length */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":613:639  _start + _length >= _start */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":605:658  require(_start + _length >= _start, 'slice_overflow') */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x736c6963655f6f766572666c6f77000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":702:709  _length */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":693:699  _start */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":693:709  _start + _length */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":676:682  _bytes */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":676:689  _bytes.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":676:709  _bytes.length >= _start + _length */\n      lt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":668:731  require(_bytes.length >= _start + _length, 'slice_outOfBounds') */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x736c6963655f6f75744f66426f756e6473000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":742:764  bytes memory tempBytes */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":812:819  _length */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":805:820  iszero(_length) */\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":842:843  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":837:2936  case 0 {... */\n      dup2\n      eq\n      tag_188\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3089:3093  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3083:3094  mload(0x40) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3070:3094  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3287:3288  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3276:3285  tempBytes */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3269:3289  mstore(tempBytes, 0) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3339:3343  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3328:3337  tempBytes */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3324:3344  add(tempBytes, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3318:3322  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3311:3345  mstore(0x40, add(tempBytes, 0x20)) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":798:3363  switch iszero(_length)... */\n      jump(tag_187)\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":837:2936  case 0 {... */\n    tag_188:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1031:1035  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1025:1036  mload(0x40) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1012:1036  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1726:1728  31 */\n      0x1f\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1717:1724  _length */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":1713:1729  and(_length, 31) */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2128:2137  lengthmod */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2121:2138  iszero(lengthmod) */\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2115:2119  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2111:2139  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2099:2108  lengthmod */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2088:2097  tempBytes */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2084:2109  add(tempBytes, lengthmod) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2080:2140  add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2180:2187  _length */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2176:2178  mc */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2172:2188  add(mc, _length) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2448:2454  _start */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2434:2443  lengthmod */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2427:2444  iszero(lengthmod) */\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2421:2425  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2417:2445  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2405:2414  lengthmod */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2397:2403  _bytes */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2393:2415  add(_bytes, lengthmod) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2389:2446  add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2385:2455  add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2210:2671  for {... */\n    tag_189:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2485:2488  end */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2481:2483  mc */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2478:2489  lt(mc, end) */\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2210:2671  for {... */\n      iszero\n      tag_191\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2645:2647  cc */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2639:2648  mload(cc) */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2635:2637  mc */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2628:2649  mstore(mc, mload(cc)) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2530:2534  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2526:2528  mc */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2522:2535  add(mc, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2516:2535  mc := add(mc, 0x20) */\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2574:2578  0x20 */\n      0x20\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2570:2572  cc */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2566:2579  add(cc, 0x20) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2560:2579  cc := add(cc, 0x20) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2210:2671  for {... */\n      jump(tag_189)\n    tag_191:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2214:2477  {... */\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2711:2718  _length */\n      dup7\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2700:2709  tempBytes */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2693:2719  mstore(tempBytes, _length) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2913:2915  31 */\n      0x1f\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2909:2916  not(31) */\n      not\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2904:2906  31 */\n      0x1f\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2900:2902  mc */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2896:2907  add(mc, 31) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2892:2917  and(add(mc, 31), not(31)) */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2886:2890  0x40 */\n      0x40\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":2879:2918  mstore(0x40, and(add(mc, 31), not(31))) */\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":844:2936  {... */\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":798:3363  switch iszero(_length)... */\n    tag_187:\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3390:3399  tempBytes */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3383:3399  return tempBytes */\n      swap2\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":399:3406  function slice(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":784:1058  function getPoolKey(... */\n    tag_160:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":901:915  PoolKey memory */\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":940:946  tokenB */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":931:946  tokenA > tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":931:937  tokenA */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":931:946  tokenA > tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":927:983  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n      iszero\n      tag_195\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":968:974  tokenB */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":976:982  tokenA */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":948:983  (tokenA, tokenB) = (tokenB, tokenA) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":927:983  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n    tag_195:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1000:1051  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1017:1023  tokenA */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1000:1051  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1033:1039  tokenB */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1000:1051  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1046:1049  fee */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1000:1051  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":993:1051  return PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":784:1058  function getPoolKey(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1305:1817  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n    tag_161:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1389:1401  address pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1434:1437  key */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1434:1444  key.token1 */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1444  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1424  key */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1431  key.token0 */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1421:1444  key.token0 < key.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1413:1445  require(key.token0 < key.token1) */\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1614:1621  factory */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1668:1671  key */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1668:1678  key.token0 */\n      0x00\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1680:1683  key */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1680:1690  key.token1 */\n      0x20\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1692:1695  key */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1692:1699  key.fee */\n      0x40\n      add\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1657:1700  abi.encode(key.token0, key.token1, key.fee) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1647:1701  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":241:307  0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54 */\n      0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1727:1746  POOL_INIT_CODE_HASH */\n      0x00\n      shl\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1539:1768  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1508:1786  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1483:1800  uint256(... */\n      0x00\n      shr\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1455:1810  pool = address(... */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":1305:1817  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3388:3901  function parseRevertReason(bytes memory reason)... */\n    tag_170:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3495:3509  uint256 amount */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3523:3548  uint160 sqrtPriceX96After */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3562:3577  int24 tickAfter */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3623:3625  96 */\n      0x60\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3606:3612  reason */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3606:3619  reason.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3606:3625  reason.length != 96 */\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3602:3833  if (reason.length != 96) {... */\n      tag_199\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3661:3663  68 */\n      0x44\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3645:3651  reason */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3645:3658  reason.length */\n      mload\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3645:3663  reason.length < 68 */\n      lt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3641:3691  if (reason.length < 68) revert('Unexpected error') */\n      iszero\n      tag_200\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3665:3691  revert('Unexpected error') */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3641:3691  if (reason.length < 68) revert('Unexpected error') */\n    tag_200:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3754:3758  0x04 */\n      0x04\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3746:3752  reason */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3742:3759  add(reason, 0x04) */\n      add\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3732:3759  reason := add(reason, 0x04) */\n      swap4\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3804:3810  reason */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3793:3821  abi.decode(reason, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3786:3822  revert(abi.decode(reason, (string))) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3602:3833  if (reason.length != 96) {... */\n    tag_199:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3860:3866  reason */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3849:3894  abi.decode(reason, (uint256, uint160, int24)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3842:3894  return abi.decode(reason, (uint256, uint160, int24)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":3388:3901  function parseRevertReason(bytes memory reason)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":637:3942  function countInitializedTicksCrossed(... */\n    tag_172:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":784:814  uint32 initializedTicksCrossed */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":826:844  int16 wordPosLower */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":854:873  int16 wordPosHigher */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":883:900  uint8 bitPosLower */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":910:928  uint8 bitPosHigher */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":938:964  bool tickBeforeInitialized */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":974:999  bool tickAfterInitialized */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1127:1140  int16 wordPos */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1186:1187  8 */\n      0x08\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1163:1167  self */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1163:1179  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1163:1181  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1150:1181  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1150:1160  tickBefore */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1150:1181  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_214\n      jumpi\n      invalid\n    tag_214:\n      sdiv\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1149:1187  (tickBefore / self.tickSpacing()) >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1127:1188  int16 wordPos = int16((tickBefore / self.tickSpacing()) >> 8) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1202:1214  uint8 bitPos */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1259:1262  256 */\n      0x0100\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1237:1241  self */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1237:1253  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1237:1255  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1224:1255  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1224:1234  tickBefore */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1224:1255  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_219\n      jumpi\n      invalid\n    tag_219:\n      sdiv\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1223:1262  (tickBefore / self.tickSpacing()) % 256 */\n      0x02\n      signextend\n      dup2\n      tag_220\n      jumpi\n      invalid\n    tag_220:\n      smod\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1202:1263  uint8 bitPos = uint8((tickBefore / self.tickSpacing()) % 256) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1278:1296  int16 wordPosAfter */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1341:1342  8 */\n      0x08\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1318:1322  self */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1318:1334  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1318:1336  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1306:1336  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1306:1315  tickAfter */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1306:1336  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_225\n      jumpi\n      invalid\n    tag_225:\n      sdiv\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1305:1342  (tickAfter / self.tickSpacing()) >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1278:1343  int16 wordPosAfter = int16((tickAfter / self.tickSpacing()) >> 8) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1357:1374  uint8 bitPosAfter */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1418:1421  256 */\n      0x0100\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1396:1400  self */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1396:1412  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1396:1414  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1384:1414  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1384:1393  tickAfter */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1384:1414  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_230\n      jumpi\n      invalid\n    tag_230:\n      sdiv\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1383:1421  (tickAfter / self.tickSpacing()) % 256 */\n      0x02\n      signextend\n      dup2\n      tag_231\n      jumpi\n      invalid\n    tag_231:\n      smod\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1357:1422  uint8 bitPosAfter = uint8((tickAfter / self.tickSpacing()) % 256) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1897:1898  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1881:1892  bitPosAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1876:1892  1 << bitPosAfter */\n      0xff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1876:1877  1 */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1876:1892  1 << bitPosAfter */\n      swap1\n      shl\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1843:1847  self */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1843:1858  self.tickBitmap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5339c296\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1859:1871  wordPosAfter */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1843:1872  self.tickBitmap(wordPosAfter) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1843:1893  self.tickBitmap(wordPosAfter) & (1 << bitPosAfter) */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1842:1898  (self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0 */\n      gt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1841:1958  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1956:1957  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1933:1937  self */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1933:1949  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1933:1951  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1921:1951  tickAfter % self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1921:1930  tickAfter */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1921:1951  tickAfter % self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      smod\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1920:1957  (tickAfter % self.tickSpacing()) == 0 */\n      0x02\n      signextend\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1841:1958  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n    tag_236:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1841:2002  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1992:2001  tickAfter */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1979:2001  tickBefore > tickAfter */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1979:1989  tickBefore */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1979:2001  tickBefore > tickAfter */\n      0x02\n      signextend\n      sgt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1841:2002  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n    tag_242:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":1802:2002  tickAfterInitialized =... */\n      swap5\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2312:2313  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2301:2307  bitPos */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2296:2307  1 << bitPos */\n      0xff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2296:2297  1 */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2296:2307  1 << bitPos */\n      swap1\n      shl\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2268:2272  self */\n      dup16\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2268:2283  self.tickBitmap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5339c296\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2284:2291  wordPos */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2268:2292  self.tickBitmap(wordPos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2268:2308  self.tickBitmap(wordPos) & (1 << bitPos) */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2267:2313  (self.tickBitmap(wordPos) & (1 << bitPos)) > 0 */\n      gt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2266:2374  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2372:2373  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2349:2353  self */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2349:2365  self.tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2349:2367  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2336:2367  tickBefore % self.tickSpacing() */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2336:2346  tickBefore */\n      dup15\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2336:2367  tickBefore % self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_252\n      jumpi\n      invalid\n    tag_252:\n      smod\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2335:2373  (tickBefore % self.tickSpacing()) == 0 */\n      0x02\n      signextend\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2266:2374  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n    tag_247:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2266:2418  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2408:2417  tickAfter */\n      dup12\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2395:2417  tickBefore < tickAfter */\n      0x02\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2395:2405  tickBefore */\n      dup14\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2395:2417  tickBefore < tickAfter */\n      0x02\n      signextend\n      slt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2266:2418  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n    tag_253:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2226:2418  tickBeforeInitialized =... */\n      swap6\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2447:2459  wordPosAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2437:2459  wordPos < wordPosAfter */\n      0x01\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2437:2444  wordPos */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2437:2459  wordPos < wordPosAfter */\n      0x01\n      signextend\n      slt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2437:2513  wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter) */\n      dup1\n      tag_254\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2475:2487  wordPosAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2464:2487  wordPos == wordPosAfter */\n      0x01\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2464:2471  wordPos */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2464:2487  wordPos == wordPosAfter */\n      0x01\n      signextend\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2464:2512  wordPos == wordPosAfter && bitPos <= bitPosAfter */\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2501:2512  bitPosAfter */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2491:2512  bitPos <= bitPosAfter */\n      0xff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2491:2497  bitPos */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2491:2512  bitPos <= bitPosAfter */\n      0xff\n      and\n      gt\n      iszero\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2464:2512  wordPos == wordPosAfter && bitPos <= bitPosAfter */\n    tag_255:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2437:2513  wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter) */\n    tag_254:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2433:2887  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2548:2555  wordPos */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2533:2555  wordPosLower = wordPos */\n      swap10\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2587:2593  bitPos */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2573:2593  bitPosLower = bitPos */\n      swap8\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2627:2639  wordPosAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2611:2639  wordPosHigher = wordPosAfter */\n      swap9\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2672:2683  bitPosAfter */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2657:2683  bitPosHigher = bitPosAfter */\n      swap7\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2433:2887  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n      jump(tag_257)\n    tag_256:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2737:2749  wordPosAfter */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2722:2749  wordPosLower = wordPosAfter */\n      swap10\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2781:2792  bitPosAfter */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2767:2792  bitPosLower = bitPosAfter */\n      swap8\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2826:2833  wordPos */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2810:2833  wordPosHigher = wordPos */\n      swap9\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2866:2872  bitPos */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2851:2872  bitPosHigher = bitPos */\n      swap7\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":2433:2887  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n    tag_257:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":637:3942  function countInitializedTicksCrossed(... */\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3086:3098  uint256 mask */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3122:3133  bitPosLower */\n      dup5\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3101:3133  type(uint256).max << bitPosLower */\n      0xff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3101:3118  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3101:3133  type(uint256).max << bitPosLower */\n      swap1\n      shl\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3086:3133  uint256 mask = type(uint256).max << bitPosLower */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3143:3716  while (wordPosLower <= wordPosHigher) {... */\n    tag_258:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3166:3179  wordPosHigher */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3150:3179  wordPosLower <= wordPosHigher */\n      0x01\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3150:3162  wordPosLower */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3150:3179  wordPosLower <= wordPosHigher */\n      0x01\n      signextend\n      sgt\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3143:3716  while (wordPosLower <= wordPosHigher) {... */\n      tag_259\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3329:3342  wordPosHigher */\n      dup6\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3313:3342  wordPosLower == wordPosHigher */\n      0x01\n      signextend\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3313:3325  wordPosLower */\n      dup8\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3313:3342  wordPosLower == wordPosHigher */\n      0x01\n      signextend\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3309:3434  if (wordPosLower == wordPosHigher) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3405:3417  bitPosHigher */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3399:3402  255 */\n      0xff\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3399:3417  255 - bitPosHigher */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3377:3418  type(uint256).max >> (255 - bitPosHigher) */\n      0xff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3377:3394  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3377:3418  type(uint256).max >> (255 - bitPosHigher) */\n      swap1\n      shr\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3369:3373  mask */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3369:3419  mask & (type(uint256).max >> (255 - bitPosHigher)) */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3362:3419  mask = mask & (type(uint256).max >> (255 - bitPosHigher)) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3309:3434  if (wordPosLower == wordPosHigher) {... */\n    tag_260:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3448:3462  uint256 masked */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3497:3501  mask */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3465:3469  self */\n      dup13\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3465:3480  self.tickBitmap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5339c296\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3481:3493  wordPosLower */\n      dup11\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3465:3494  self.tickBitmap(wordPosLower) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3465:3501  self.tickBitmap(wordPosLower) & mask */\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3448:3501  uint256 masked = self.tickBitmap(wordPosLower) & mask */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3542:3562  countOneBits(masked) */\n      tag_265\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3555:3561  masked */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3542:3554  countOneBits */\n      tag_266\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3542:3562  countOneBits(masked) */\n      jump\t// in\n    tag_265:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3515:3562  initializedTicksCrossed += countOneBits(masked) */\n      0xffff\n      and\n      dup10\n      add\n      swap9\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3576:3590  wordPosLower++ */\n      dup8\n      dup1\n      0x01\n      add\n      swap9\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3688:3705  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3681:3705  mask = type(uint256).max */\n      swap2\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3143:3716  while (wordPosLower <= wordPosHigher) {... */\n      pop\n      jump(tag_258)\n    tag_259:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3730:3750  tickAfterInitialized */\n      dup2\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3726:3805  if (tickAfterInitialized) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3793:3794  1 */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3766:3794  initializedTicksCrossed -= 1 */\n      dup9\n      sub\n      swap8\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3726:3805  if (tickAfterInitialized) {... */\n    tag_267:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3819:3840  tickBeforeInitialized */\n      dup3\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3815:3895  if (tickBeforeInitialized) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3883:3884  1 */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3856:3884  initializedTicksCrossed -= 1 */\n      dup9\n      sub\n      swap8\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3815:3895  if (tickBeforeInitialized) {... */\n    tag_268:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3905:3935  return initializedTicksCrossed */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":637:3942  function countInitializedTicksCrossed(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1189:1468  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n    tag_176:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1313:1332  IUniswapV3Pool pool */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1370:1414  PoolAddress.computeAddress(factory, poolKey) */\n      tag_270\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1397:1404  factory */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1406:1413  poolKey */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1370:1396  PoolAddress.computeAddress */\n      tag_161\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1370:1414  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_270:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1348:1415  pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1455:1459  pool */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1433:1460  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1433:1443  msg.sender */\n      caller\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1433:1460  msg.sender == address(pool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1425:1461  require(msg.sender == address(pool)) */\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":1189:1468  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3948:4145  function countOneBits(uint256 x) private pure returns (uint16) {... */\n    tag_266:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4003:4009  uint16 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4021:4032  uint16 bits */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4035:4036  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4021:4036  uint16 bits = 0 */\n      swap1\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4046:4118  while (x != 0) {... */\n    tag_273:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4058:4059  0 */\n      0x00\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4053:4054  x */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4053:4059  x != 0 */\n      eq\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4046:4118  while (x != 0) {... */\n      tag_274\n      jumpi\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4075:4081  bits++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4105:4106  1 */\n      0x01\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4101:4102  x */\n      dup4\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4101:4106  x - 1 */\n      sub\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4095:4107  x &= (x - 1) */\n      dup4\n      and\n      swap3\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4046:4118  while (x != 0) {... */\n      jump(tag_273)\n    tag_274:\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4134:4138  bits */\n      dup1\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":4127:4138  return bits */\n      swap2\n      pop\n      pop\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":3948:4145  function countOneBits(uint256 x) private pure returns (uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_193:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:349   */\n    tag_276:\n      0x00\n        /* \"#utility.yul\":109:173   */\n      tag_278\n        /* \"#utility.yul\":124:172   */\n      tag_279\n        /* \"#utility.yul\":165:171   */\n      dup5\n        /* \"#utility.yul\":124:172   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":109:173   */\n      tag_281\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":100:173   */\n      swap1\n      pop\n        /* \"#utility.yul\":196:202   */\n      dup3\n        /* \"#utility.yul\":189:194   */\n      dup2\n        /* \"#utility.yul\":182:203   */\n      mstore\n        /* \"#utility.yul\":234:238   */\n      0x20\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":223:239   */\n      add\n        /* \"#utility.yul\":272:275   */\n      dup5\n        /* \"#utility.yul\":263:269   */\n      dup5\n        /* \"#utility.yul\":258:261   */\n      dup5\n        /* \"#utility.yul\":254:270   */\n      add\n        /* \"#utility.yul\":251:276   */\n      gt\n        /* \"#utility.yul\":248:250   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":248:250   */\n    tag_282:\n        /* \"#utility.yul\":302:343   */\n      tag_283\n        /* \"#utility.yul\":336:342   */\n      dup5\n        /* \"#utility.yul\":331:334   */\n      dup3\n        /* \"#utility.yul\":326:329   */\n      dup6\n        /* \"#utility.yul\":302:343   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":90:349   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":355:708   */\n    tag_285:\n      0x00\n        /* \"#utility.yul\":469:534   */\n      tag_287\n        /* \"#utility.yul\":484:533   */\n      tag_288\n        /* \"#utility.yul\":526:532   */\n      dup5\n        /* \"#utility.yul\":484:533   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":469:534   */\n      tag_281\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":460:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:563   */\n      dup3\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":543:564   */\n      mstore\n        /* \"#utility.yul\":595:599   */\n      0x20\n        /* \"#utility.yul\":588:593   */\n      dup2\n        /* \"#utility.yul\":584:600   */\n      add\n        /* \"#utility.yul\":633:636   */\n      dup5\n        /* \"#utility.yul\":624:630   */\n      dup5\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":615:631   */\n      add\n        /* \"#utility.yul\":612:637   */\n      gt\n        /* \"#utility.yul\":609:611   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":650:651   */\n      0x00\n        /* \"#utility.yul\":647:648   */\n      dup1\n        /* \"#utility.yul\":640:652   */\n      revert\n        /* \"#utility.yul\":609:611   */\n    tag_290:\n        /* \"#utility.yul\":663:702   */\n      tag_291\n        /* \"#utility.yul\":695:701   */\n      dup5\n        /* \"#utility.yul\":690:693   */\n      dup3\n        /* \"#utility.yul\":685:688   */\n      dup6\n        /* \"#utility.yul\":663:702   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":450:708   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:853   */\n    tag_293:\n      0x00\n        /* \"#utility.yul\":798:804   */\n      dup2\n        /* \"#utility.yul\":785:805   */\n      calldataload\n        /* \"#utility.yul\":776:805   */\n      swap1\n      pop\n        /* \"#utility.yul\":814:847   */\n      tag_295\n        /* \"#utility.yul\":841:846   */\n      dup2\n        /* \"#utility.yul\":814:847   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":766:853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:996   */\n    tag_297:\n      0x00\n        /* \"#utility.yul\":944:950   */\n      dup2\n        /* \"#utility.yul\":938:951   */\n      mload\n        /* \"#utility.yul\":929:951   */\n      swap1\n      pop\n        /* \"#utility.yul\":960:990   */\n      tag_299\n        /* \"#utility.yul\":984:989   */\n      dup2\n        /* \"#utility.yul\":960:990   */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":919:996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1015:1286   */\n    tag_301:\n      0x00\n        /* \"#utility.yul\":1119:1122   */\n      dup3\n        /* \"#utility.yul\":1112:1116   */\n      0x1f\n        /* \"#utility.yul\":1104:1110   */\n      dup4\n        /* \"#utility.yul\":1100:1117   */\n      add\n        /* \"#utility.yul\":1096:1123   */\n      slt\n        /* \"#utility.yul\":1086:1088   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":1137:1138   */\n      0x00\n        /* \"#utility.yul\":1134:1135   */\n      dup1\n        /* \"#utility.yul\":1127:1139   */\n      revert\n        /* \"#utility.yul\":1086:1088   */\n    tag_303:\n        /* \"#utility.yul\":1177:1183   */\n      dup2\n        /* \"#utility.yul\":1164:1184   */\n      calldataload\n        /* \"#utility.yul\":1202:1280   */\n      tag_304\n        /* \"#utility.yul\":1276:1279   */\n      dup5\n        /* \"#utility.yul\":1268:1274   */\n      dup3\n        /* \"#utility.yul\":1261:1265   */\n      0x20\n        /* \"#utility.yul\":1253:1259   */\n      dup7\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1202:1280   */\n      tag_276\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1193:1280   */\n      swap2\n      pop\n        /* \"#utility.yul\":1076:1286   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1292:1431   */\n    tag_305:\n      0x00\n        /* \"#utility.yul\":1378:1384   */\n      dup2\n        /* \"#utility.yul\":1372:1385   */\n      mload\n        /* \"#utility.yul\":1363:1385   */\n      swap1\n      pop\n        /* \"#utility.yul\":1394:1425   */\n      tag_307\n        /* \"#utility.yul\":1419:1424   */\n      dup2\n        /* \"#utility.yul\":1394:1425   */\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1353:1431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1437:1574   */\n    tag_309:\n      0x00\n        /* \"#utility.yul\":1520:1526   */\n      dup2\n        /* \"#utility.yul\":1507:1527   */\n      calldataload\n        /* \"#utility.yul\":1498:1527   */\n      swap1\n      pop\n        /* \"#utility.yul\":1536:1568   */\n      tag_311\n        /* \"#utility.yul\":1562:1567   */\n      dup2\n        /* \"#utility.yul\":1536:1568   */\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1488:1574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1580:1721   */\n    tag_313:\n      0x00\n        /* \"#utility.yul\":1667:1673   */\n      dup2\n        /* \"#utility.yul\":1661:1674   */\n      mload\n        /* \"#utility.yul\":1652:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1683:1715   */\n      tag_315\n        /* \"#utility.yul\":1709:1714   */\n      dup2\n        /* \"#utility.yul\":1683:1715   */\n      tag_312\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1642:1721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:2029   */\n    tag_316:\n      0x00\n        /* \"#utility.yul\":1857:1860   */\n      dup3\n        /* \"#utility.yul\":1850:1854   */\n      0x1f\n        /* \"#utility.yul\":1842:1848   */\n      dup4\n        /* \"#utility.yul\":1838:1855   */\n      add\n        /* \"#utility.yul\":1834:1861   */\n      slt\n        /* \"#utility.yul\":1824:1826   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1875:1876   */\n      0x00\n        /* \"#utility.yul\":1872:1873   */\n      dup1\n        /* \"#utility.yul\":1865:1877   */\n      revert\n        /* \"#utility.yul\":1824:1826   */\n    tag_318:\n        /* \"#utility.yul\":1908:1914   */\n      dup2\n        /* \"#utility.yul\":1902:1915   */\n      mload\n        /* \"#utility.yul\":1933:2023   */\n      tag_319\n        /* \"#utility.yul\":2019:2022   */\n      dup5\n        /* \"#utility.yul\":2011:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2008   */\n      0x20\n        /* \"#utility.yul\":1996:2002   */\n      dup7\n        /* \"#utility.yul\":1992:2009   */\n      add\n        /* \"#utility.yul\":1933:2023   */\n      tag_285\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1924:2023   */\n      swap2\n      pop\n        /* \"#utility.yul\":1814:2029   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:3117   */\n    tag_320:\n      0x00\n        /* \"#utility.yul\":2223:2227   */\n      0xa0\n        /* \"#utility.yul\":2211:2220   */\n      dup3\n        /* \"#utility.yul\":2206:2209   */\n      dup5\n        /* \"#utility.yul\":2202:2221   */\n      sub\n        /* \"#utility.yul\":2198:2228   */\n      slt\n        /* \"#utility.yul\":2195:2197   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2241:2242   */\n      0x00\n        /* \"#utility.yul\":2238:2239   */\n      dup1\n        /* \"#utility.yul\":2231:2243   */\n      revert\n        /* \"#utility.yul\":2195:2197   */\n    tag_322:\n        /* \"#utility.yul\":2263:2283   */\n      tag_323\n        /* \"#utility.yul\":2278:2282   */\n      0xa0\n        /* \"#utility.yul\":2263:2283   */\n      tag_281\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2254:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":2345:2346   */\n      0x00\n        /* \"#utility.yul\":2385:2434   */\n      tag_324\n        /* \"#utility.yul\":2430:2433   */\n      dup5\n        /* \"#utility.yul\":2421:2427   */\n      dup3\n        /* \"#utility.yul\":2410:2419   */\n      dup6\n        /* \"#utility.yul\":2406:2428   */\n      add\n        /* \"#utility.yul\":2385:2434   */\n      tag_293\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2378:2382   */\n      0x00\n        /* \"#utility.yul\":2371:2376   */\n      dup4\n        /* \"#utility.yul\":2367:2383   */\n      add\n        /* \"#utility.yul\":2360:2435   */\n      mstore\n        /* \"#utility.yul\":2293:2446   */\n      pop\n        /* \"#utility.yul\":2509:2511   */\n      0x20\n        /* \"#utility.yul\":2550:2599   */\n      tag_325\n        /* \"#utility.yul\":2595:2598   */\n      dup5\n        /* \"#utility.yul\":2586:2592   */\n      dup3\n        /* \"#utility.yul\":2575:2584   */\n      dup6\n        /* \"#utility.yul\":2571:2593   */\n      add\n        /* \"#utility.yul\":2550:2599   */\n      tag_293\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2543:2547   */\n      0x20\n        /* \"#utility.yul\":2536:2541   */\n      dup4\n        /* \"#utility.yul\":2532:2548   */\n      add\n        /* \"#utility.yul\":2525:2600   */\n      mstore\n        /* \"#utility.yul\":2456:2611   */\n      pop\n        /* \"#utility.yul\":2674:2676   */\n      0x40\n        /* \"#utility.yul\":2715:2764   */\n      tag_326\n        /* \"#utility.yul\":2760:2763   */\n      dup5\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup6\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2715:2764   */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2708:2712   */\n      0x40\n        /* \"#utility.yul\":2701:2706   */\n      dup4\n        /* \"#utility.yul\":2697:2713   */\n      add\n        /* \"#utility.yul\":2690:2765   */\n      mstore\n        /* \"#utility.yul\":2621:2776   */\n      pop\n        /* \"#utility.yul\":2834:2836   */\n      0x60\n        /* \"#utility.yul\":2875:2923   */\n      tag_328\n        /* \"#utility.yul\":2919:2922   */\n      dup5\n        /* \"#utility.yul\":2910:2916   */\n      dup3\n        /* \"#utility.yul\":2899:2908   */\n      dup6\n        /* \"#utility.yul\":2895:2917   */\n      add\n        /* \"#utility.yul\":2875:2923   */\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2868:2872   */\n      0x60\n        /* \"#utility.yul\":2861:2866   */\n      dup4\n        /* \"#utility.yul\":2857:2873   */\n      add\n        /* \"#utility.yul\":2850:2924   */\n      mstore\n        /* \"#utility.yul\":2786:2935   */\n      pop\n        /* \"#utility.yul\":3007:3010   */\n      0x80\n        /* \"#utility.yul\":3049:3098   */\n      tag_330\n        /* \"#utility.yul\":3094:3097   */\n      dup5\n        /* \"#utility.yul\":3085:3091   */\n      dup3\n        /* \"#utility.yul\":3074:3083   */\n      dup6\n        /* \"#utility.yul\":3070:3092   */\n      add\n        /* \"#utility.yul\":3049:3098   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3042:3046   */\n      0x80\n        /* \"#utility.yul\":3035:3040   */\n      dup4\n        /* \"#utility.yul\":3031:3047   */\n      add\n        /* \"#utility.yul\":3024:3099   */\n      mstore\n        /* \"#utility.yul\":2945:3110   */\n      pop\n        /* \"#utility.yul\":2185:3117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:4206   */\n    tag_332:\n      0x00\n        /* \"#utility.yul\":3314:3318   */\n      0xa0\n        /* \"#utility.yul\":3302:3311   */\n      dup3\n        /* \"#utility.yul\":3297:3300   */\n      dup5\n        /* \"#utility.yul\":3293:3312   */\n      sub\n        /* \"#utility.yul\":3289:3319   */\n      slt\n        /* \"#utility.yul\":3286:3288   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3329:3330   */\n      dup1\n        /* \"#utility.yul\":3322:3334   */\n      revert\n        /* \"#utility.yul\":3286:3288   */\n    tag_334:\n        /* \"#utility.yul\":3354:3374   */\n      tag_335\n        /* \"#utility.yul\":3369:3373   */\n      0xa0\n        /* \"#utility.yul\":3354:3374   */\n      tag_281\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3345:3374   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3476:3525   */\n      tag_336\n        /* \"#utility.yul\":3521:3524   */\n      dup5\n        /* \"#utility.yul\":3512:3518   */\n      dup3\n        /* \"#utility.yul\":3501:3510   */\n      dup6\n        /* \"#utility.yul\":3497:3519   */\n      add\n        /* \"#utility.yul\":3476:3525   */\n      tag_293\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3469:3473   */\n      0x00\n        /* \"#utility.yul\":3462:3467   */\n      dup4\n        /* \"#utility.yul\":3458:3474   */\n      add\n        /* \"#utility.yul\":3451:3526   */\n      mstore\n        /* \"#utility.yul\":3384:3537   */\n      pop\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3641:3690   */\n      tag_337\n        /* \"#utility.yul\":3686:3689   */\n      dup5\n        /* \"#utility.yul\":3677:3683   */\n      dup3\n        /* \"#utility.yul\":3666:3675   */\n      dup6\n        /* \"#utility.yul\":3662:3684   */\n      add\n        /* \"#utility.yul\":3641:3690   */\n      tag_293\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3634:3638   */\n      0x20\n        /* \"#utility.yul\":3627:3632   */\n      dup4\n        /* \"#utility.yul\":3623:3639   */\n      add\n        /* \"#utility.yul\":3616:3691   */\n      mstore\n        /* \"#utility.yul\":3547:3702   */\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x40\n        /* \"#utility.yul\":3804:3853   */\n      tag_338\n        /* \"#utility.yul\":3849:3852   */\n      dup5\n        /* \"#utility.yul\":3840:3846   */\n      dup3\n        /* \"#utility.yul\":3829:3838   */\n      dup6\n        /* \"#utility.yul\":3825:3847   */\n      add\n        /* \"#utility.yul\":3804:3853   */\n      tag_327\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3797:3801   */\n      0x40\n        /* \"#utility.yul\":3790:3795   */\n      dup4\n        /* \"#utility.yul\":3786:3802   */\n      add\n        /* \"#utility.yul\":3779:3854   */\n      mstore\n        /* \"#utility.yul\":3712:3865   */\n      pop\n        /* \"#utility.yul\":3923:3925   */\n      0x60\n        /* \"#utility.yul\":3964:4012   */\n      tag_339\n        /* \"#utility.yul\":4008:4011   */\n      dup5\n        /* \"#utility.yul\":3999:4005   */\n      dup3\n        /* \"#utility.yul\":3988:3997   */\n      dup6\n        /* \"#utility.yul\":3984:4006   */\n      add\n        /* \"#utility.yul\":3964:4012   */\n      tag_329\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3957:3961   */\n      0x60\n        /* \"#utility.yul\":3950:3955   */\n      dup4\n        /* \"#utility.yul\":3946:3962   */\n      add\n        /* \"#utility.yul\":3939:4013   */\n      mstore\n        /* \"#utility.yul\":3875:4024   */\n      pop\n        /* \"#utility.yul\":4096:4099   */\n      0x80\n        /* \"#utility.yul\":4138:4187   */\n      tag_340\n        /* \"#utility.yul\":4183:4186   */\n      dup5\n        /* \"#utility.yul\":4174:4180   */\n      dup3\n        /* \"#utility.yul\":4163:4172   */\n      dup6\n        /* \"#utility.yul\":4159:4181   */\n      add\n        /* \"#utility.yul\":4138:4187   */\n      tag_331\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4131:4135   */\n      0x80\n        /* \"#utility.yul\":4124:4129   */\n      dup4\n        /* \"#utility.yul\":4120:4136   */\n      add\n        /* \"#utility.yul\":4113:4188   */\n      mstore\n        /* \"#utility.yul\":4034:4199   */\n      pop\n        /* \"#utility.yul\":3276:4206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4212:4351   */\n    tag_331:\n      0x00\n        /* \"#utility.yul\":4296:4302   */\n      dup2\n        /* \"#utility.yul\":4283:4303   */\n      calldataload\n        /* \"#utility.yul\":4274:4303   */\n      swap1\n      pop\n        /* \"#utility.yul\":4312:4345   */\n      tag_342\n        /* \"#utility.yul\":4339:4344   */\n      dup2\n        /* \"#utility.yul\":4312:4345   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4264:4351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4357:4500   */\n    tag_344:\n      0x00\n        /* \"#utility.yul\":4445:4451   */\n      dup2\n        /* \"#utility.yul\":4439:4452   */\n      mload\n        /* \"#utility.yul\":4430:4452   */\n      swap1\n      pop\n        /* \"#utility.yul\":4461:4494   */\n      tag_346\n        /* \"#utility.yul\":4488:4493   */\n      dup2\n        /* \"#utility.yul\":4461:4494   */\n      tag_343\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4420:4500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4647   */\n    tag_347:\n      0x00\n        /* \"#utility.yul\":4593:4599   */\n      dup2\n        /* \"#utility.yul\":4587:4600   */\n      mload\n        /* \"#utility.yul\":4578:4600   */\n      swap1\n      pop\n        /* \"#utility.yul\":4609:4641   */\n      tag_349\n        /* \"#utility.yul\":4635:4640   */\n      dup2\n        /* \"#utility.yul\":4609:4641   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4568:4647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4653:4790   */\n    tag_329:\n      0x00\n        /* \"#utility.yul\":4736:4742   */\n      dup2\n        /* \"#utility.yul\":4723:4743   */\n      calldataload\n        /* \"#utility.yul\":4714:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4752:4784   */\n      tag_352\n        /* \"#utility.yul\":4778:4783   */\n      dup2\n        /* \"#utility.yul\":4752:4784   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4704:4790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4796:4935   */\n    tag_327:\n      0x00\n        /* \"#utility.yul\":4880:4886   */\n      dup2\n        /* \"#utility.yul\":4867:4887   */\n      calldataload\n        /* \"#utility.yul\":4858:4887   */\n      swap1\n      pop\n        /* \"#utility.yul\":4896:4929   */\n      tag_355\n        /* \"#utility.yul\":4923:4928   */\n      dup2\n        /* \"#utility.yul\":4896:4929   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4848:4935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4941:5084   */\n    tag_357:\n      0x00\n        /* \"#utility.yul\":5029:5035   */\n      dup2\n        /* \"#utility.yul\":5023:5036   */\n      mload\n        /* \"#utility.yul\":5014:5036   */\n      swap1\n      pop\n        /* \"#utility.yul\":5045:5078   */\n      tag_359\n        /* \"#utility.yul\":5072:5077   */\n      dup2\n        /* \"#utility.yul\":5045:5078   */\n      tag_356\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5004:5084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5090:5229   */\n    tag_360:\n      0x00\n        /* \"#utility.yul\":5176:5182   */\n      dup2\n        /* \"#utility.yul\":5170:5183   */\n      mload\n        /* \"#utility.yul\":5161:5183   */\n      swap1\n      pop\n        /* \"#utility.yul\":5192:5223   */\n      tag_362\n        /* \"#utility.yul\":5217:5222   */\n      dup2\n        /* \"#utility.yul\":5192:5223   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5151:5229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5235:5753   */\n    tag_13:\n      0x00\n      dup1\n        /* \"#utility.yul\":5369:5371   */\n      0x40\n        /* \"#utility.yul\":5357:5366   */\n      dup4\n        /* \"#utility.yul\":5348:5355   */\n      dup6\n        /* \"#utility.yul\":5344:5367   */\n      sub\n        /* \"#utility.yul\":5340:5372   */\n      slt\n        /* \"#utility.yul\":5337:5339   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5385:5386   */\n      0x00\n        /* \"#utility.yul\":5382:5383   */\n      dup1\n        /* \"#utility.yul\":5375:5387   */\n      revert\n        /* \"#utility.yul\":5337:5339   */\n    tag_365:\n        /* \"#utility.yul\":5456:5457   */\n      0x00\n        /* \"#utility.yul\":5445:5454   */\n      dup4\n        /* \"#utility.yul\":5441:5458   */\n      add\n        /* \"#utility.yul\":5428:5459   */\n      calldataload\n        /* \"#utility.yul\":5486:5504   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5478:5484   */\n      dup2\n        /* \"#utility.yul\":5475:5505   */\n      gt\n        /* \"#utility.yul\":5472:5474   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5518:5519   */\n      0x00\n        /* \"#utility.yul\":5515:5516   */\n      dup1\n        /* \"#utility.yul\":5508:5520   */\n      revert\n        /* \"#utility.yul\":5472:5474   */\n    tag_366:\n        /* \"#utility.yul\":5546:5608   */\n      tag_367\n        /* \"#utility.yul\":5600:5607   */\n      dup6\n        /* \"#utility.yul\":5591:5597   */\n      dup3\n        /* \"#utility.yul\":5580:5589   */\n      dup7\n        /* \"#utility.yul\":5576:5598   */\n      add\n        /* \"#utility.yul\":5546:5608   */\n      tag_301\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5536:5608   */\n      swap3\n      pop\n        /* \"#utility.yul\":5399:5618   */\n      pop\n        /* \"#utility.yul\":5657:5659   */\n      0x20\n        /* \"#utility.yul\":5683:5736   */\n      tag_368\n        /* \"#utility.yul\":5728:5735   */\n      dup6\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5708:5717   */\n      dup7\n        /* \"#utility.yul\":5704:5726   */\n      add\n        /* \"#utility.yul\":5683:5736   */\n      tag_327\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5673:5736   */\n      swap2\n      pop\n        /* \"#utility.yul\":5628:5746   */\n      pop\n        /* \"#utility.yul\":5327:5753   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5759:6195   */\n    tag_81:\n      0x00\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5863   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5906:5907   */\n      dup1\n        /* \"#utility.yul\":5899:5911   */\n      revert\n        /* \"#utility.yul\":5861:5863   */\n    tag_370:\n        /* \"#utility.yul\":5952:5953   */\n      0x00\n        /* \"#utility.yul\":5977:6040   */\n      tag_371\n        /* \"#utility.yul\":6032:6039   */\n      dup6\n        /* \"#utility.yul\":6023:6029   */\n      dup3\n        /* \"#utility.yul\":6012:6021   */\n      dup7\n        /* \"#utility.yul\":6008:6030   */\n      add\n        /* \"#utility.yul\":5977:6040   */\n      tag_313\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5967:6040   */\n      swap3\n      pop\n        /* \"#utility.yul\":5923:6050   */\n      pop\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6115:6178   */\n      tag_372\n        /* \"#utility.yul\":6170:6177   */\n      dup6\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6150:6159   */\n      dup7\n        /* \"#utility.yul\":6146:6168   */\n      add\n        /* \"#utility.yul\":6115:6178   */\n      tag_313\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6105:6178   */\n      swap2\n      pop\n        /* \"#utility.yul\":6060:6188   */\n      pop\n        /* \"#utility.yul\":5851:6195   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6201:6860   */\n    tag_41:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":6350:6352   */\n      0x60\n        /* \"#utility.yul\":6338:6347   */\n      dup5\n        /* \"#utility.yul\":6329:6336   */\n      dup7\n        /* \"#utility.yul\":6325:6348   */\n      sub\n        /* \"#utility.yul\":6321:6353   */\n      slt\n        /* \"#utility.yul\":6318:6320   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6366:6367   */\n      0x00\n        /* \"#utility.yul\":6363:6364   */\n      dup1\n        /* \"#utility.yul\":6356:6368   */\n      revert\n        /* \"#utility.yul\":6318:6320   */\n    tag_374:\n        /* \"#utility.yul\":6409:6410   */\n      0x00\n        /* \"#utility.yul\":6434:6486   */\n      tag_375\n        /* \"#utility.yul\":6478:6485   */\n      dup7\n        /* \"#utility.yul\":6469:6475   */\n      dup3\n        /* \"#utility.yul\":6458:6467   */\n      dup8\n        /* \"#utility.yul\":6454:6476   */\n      add\n        /* \"#utility.yul\":6434:6486   */\n      tag_309\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6424:6486   */\n      swap4\n      pop\n        /* \"#utility.yul\":6380:6496   */\n      pop\n        /* \"#utility.yul\":6535:6537   */\n      0x20\n        /* \"#utility.yul\":6561:6613   */\n      tag_376\n        /* \"#utility.yul\":6605:6612   */\n      dup7\n        /* \"#utility.yul\":6596:6602   */\n      dup3\n        /* \"#utility.yul\":6585:6594   */\n      dup8\n        /* \"#utility.yul\":6581:6603   */\n      add\n        /* \"#utility.yul\":6561:6613   */\n      tag_309\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6551:6613   */\n      swap3\n      pop\n        /* \"#utility.yul\":6506:6623   */\n      pop\n        /* \"#utility.yul\":6690:6692   */\n      0x40\n        /* \"#utility.yul\":6679:6688   */\n      dup5\n        /* \"#utility.yul\":6675:6693   */\n      add\n        /* \"#utility.yul\":6662:6694   */\n      calldataload\n        /* \"#utility.yul\":6721:6739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6713:6719   */\n      dup2\n        /* \"#utility.yul\":6710:6740   */\n      gt\n        /* \"#utility.yul\":6707:6709   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6753:6754   */\n      0x00\n        /* \"#utility.yul\":6750:6751   */\n      dup1\n        /* \"#utility.yul\":6743:6755   */\n      revert\n        /* \"#utility.yul\":6707:6709   */\n    tag_377:\n        /* \"#utility.yul\":6781:6843   */\n      tag_378\n        /* \"#utility.yul\":6835:6842   */\n      dup7\n        /* \"#utility.yul\":6826:6832   */\n      dup3\n        /* \"#utility.yul\":6815:6824   */\n      dup8\n        /* \"#utility.yul\":6811:6833   */\n      add\n        /* \"#utility.yul\":6781:6843   */\n      tag_301\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6771:6843   */\n      swap2\n      pop\n        /* \"#utility.yul\":6633:6853   */\n      pop\n        /* \"#utility.yul\":6308:6860   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6866:7256   */\n    tag_204:\n      0x00\n        /* \"#utility.yul\":6995:6997   */\n      0x20\n        /* \"#utility.yul\":6983:6992   */\n      dup3\n        /* \"#utility.yul\":6974:6981   */\n      dup5\n        /* \"#utility.yul\":6970:6993   */\n      sub\n        /* \"#utility.yul\":6966:6998   */\n      slt\n        /* \"#utility.yul\":6963:6965   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7008:7009   */\n      dup1\n        /* \"#utility.yul\":7001:7013   */\n      revert\n        /* \"#utility.yul\":6963:6965   */\n    tag_380:\n        /* \"#utility.yul\":7075:7076   */\n      0x00\n        /* \"#utility.yul\":7064:7073   */\n      dup3\n        /* \"#utility.yul\":7060:7077   */\n      add\n        /* \"#utility.yul\":7054:7078   */\n      mload\n        /* \"#utility.yul\":7105:7123   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7097:7103   */\n      dup2\n        /* \"#utility.yul\":7094:7124   */\n      gt\n        /* \"#utility.yul\":7091:7093   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7137:7138   */\n      0x00\n        /* \"#utility.yul\":7134:7135   */\n      dup1\n        /* \"#utility.yul\":7127:7139   */\n      revert\n        /* \"#utility.yul\":7091:7093   */\n    tag_381:\n        /* \"#utility.yul\":7165:7239   */\n      tag_382\n        /* \"#utility.yul\":7231:7238   */\n      dup5\n        /* \"#utility.yul\":7222:7228   */\n      dup3\n        /* \"#utility.yul\":7211:7220   */\n      dup6\n        /* \"#utility.yul\":7207:7229   */\n      add\n        /* \"#utility.yul\":7165:7239   */\n      tag_316\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7155:7239   */\n      swap2\n      pop\n        /* \"#utility.yul\":7025:7249   */\n      pop\n        /* \"#utility.yul\":6953:7256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7262:7611   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":7413:7416   */\n      0xa0\n        /* \"#utility.yul\":7401:7410   */\n      dup3\n        /* \"#utility.yul\":7392:7399   */\n      dup5\n        /* \"#utility.yul\":7388:7411   */\n      sub\n        /* \"#utility.yul\":7384:7417   */\n      slt\n        /* \"#utility.yul\":7381:7383   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7430:7431   */\n      0x00\n        /* \"#utility.yul\":7427:7428   */\n      dup1\n        /* \"#utility.yul\":7420:7432   */\n      revert\n        /* \"#utility.yul\":7381:7383   */\n    tag_384:\n        /* \"#utility.yul\":7473:7474   */\n      0x00\n        /* \"#utility.yul\":7498:7594   */\n      tag_385\n        /* \"#utility.yul\":7586:7593   */\n      dup5\n        /* \"#utility.yul\":7577:7583   */\n      dup3\n        /* \"#utility.yul\":7566:7575   */\n      dup6\n        /* \"#utility.yul\":7562:7584   */\n      add\n        /* \"#utility.yul\":7498:7594   */\n      tag_320\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7488:7594   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7604   */\n      pop\n        /* \"#utility.yul\":7371:7611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7617:7970   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":7770:7773   */\n      0xa0\n        /* \"#utility.yul\":7758:7767   */\n      dup3\n        /* \"#utility.yul\":7749:7756   */\n      dup5\n        /* \"#utility.yul\":7745:7768   */\n      sub\n        /* \"#utility.yul\":7741:7774   */\n      slt\n        /* \"#utility.yul\":7738:7740   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7787:7788   */\n      0x00\n        /* \"#utility.yul\":7784:7785   */\n      dup1\n        /* \"#utility.yul\":7777:7789   */\n      revert\n        /* \"#utility.yul\":7738:7740   */\n    tag_387:\n        /* \"#utility.yul\":7830:7831   */\n      0x00\n        /* \"#utility.yul\":7855:7953   */\n      tag_388\n        /* \"#utility.yul\":7945:7952   */\n      dup5\n        /* \"#utility.yul\":7936:7942   */\n      dup3\n        /* \"#utility.yul\":7925:7934   */\n      dup6\n        /* \"#utility.yul\":7921:7943   */\n      add\n        /* \"#utility.yul\":7855:7953   */\n      tag_332\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7845:7953   */\n      swap2\n      pop\n        /* \"#utility.yul\":7801:7963   */\n      pop\n        /* \"#utility.yul\":7728:7970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7976:9180   */\n    tag_140:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":8187:8190   */\n      0xe0\n        /* \"#utility.yul\":8175:8184   */\n      dup9\n        /* \"#utility.yul\":8166:8173   */\n      dup11\n        /* \"#utility.yul\":8162:8185   */\n      sub\n        /* \"#utility.yul\":8158:8191   */\n      slt\n        /* \"#utility.yul\":8155:8157   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8204:8205   */\n      0x00\n        /* \"#utility.yul\":8201:8202   */\n      dup1\n        /* \"#utility.yul\":8194:8206   */\n      revert\n        /* \"#utility.yul\":8155:8157   */\n    tag_390:\n        /* \"#utility.yul\":8247:8248   */\n      0x00\n        /* \"#utility.yul\":8272:8336   */\n      tag_391\n        /* \"#utility.yul\":8328:8335   */\n      dup11\n        /* \"#utility.yul\":8319:8325   */\n      dup3\n        /* \"#utility.yul\":8308:8317   */\n      dup12\n        /* \"#utility.yul\":8304:8326   */\n      add\n        /* \"#utility.yul\":8272:8336   */\n      tag_344\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8262:8336   */\n      swap8\n      pop\n        /* \"#utility.yul\":8218:8346   */\n      pop\n        /* \"#utility.yul\":8385:8387   */\n      0x20\n        /* \"#utility.yul\":8411:8473   */\n      tag_392\n        /* \"#utility.yul\":8465:8472   */\n      dup11\n        /* \"#utility.yul\":8456:8462   */\n      dup3\n        /* \"#utility.yul\":8445:8454   */\n      dup12\n        /* \"#utility.yul\":8441:8463   */\n      add\n        /* \"#utility.yul\":8411:8473   */\n      tag_305\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8401:8473   */\n      swap7\n      pop\n        /* \"#utility.yul\":8356:8483   */\n      pop\n        /* \"#utility.yul\":8522:8524   */\n      0x40\n        /* \"#utility.yul\":8548:8611   */\n      tag_393\n        /* \"#utility.yul\":8603:8610   */\n      dup11\n        /* \"#utility.yul\":8594:8600   */\n      dup3\n        /* \"#utility.yul\":8583:8592   */\n      dup12\n        /* \"#utility.yul\":8579:8601   */\n      add\n        /* \"#utility.yul\":8548:8611   */\n      tag_347\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8538:8611   */\n      swap6\n      pop\n        /* \"#utility.yul\":8493:8621   */\n      pop\n        /* \"#utility.yul\":8660:8662   */\n      0x60\n        /* \"#utility.yul\":8686:8749   */\n      tag_394\n        /* \"#utility.yul\":8741:8748   */\n      dup11\n        /* \"#utility.yul\":8732:8738   */\n      dup3\n        /* \"#utility.yul\":8721:8730   */\n      dup12\n        /* \"#utility.yul\":8717:8739   */\n      add\n        /* \"#utility.yul\":8686:8749   */\n      tag_347\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8676:8749   */\n      swap5\n      pop\n        /* \"#utility.yul\":8631:8759   */\n      pop\n        /* \"#utility.yul\":8798:8801   */\n      0x80\n        /* \"#utility.yul\":8825:8888   */\n      tag_395\n        /* \"#utility.yul\":8880:8887   */\n      dup11\n        /* \"#utility.yul\":8871:8877   */\n      dup3\n        /* \"#utility.yul\":8860:8869   */\n      dup12\n        /* \"#utility.yul\":8856:8878   */\n      add\n        /* \"#utility.yul\":8825:8888   */\n      tag_347\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8815:8888   */\n      swap4\n      pop\n        /* \"#utility.yul\":8769:8898   */\n      pop\n        /* \"#utility.yul\":8937:8940   */\n      0xa0\n        /* \"#utility.yul\":8964:9026   */\n      tag_396\n        /* \"#utility.yul\":9018:9025   */\n      dup11\n        /* \"#utility.yul\":9009:9015   */\n      dup3\n        /* \"#utility.yul\":8998:9007   */\n      dup12\n        /* \"#utility.yul\":8994:9016   */\n      add\n        /* \"#utility.yul\":8964:9026   */\n      tag_360\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8954:9026   */\n      swap3\n      pop\n        /* \"#utility.yul\":8908:9036   */\n      pop\n        /* \"#utility.yul\":9075:9078   */\n      0xc0\n        /* \"#utility.yul\":9102:9163   */\n      tag_397\n        /* \"#utility.yul\":9155:9162   */\n      dup11\n        /* \"#utility.yul\":9146:9152   */\n      dup3\n        /* \"#utility.yul\":9135:9144   */\n      dup12\n        /* \"#utility.yul\":9131:9153   */\n      add\n        /* \"#utility.yul\":9102:9163   */\n      tag_297\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9092:9163   */\n      swap2\n      pop\n        /* \"#utility.yul\":9046:9173   */\n      pop\n        /* \"#utility.yul\":8145:9180   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9186:9778   */\n    tag_208:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":9337:9339   */\n      0x60\n        /* \"#utility.yul\":9325:9334   */\n      dup5\n        /* \"#utility.yul\":9316:9323   */\n      dup7\n        /* \"#utility.yul\":9312:9335   */\n      sub\n        /* \"#utility.yul\":9308:9340   */\n      slt\n        /* \"#utility.yul\":9305:9307   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":9353:9354   */\n      0x00\n        /* \"#utility.yul\":9350:9351   */\n      dup1\n        /* \"#utility.yul\":9343:9355   */\n      revert\n        /* \"#utility.yul\":9305:9307   */\n    tag_399:\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9421:9485   */\n      tag_400\n        /* \"#utility.yul\":9477:9484   */\n      dup7\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup8\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9421:9485   */\n      tag_357\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9411:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9367:9495   */\n      pop\n        /* \"#utility.yul\":9534:9536   */\n      0x20\n        /* \"#utility.yul\":9560:9624   */\n      tag_401\n        /* \"#utility.yul\":9616:9623   */\n      dup7\n        /* \"#utility.yul\":9607:9613   */\n      dup3\n        /* \"#utility.yul\":9596:9605   */\n      dup8\n        /* \"#utility.yul\":9592:9614   */\n      add\n        /* \"#utility.yul\":9560:9624   */\n      tag_344\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9550:9624   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9634   */\n      pop\n        /* \"#utility.yul\":9673:9675   */\n      0x40\n        /* \"#utility.yul\":9699:9761   */\n      tag_402\n        /* \"#utility.yul\":9753:9760   */\n      dup7\n        /* \"#utility.yul\":9744:9750   */\n      dup3\n        /* \"#utility.yul\":9733:9742   */\n      dup8\n        /* \"#utility.yul\":9729:9751   */\n      add\n        /* \"#utility.yul\":9699:9761   */\n      tag_305\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9689:9761   */\n      swap2\n      pop\n        /* \"#utility.yul\":9644:9771   */\n      pop\n        /* \"#utility.yul\":9295:9778   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9784:9963   */\n    tag_403:\n      0x00\n        /* \"#utility.yul\":9874:9920   */\n      tag_405\n        /* \"#utility.yul\":9916:9919   */\n      dup4\n        /* \"#utility.yul\":9908:9914   */\n      dup4\n        /* \"#utility.yul\":9874:9920   */\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9952:9956   */\n      0x20\n        /* \"#utility.yul\":9947:9950   */\n      dup4\n        /* \"#utility.yul\":9943:9957   */\n      add\n        /* \"#utility.yul\":9929:9957   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9969:10144   */\n    tag_407:\n      0x00\n        /* \"#utility.yul\":10057:10101   */\n      tag_409\n        /* \"#utility.yul\":10097:10100   */\n      dup4\n        /* \"#utility.yul\":10089:10095   */\n      dup4\n        /* \"#utility.yul\":10057:10101   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10133:10137   */\n      0x20\n        /* \"#utility.yul\":10128:10131   */\n      dup4\n        /* \"#utility.yul\":10124:10138   */\n      add\n        /* \"#utility.yul\":10110:10138   */\n      swap1\n      pop\n        /* \"#utility.yul\":10047:10144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10150:10268   */\n    tag_411:\n        /* \"#utility.yul\":10237:10261   */\n      tag_413\n        /* \"#utility.yul\":10255:10260   */\n      dup2\n        /* \"#utility.yul\":10237:10261   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10232:10235   */\n      dup3\n        /* \"#utility.yul\":10225:10262   */\n      mstore\n        /* \"#utility.yul\":10215:10268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10274:10431   */\n    tag_415:\n        /* \"#utility.yul\":10379:10424   */\n      tag_417\n        /* \"#utility.yul\":10399:10423   */\n      tag_418\n        /* \"#utility.yul\":10417:10422   */\n      dup3\n        /* \"#utility.yul\":10399:10423   */\n      tag_414\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10379:10424   */\n      tag_419\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10374:10377   */\n      dup3\n        /* \"#utility.yul\":10367:10425   */\n      mstore\n        /* \"#utility.yul\":10357:10431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10467:11199   */\n    tag_420:\n      0x00\n        /* \"#utility.yul\":10615:10669   */\n      tag_422\n        /* \"#utility.yul\":10663:10668   */\n      dup3\n        /* \"#utility.yul\":10615:10669   */\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10685:10771   */\n      tag_424\n        /* \"#utility.yul\":10764:10770   */\n      dup2\n        /* \"#utility.yul\":10759:10762   */\n      dup6\n        /* \"#utility.yul\":10685:10771   */\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10678:10771   */\n      swap4\n      pop\n        /* \"#utility.yul\":10795:10851   */\n      tag_426\n        /* \"#utility.yul\":10845:10850   */\n      dup4\n        /* \"#utility.yul\":10795:10851   */\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10874:10881   */\n      dup1\n        /* \"#utility.yul\":10905:10906   */\n      0x00\n        /* \"#utility.yul\":10890:11174   */\n    tag_428:\n        /* \"#utility.yul\":10915:10921   */\n      dup4\n        /* \"#utility.yul\":10912:10913   */\n      dup2\n        /* \"#utility.yul\":10909:10922   */\n      lt\n        /* \"#utility.yul\":10890:11174   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10991:10997   */\n      dup2\n        /* \"#utility.yul\":10985:10998   */\n      mload\n        /* \"#utility.yul\":11018:11081   */\n      tag_431\n        /* \"#utility.yul\":11077:11080   */\n      dup9\n        /* \"#utility.yul\":11062:11075   */\n      dup3\n        /* \"#utility.yul\":11018:11081   */\n      tag_403\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11011:11081   */\n      swap8\n      pop\n        /* \"#utility.yul\":11104:11164   */\n      tag_432\n        /* \"#utility.yul\":11157:11163   */\n      dup4\n        /* \"#utility.yul\":11104:11164   */\n      tag_433\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11094:11164   */\n      swap3\n      pop\n        /* \"#utility.yul\":10950:11174   */\n      pop\n        /* \"#utility.yul\":10937:10938   */\n      0x01\n        /* \"#utility.yul\":10934:10935   */\n      dup2\n        /* \"#utility.yul\":10930:10939   */\n      add\n        /* \"#utility.yul\":10925:10939   */\n      swap1\n      pop\n        /* \"#utility.yul\":10890:11174   */\n      jump(tag_428)\n    tag_430:\n        /* \"#utility.yul\":10894:10908   */\n      pop\n        /* \"#utility.yul\":11190:11193   */\n      dup6\n        /* \"#utility.yul\":11183:11193   */\n      swap4\n      pop\n        /* \"#utility.yul\":10591:11199   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11233:11957   */\n    tag_434:\n      0x00\n        /* \"#utility.yul\":11379:11432   */\n      tag_436\n        /* \"#utility.yul\":11426:11431   */\n      dup3\n        /* \"#utility.yul\":11379:11432   */\n      tag_437\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11448:11533   */\n      tag_438\n        /* \"#utility.yul\":11526:11532   */\n      dup2\n        /* \"#utility.yul\":11521:11524   */\n      dup6\n        /* \"#utility.yul\":11448:11533   */\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11441:11533   */\n      swap4\n      pop\n        /* \"#utility.yul\":11557:11612   */\n      tag_440\n        /* \"#utility.yul\":11606:11611   */\n      dup4\n        /* \"#utility.yul\":11557:11612   */\n      tag_441\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11635:11642   */\n      dup1\n        /* \"#utility.yul\":11666:11667   */\n      0x00\n        /* \"#utility.yul\":11651:11932   */\n    tag_442:\n        /* \"#utility.yul\":11676:11682   */\n      dup4\n        /* \"#utility.yul\":11673:11674   */\n      dup2\n        /* \"#utility.yul\":11670:11683   */\n      lt\n        /* \"#utility.yul\":11651:11932   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":11752:11758   */\n      dup2\n        /* \"#utility.yul\":11746:11759   */\n      mload\n        /* \"#utility.yul\":11779:11840   */\n      tag_445\n        /* \"#utility.yul\":11836:11839   */\n      dup9\n        /* \"#utility.yul\":11821:11834   */\n      dup3\n        /* \"#utility.yul\":11779:11840   */\n      tag_407\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11772:11840   */\n      swap8\n      pop\n        /* \"#utility.yul\":11863:11922   */\n      tag_446\n        /* \"#utility.yul\":11915:11921   */\n      dup4\n        /* \"#utility.yul\":11863:11922   */\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11853:11922   */\n      swap3\n      pop\n        /* \"#utility.yul\":11711:11932   */\n      pop\n        /* \"#utility.yul\":11698:11699   */\n      0x01\n        /* \"#utility.yul\":11695:11696   */\n      dup2\n        /* \"#utility.yul\":11691:11700   */\n      add\n        /* \"#utility.yul\":11686:11700   */\n      swap1\n      pop\n        /* \"#utility.yul\":11651:11932   */\n      jump(tag_442)\n    tag_444:\n        /* \"#utility.yul\":11655:11669   */\n      pop\n        /* \"#utility.yul\":11948:11951   */\n      dup6\n        /* \"#utility.yul\":11941:11951   */\n      swap4\n      pop\n        /* \"#utility.yul\":11355:11957   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11963:12072   */\n    tag_448:\n        /* \"#utility.yul\":12044:12065   */\n      tag_450\n        /* \"#utility.yul\":12059:12064   */\n      dup2\n        /* \"#utility.yul\":12044:12065   */\n      tag_451\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12039:12042   */\n      dup3\n        /* \"#utility.yul\":12032:12066   */\n      mstore\n        /* \"#utility.yul\":12022:12072   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12078:12438   */\n    tag_452:\n      0x00\n        /* \"#utility.yul\":12192:12230   */\n      tag_454\n        /* \"#utility.yul\":12224:12229   */\n      dup3\n        /* \"#utility.yul\":12192:12230   */\n      tag_455\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12246:12316   */\n      tag_456\n        /* \"#utility.yul\":12309:12315   */\n      dup2\n        /* \"#utility.yul\":12304:12307   */\n      dup6\n        /* \"#utility.yul\":12246:12316   */\n      tag_457\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12239:12316   */\n      swap4\n      pop\n        /* \"#utility.yul\":12325:12377   */\n      tag_458\n        /* \"#utility.yul\":12370:12376   */\n      dup2\n        /* \"#utility.yul\":12365:12368   */\n      dup6\n        /* \"#utility.yul\":12358:12362   */\n      0x20\n        /* \"#utility.yul\":12351:12356   */\n      dup7\n        /* \"#utility.yul\":12347:12363   */\n      add\n        /* \"#utility.yul\":12325:12377   */\n      tag_292\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12402:12431   */\n      tag_459\n        /* \"#utility.yul\":12424:12430   */\n      dup2\n        /* \"#utility.yul\":12402:12431   */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12397:12400   */\n      dup5\n        /* \"#utility.yul\":12393:12432   */\n      add\n        /* \"#utility.yul\":12386:12432   */\n      swap2\n      pop\n        /* \"#utility.yul\":12168:12438   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12444:12559   */\n    tag_461:\n        /* \"#utility.yul\":12529:12552   */\n      tag_463\n        /* \"#utility.yul\":12546:12551   */\n      dup2\n        /* \"#utility.yul\":12529:12552   */\n      tag_464\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12524:12527   */\n      dup3\n        /* \"#utility.yul\":12517:12553   */\n      mstore\n        /* \"#utility.yul\":12507:12559   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12565:12929   */\n    tag_465:\n      0x00\n        /* \"#utility.yul\":12681:12720   */\n      tag_467\n        /* \"#utility.yul\":12714:12719   */\n      dup3\n        /* \"#utility.yul\":12681:12720   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12736:12807   */\n      tag_469\n        /* \"#utility.yul\":12800:12806   */\n      dup2\n        /* \"#utility.yul\":12795:12798   */\n      dup6\n        /* \"#utility.yul\":12736:12807   */\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12729:12807   */\n      swap4\n      pop\n        /* \"#utility.yul\":12816:12868   */\n      tag_471\n        /* \"#utility.yul\":12861:12867   */\n      dup2\n        /* \"#utility.yul\":12856:12859   */\n      dup6\n        /* \"#utility.yul\":12849:12853   */\n      0x20\n        /* \"#utility.yul\":12842:12847   */\n      dup7\n        /* \"#utility.yul\":12838:12854   */\n      add\n        /* \"#utility.yul\":12816:12868   */\n      tag_292\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12893:12922   */\n      tag_472\n        /* \"#utility.yul\":12915:12921   */\n      dup2\n        /* \"#utility.yul\":12893:12922   */\n      tag_460\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12888:12891   */\n      dup5\n        /* \"#utility.yul\":12884:12923   */\n      add\n        /* \"#utility.yul\":12877:12923   */\n      swap2\n      pop\n        /* \"#utility.yul\":12657:12929   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12935:13249   */\n    tag_473:\n      0x00\n        /* \"#utility.yul\":13098:13165   */\n      tag_475\n        /* \"#utility.yul\":13162:13164   */\n      0x10\n        /* \"#utility.yul\":13157:13160   */\n      dup4\n        /* \"#utility.yul\":13098:13165   */\n      tag_470\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13091:13165   */\n      swap2\n      pop\n        /* \"#utility.yul\":13195:13213   */\n      0x556e6578706563746564206572726f7200000000000000000000000000000000\n        /* \"#utility.yul\":13191:13192   */\n      0x00\n        /* \"#utility.yul\":13186:13189   */\n      dup4\n        /* \"#utility.yul\":13182:13193   */\n      add\n        /* \"#utility.yul\":13175:13214   */\n      mstore\n        /* \"#utility.yul\":13240:13242   */\n      0x20\n        /* \"#utility.yul\":13235:13238   */\n      dup3\n        /* \"#utility.yul\":13231:13243   */\n      add\n        /* \"#utility.yul\":13224:13243   */\n      swap1\n      pop\n        /* \"#utility.yul\":13081:13249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13363   */\n    tag_406:\n        /* \"#utility.yul\":13332:13356   */\n      tag_477\n        /* \"#utility.yul\":13350:13355   */\n      dup2\n        /* \"#utility.yul\":13332:13356   */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13327:13330   */\n      dup3\n        /* \"#utility.yul\":13320:13357   */\n      mstore\n        /* \"#utility.yul\":13310:13363   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13369:13487   */\n    tag_479:\n        /* \"#utility.yul\":13456:13480   */\n      tag_481\n        /* \"#utility.yul\":13474:13479   */\n      dup2\n        /* \"#utility.yul\":13456:13480   */\n      tag_478\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13451:13454   */\n      dup3\n        /* \"#utility.yul\":13444:13481   */\n      mstore\n        /* \"#utility.yul\":13434:13487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13493:13646   */\n    tag_482:\n        /* \"#utility.yul\":13596:13639   */\n      tag_484\n        /* \"#utility.yul\":13615:13638   */\n      tag_485\n        /* \"#utility.yul\":13632:13637   */\n      dup3\n        /* \"#utility.yul\":13615:13638   */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13596:13639   */\n      tag_487\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13591:13594   */\n      dup3\n        /* \"#utility.yul\":13584:13640   */\n      mstore\n        /* \"#utility.yul\":13574:13646   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13652:13770   */\n    tag_488:\n        /* \"#utility.yul\":13739:13763   */\n      tag_490\n        /* \"#utility.yul\":13757:13762   */\n      dup2\n        /* \"#utility.yul\":13739:13763   */\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13734:13737   */\n      dup3\n        /* \"#utility.yul\":13727:13764   */\n      mstore\n        /* \"#utility.yul\":13717:13770   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13776:13881   */\n    tag_410:\n        /* \"#utility.yul\":13851:13874   */\n      tag_493\n        /* \"#utility.yul\":13868:13873   */\n      dup2\n        /* \"#utility.yul\":13851:13874   */\n      tag_494\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13846:13849   */\n      dup3\n        /* \"#utility.yul\":13839:13875   */\n      mstore\n        /* \"#utility.yul\":13829:13881   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13887:14002   */\n    tag_495:\n        /* \"#utility.yul\":13972:13995   */\n      tag_497\n        /* \"#utility.yul\":13989:13994   */\n      dup2\n        /* \"#utility.yul\":13972:13995   */\n      tag_494\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13967:13970   */\n      dup3\n        /* \"#utility.yul\":13960:13996   */\n      mstore\n        /* \"#utility.yul\":13950:14002   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14008:14541   */\n    tag_75:\n      0x00\n        /* \"#utility.yul\":14189:14264   */\n      tag_499\n        /* \"#utility.yul\":14260:14263   */\n      dup3\n        /* \"#utility.yul\":14251:14257   */\n      dup7\n        /* \"#utility.yul\":14189:14264   */\n      tag_415\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14289:14291   */\n      0x14\n        /* \"#utility.yul\":14284:14287   */\n      dup3\n        /* \"#utility.yul\":14280:14292   */\n      add\n        /* \"#utility.yul\":14273:14292   */\n      swap2\n      pop\n        /* \"#utility.yul\":14302:14375   */\n      tag_500\n        /* \"#utility.yul\":14371:14374   */\n      dup3\n        /* \"#utility.yul\":14362:14368   */\n      dup6\n        /* \"#utility.yul\":14302:14375   */\n      tag_482\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14400:14401   */\n      0x03\n        /* \"#utility.yul\":14395:14398   */\n      dup3\n        /* \"#utility.yul\":14391:14402   */\n      add\n        /* \"#utility.yul\":14384:14402   */\n      swap2\n      pop\n        /* \"#utility.yul\":14412:14487   */\n      tag_501\n        /* \"#utility.yul\":14483:14486   */\n      dup3\n        /* \"#utility.yul\":14474:14480   */\n      dup5\n        /* \"#utility.yul\":14412:14487   */\n      tag_415\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14512:14514   */\n      0x14\n        /* \"#utility.yul\":14507:14510   */\n      dup3\n        /* \"#utility.yul\":14503:14515   */\n      add\n        /* \"#utility.yul\":14496:14515   */\n      swap2\n      pop\n        /* \"#utility.yul\":14532:14535   */\n      dup2\n        /* \"#utility.yul\":14525:14535   */\n      swap1\n      pop\n        /* \"#utility.yul\":14178:14541   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:14769   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":14678:14680   */\n      0x20\n        /* \"#utility.yul\":14667:14676   */\n      dup3\n        /* \"#utility.yul\":14663:14681   */\n      add\n        /* \"#utility.yul\":14655:14681   */\n      swap1\n      pop\n        /* \"#utility.yul\":14691:14762   */\n      tag_503\n        /* \"#utility.yul\":14759:14760   */\n      0x00\n        /* \"#utility.yul\":14748:14757   */\n      dup4\n        /* \"#utility.yul\":14744:14761   */\n      add\n        /* \"#utility.yul\":14735:14741   */\n      dup5\n        /* \"#utility.yul\":14691:14762   */\n      tag_411\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14645:14769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14775:15510   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":15028:15031   */\n      0xa0\n        /* \"#utility.yul\":15017:15026   */\n      dup3\n        /* \"#utility.yul\":15013:15032   */\n      add\n        /* \"#utility.yul\":15005:15032   */\n      swap1\n      pop\n        /* \"#utility.yul\":15042:15113   */\n      tag_505\n        /* \"#utility.yul\":15110:15111   */\n      0x00\n        /* \"#utility.yul\":15099:15108   */\n      dup4\n        /* \"#utility.yul\":15095:15112   */\n      add\n        /* \"#utility.yul\":15086:15092   */\n      dup9\n        /* \"#utility.yul\":15042:15113   */\n      tag_411\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15123:15189   */\n      tag_506\n        /* \"#utility.yul\":15185:15187   */\n      0x20\n        /* \"#utility.yul\":15174:15183   */\n      dup4\n        /* \"#utility.yul\":15170:15188   */\n      add\n        /* \"#utility.yul\":15161:15167   */\n      dup8\n        /* \"#utility.yul\":15123:15189   */\n      tag_448\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15199:15269   */\n      tag_507\n        /* \"#utility.yul\":15265:15267   */\n      0x40\n        /* \"#utility.yul\":15254:15263   */\n      dup4\n        /* \"#utility.yul\":15250:15268   */\n      add\n        /* \"#utility.yul\":15241:15247   */\n      dup7\n        /* \"#utility.yul\":15199:15269   */\n      tag_461\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15279:15351   */\n      tag_508\n        /* \"#utility.yul\":15347:15349   */\n      0x60\n        /* \"#utility.yul\":15336:15345   */\n      dup4\n        /* \"#utility.yul\":15332:15350   */\n      add\n        /* \"#utility.yul\":15323:15329   */\n      dup6\n        /* \"#utility.yul\":15279:15351   */\n      tag_479\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15399:15408   */\n      dup2\n        /* \"#utility.yul\":15393:15397   */\n      dup2\n        /* \"#utility.yul\":15389:15409   */\n      sub\n        /* \"#utility.yul\":15383:15386   */\n      0x80\n        /* \"#utility.yul\":15372:15381   */\n      dup4\n        /* \"#utility.yul\":15368:15387   */\n      add\n        /* \"#utility.yul\":15361:15410   */\n      mstore\n        /* \"#utility.yul\":15427:15503   */\n      tag_509\n        /* \"#utility.yul\":15498:15502   */\n      dup2\n        /* \"#utility.yul\":15489:15495   */\n      dup5\n        /* \"#utility.yul\":15427:15503   */\n      tag_452\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15419:15503   */\n      swap1\n      pop\n        /* \"#utility.yul\":14995:15510   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15516:15829   */\n    tag_206:\n      0x00\n        /* \"#utility.yul\":15667:15669   */\n      0x20\n        /* \"#utility.yul\":15656:15665   */\n      dup3\n        /* \"#utility.yul\":15652:15670   */\n      add\n        /* \"#utility.yul\":15644:15670   */\n      swap1\n      pop\n        /* \"#utility.yul\":15716:15725   */\n      dup2\n        /* \"#utility.yul\":15710:15714   */\n      dup2\n        /* \"#utility.yul\":15706:15726   */\n      sub\n        /* \"#utility.yul\":15702:15703   */\n      0x00\n        /* \"#utility.yul\":15691:15700   */\n      dup4\n        /* \"#utility.yul\":15687:15704   */\n      add\n        /* \"#utility.yul\":15680:15727   */\n      mstore\n        /* \"#utility.yul\":15744:15822   */\n      tag_511\n        /* \"#utility.yul\":15817:15821   */\n      dup2\n        /* \"#utility.yul\":15808:15814   */\n      dup5\n        /* \"#utility.yul\":15744:15822   */\n      tag_465\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15736:15822   */\n      swap1\n      pop\n        /* \"#utility.yul\":15634:15829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15835:16254   */\n    tag_202:\n      0x00\n        /* \"#utility.yul\":16039:16041   */\n      0x20\n        /* \"#utility.yul\":16028:16037   */\n      dup3\n        /* \"#utility.yul\":16024:16042   */\n      add\n        /* \"#utility.yul\":16016:16042   */\n      swap1\n      pop\n        /* \"#utility.yul\":16088:16097   */\n      dup2\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":16078:16098   */\n      sub\n        /* \"#utility.yul\":16074:16075   */\n      0x00\n        /* \"#utility.yul\":16063:16072   */\n      dup4\n        /* \"#utility.yul\":16059:16076   */\n      add\n        /* \"#utility.yul\":16052:16099   */\n      mstore\n        /* \"#utility.yul\":16116:16247   */\n      tag_513\n        /* \"#utility.yul\":16242:16246   */\n      dup2\n        /* \"#utility.yul\":16116:16247   */\n      tag_473\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16108:16247   */\n      swap1\n      pop\n        /* \"#utility.yul\":16006:16254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16260:17111   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":16573:16576   */\n      0x80\n        /* \"#utility.yul\":16562:16571   */\n      dup3\n        /* \"#utility.yul\":16558:16577   */\n      add\n        /* \"#utility.yul\":16550:16577   */\n      swap1\n      pop\n        /* \"#utility.yul\":16587:16658   */\n      tag_515\n        /* \"#utility.yul\":16655:16656   */\n      0x00\n        /* \"#utility.yul\":16644:16653   */\n      dup4\n        /* \"#utility.yul\":16640:16657   */\n      add\n        /* \"#utility.yul\":16631:16637   */\n      dup8\n        /* \"#utility.yul\":16587:16658   */\n      tag_488\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16705:16714   */\n      dup2\n        /* \"#utility.yul\":16699:16703   */\n      dup2\n        /* \"#utility.yul\":16695:16715   */\n      sub\n        /* \"#utility.yul\":16690:16692   */\n      0x20\n        /* \"#utility.yul\":16679:16688   */\n      dup4\n        /* \"#utility.yul\":16675:16693   */\n      add\n        /* \"#utility.yul\":16668:16716   */\n      mstore\n        /* \"#utility.yul\":16733:16841   */\n      tag_516\n        /* \"#utility.yul\":16836:16840   */\n      dup2\n        /* \"#utility.yul\":16827:16833   */\n      dup7\n        /* \"#utility.yul\":16733:16841   */\n      tag_420\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16725:16841   */\n      swap1\n      pop\n        /* \"#utility.yul\":16888:16897   */\n      dup2\n        /* \"#utility.yul\":16882:16886   */\n      dup2\n        /* \"#utility.yul\":16878:16898   */\n      sub\n        /* \"#utility.yul\":16873:16875   */\n      0x40\n        /* \"#utility.yul\":16862:16871   */\n      dup4\n        /* \"#utility.yul\":16858:16876   */\n      add\n        /* \"#utility.yul\":16851:16899   */\n      mstore\n        /* \"#utility.yul\":16916:17022   */\n      tag_517\n        /* \"#utility.yul\":17017:17021   */\n      dup2\n        /* \"#utility.yul\":17008:17014   */\n      dup6\n        /* \"#utility.yul\":16916:17022   */\n      tag_434\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":16908:17022   */\n      swap1\n      pop\n        /* \"#utility.yul\":17032:17104   */\n      tag_518\n        /* \"#utility.yul\":17100:17102   */\n      0x60\n        /* \"#utility.yul\":17089:17098   */\n      dup4\n        /* \"#utility.yul\":17085:17103   */\n      add\n        /* \"#utility.yul\":17076:17082   */\n      dup5\n        /* \"#utility.yul\":17032:17104   */\n      tag_488\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16540:17111   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17117:17666   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":17330:17333   */\n      0x80\n        /* \"#utility.yul\":17319:17328   */\n      dup3\n        /* \"#utility.yul\":17315:17334   */\n      add\n        /* \"#utility.yul\":17307:17334   */\n      swap1\n      pop\n        /* \"#utility.yul\":17344:17415   */\n      tag_520\n        /* \"#utility.yul\":17412:17413   */\n      0x00\n        /* \"#utility.yul\":17401:17410   */\n      dup4\n        /* \"#utility.yul\":17397:17414   */\n      add\n        /* \"#utility.yul\":17388:17394   */\n      dup8\n        /* \"#utility.yul\":17344:17415   */\n      tag_488\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17425:17497   */\n      tag_521\n        /* \"#utility.yul\":17493:17495   */\n      0x20\n        /* \"#utility.yul\":17482:17491   */\n      dup4\n        /* \"#utility.yul\":17478:17496   */\n      add\n        /* \"#utility.yul\":17469:17475   */\n      dup7\n        /* \"#utility.yul\":17425:17497   */\n      tag_479\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17507:17577   */\n      tag_522\n        /* \"#utility.yul\":17573:17575   */\n      0x40\n        /* \"#utility.yul\":17562:17571   */\n      dup4\n        /* \"#utility.yul\":17558:17576   */\n      add\n        /* \"#utility.yul\":17549:17555   */\n      dup6\n        /* \"#utility.yul\":17507:17577   */\n      tag_495\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17587:17659   */\n      tag_523\n        /* \"#utility.yul\":17655:17657   */\n      0x60\n        /* \"#utility.yul\":17644:17653   */\n      dup4\n        /* \"#utility.yul\":17640:17658   */\n      add\n        /* \"#utility.yul\":17631:17637   */\n      dup5\n        /* \"#utility.yul\":17587:17659   */\n      tag_488\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17297:17666   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17672:17950   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":17738:17740   */\n      0x40\n        /* \"#utility.yul\":17732:17741   */\n      mload\n        /* \"#utility.yul\":17722:17741   */\n      swap1\n      pop\n        /* \"#utility.yul\":17780:17784   */\n      dup2\n        /* \"#utility.yul\":17772:17778   */\n      dup2\n        /* \"#utility.yul\":17768:17785   */\n      add\n        /* \"#utility.yul\":17887:17893   */\n      dup2\n        /* \"#utility.yul\":17875:17885   */\n      dup2\n        /* \"#utility.yul\":17872:17894   */\n      lt\n        /* \"#utility.yul\":17851:17869   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17839:17849   */\n      dup3\n        /* \"#utility.yul\":17836:17870   */\n      gt\n        /* \"#utility.yul\":17833:17895   */\n      or\n        /* \"#utility.yul\":17830:17832   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":17898:17911   */\n      tag_526\n      tag_527\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17830:17832   */\n    tag_525:\n        /* \"#utility.yul\":17933:17943   */\n      dup1\n        /* \"#utility.yul\":17929:17931   */\n      0x40\n        /* \"#utility.yul\":17922:17944   */\n      mstore\n        /* \"#utility.yul\":17712:17950   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17956:18282   */\n    tag_280:\n      0x00\n        /* \"#utility.yul\":18107:18125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18099:18105   */\n      dup3\n        /* \"#utility.yul\":18096:18126   */\n      gt\n        /* \"#utility.yul\":18093:18095   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":18129:18142   */\n      tag_530\n      tag_527\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18093:18095   */\n    tag_529:\n        /* \"#utility.yul\":18209:18213   */\n      0x1f\n        /* \"#utility.yul\":18205:18214   */\n      not\n        /* \"#utility.yul\":18198:18202   */\n      0x1f\n        /* \"#utility.yul\":18190:18196   */\n      dup4\n        /* \"#utility.yul\":18186:18203   */\n      add\n        /* \"#utility.yul\":18182:18215   */\n      and\n        /* \"#utility.yul\":18174:18215   */\n      swap1\n      pop\n        /* \"#utility.yul\":18270:18274   */\n      0x20\n        /* \"#utility.yul\":18264:18268   */\n      dup2\n        /* \"#utility.yul\":18260:18275   */\n      add\n        /* \"#utility.yul\":18252:18275   */\n      swap1\n      pop\n        /* \"#utility.yul\":18022:18282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18288:18615   */\n    tag_289:\n      0x00\n        /* \"#utility.yul\":18440:18458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18432:18438   */\n      dup3\n        /* \"#utility.yul\":18429:18459   */\n      gt\n        /* \"#utility.yul\":18426:18428   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":18462:18475   */\n      tag_533\n      tag_527\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":18426:18428   */\n    tag_532:\n        /* \"#utility.yul\":18542:18546   */\n      0x1f\n        /* \"#utility.yul\":18538:18547   */\n      not\n        /* \"#utility.yul\":18531:18535   */\n      0x1f\n        /* \"#utility.yul\":18523:18529   */\n      dup4\n        /* \"#utility.yul\":18519:18536   */\n      add\n        /* \"#utility.yul\":18515:18548   */\n      and\n        /* \"#utility.yul\":18507:18548   */\n      swap1\n      pop\n        /* \"#utility.yul\":18603:18607   */\n      0x20\n        /* \"#utility.yul\":18597:18601   */\n      dup2\n        /* \"#utility.yul\":18593:18608   */\n      add\n        /* \"#utility.yul\":18585:18608   */\n      swap1\n      pop\n        /* \"#utility.yul\":18355:18615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18621:18753   */\n    tag_427:\n      0x00\n        /* \"#utility.yul\":18711:18714   */\n      dup2\n        /* \"#utility.yul\":18703:18714   */\n      swap1\n      pop\n        /* \"#utility.yul\":18741:18745   */\n      0x20\n        /* \"#utility.yul\":18736:18739   */\n      dup3\n        /* \"#utility.yul\":18732:18746   */\n      add\n        /* \"#utility.yul\":18724:18746   */\n      swap1\n      pop\n        /* \"#utility.yul\":18693:18753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18759:18890   */\n    tag_441:\n      0x00\n        /* \"#utility.yul\":18848:18851   */\n      dup2\n        /* \"#utility.yul\":18840:18851   */\n      swap1\n      pop\n        /* \"#utility.yul\":18878:18882   */\n      0x20\n        /* \"#utility.yul\":18873:18876   */\n      dup3\n        /* \"#utility.yul\":18869:18883   */\n      add\n        /* \"#utility.yul\":18861:18883   */\n      swap1\n      pop\n        /* \"#utility.yul\":18830:18890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18896:19010   */\n    tag_423:\n      0x00\n        /* \"#utility.yul\":18997:19002   */\n      dup2\n        /* \"#utility.yul\":18991:19003   */\n      mload\n        /* \"#utility.yul\":18981:19003   */\n      swap1\n      pop\n        /* \"#utility.yul\":18970:19010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19016:19129   */\n    tag_437:\n      0x00\n        /* \"#utility.yul\":19116:19121   */\n      dup2\n        /* \"#utility.yul\":19110:19122   */\n      mload\n        /* \"#utility.yul\":19100:19122   */\n      swap1\n      pop\n        /* \"#utility.yul\":19089:19129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19135:19233   */\n    tag_455:\n      0x00\n        /* \"#utility.yul\":19220:19225   */\n      dup2\n        /* \"#utility.yul\":19214:19226   */\n      mload\n        /* \"#utility.yul\":19204:19226   */\n      swap1\n      pop\n        /* \"#utility.yul\":19193:19233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19239:19338   */\n    tag_468:\n      0x00\n        /* \"#utility.yul\":19325:19330   */\n      dup2\n        /* \"#utility.yul\":19319:19331   */\n      mload\n        /* \"#utility.yul\":19309:19331   */\n      swap1\n      pop\n        /* \"#utility.yul\":19298:19338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19344:19457   */\n    tag_433:\n      0x00\n        /* \"#utility.yul\":19446:19450   */\n      0x20\n        /* \"#utility.yul\":19441:19444   */\n      dup3\n        /* \"#utility.yul\":19437:19451   */\n      add\n        /* \"#utility.yul\":19429:19451   */\n      swap1\n      pop\n        /* \"#utility.yul\":19419:19457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19463:19575   */\n    tag_447:\n      0x00\n        /* \"#utility.yul\":19564:19568   */\n      0x20\n        /* \"#utility.yul\":19559:19562   */\n      dup3\n        /* \"#utility.yul\":19555:19569   */\n      add\n        /* \"#utility.yul\":19547:19569   */\n      swap1\n      pop\n        /* \"#utility.yul\":19537:19575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19581:19765   */\n    tag_425:\n      0x00\n        /* \"#utility.yul\":19714:19720   */\n      dup3\n        /* \"#utility.yul\":19709:19712   */\n      dup3\n        /* \"#utility.yul\":19702:19721   */\n      mstore\n        /* \"#utility.yul\":19754:19758   */\n      0x20\n        /* \"#utility.yul\":19749:19752   */\n      dup3\n        /* \"#utility.yul\":19745:19759   */\n      add\n        /* \"#utility.yul\":19730:19759   */\n      swap1\n      pop\n        /* \"#utility.yul\":19692:19765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19771:19954   */\n    tag_439:\n      0x00\n        /* \"#utility.yul\":19903:19909   */\n      dup3\n        /* \"#utility.yul\":19898:19901   */\n      dup3\n        /* \"#utility.yul\":19891:19910   */\n      mstore\n        /* \"#utility.yul\":19943:19947   */\n      0x20\n        /* \"#utility.yul\":19938:19941   */\n      dup3\n        /* \"#utility.yul\":19934:19948   */\n      add\n        /* \"#utility.yul\":19919:19948   */\n      swap1\n      pop\n        /* \"#utility.yul\":19881:19954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19960:20128   */\n    tag_457:\n      0x00\n        /* \"#utility.yul\":20077:20083   */\n      dup3\n        /* \"#utility.yul\":20072:20075   */\n      dup3\n        /* \"#utility.yul\":20065:20084   */\n      mstore\n        /* \"#utility.yul\":20117:20121   */\n      0x20\n        /* \"#utility.yul\":20112:20115   */\n      dup3\n        /* \"#utility.yul\":20108:20122   */\n      add\n        /* \"#utility.yul\":20093:20122   */\n      swap1\n      pop\n        /* \"#utility.yul\":20055:20128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20134:20303   */\n    tag_470:\n      0x00\n        /* \"#utility.yul\":20252:20258   */\n      dup3\n        /* \"#utility.yul\":20247:20250   */\n      dup3\n        /* \"#utility.yul\":20240:20259   */\n      mstore\n        /* \"#utility.yul\":20292:20296   */\n      0x20\n        /* \"#utility.yul\":20287:20290   */\n      dup3\n        /* \"#utility.yul\":20283:20297   */\n      add\n        /* \"#utility.yul\":20268:20297   */\n      swap1\n      pop\n        /* \"#utility.yul\":20230:20303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20309:20405   */\n    tag_414:\n      0x00\n        /* \"#utility.yul\":20375:20399   */\n      tag_547\n        /* \"#utility.yul\":20393:20398   */\n      dup3\n        /* \"#utility.yul\":20375:20399   */\n      tag_478\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20364:20399   */\n      swap1\n      pop\n        /* \"#utility.yul\":20354:20405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20411:20501   */\n    tag_451:\n      0x00\n        /* \"#utility.yul\":20488:20493   */\n      dup2\n        /* \"#utility.yul\":20481:20494   */\n      iszero\n        /* \"#utility.yul\":20474:20495   */\n      iszero\n        /* \"#utility.yul\":20463:20495   */\n      swap1\n      pop\n        /* \"#utility.yul\":20453:20501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20507:20597   */\n    tag_549:\n      0x00\n        /* \"#utility.yul\":20585:20590   */\n      dup2\n        /* \"#utility.yul\":20582:20583   */\n      0x02\n        /* \"#utility.yul\":20571:20591   */\n      signextend\n        /* \"#utility.yul\":20560:20591   */\n      swap1\n      pop\n        /* \"#utility.yul\":20550:20597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20603:20679   */\n    tag_464:\n      0x00\n        /* \"#utility.yul\":20668:20673   */\n      dup2\n        /* \"#utility.yul\":20657:20673   */\n      swap1\n      pop\n        /* \"#utility.yul\":20647:20679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20685:20774   */\n    tag_552:\n      0x00\n        /* \"#utility.yul\":20761:20767   */\n      0xffff\n        /* \"#utility.yul\":20754:20759   */\n      dup3\n        /* \"#utility.yul\":20750:20768   */\n      and\n        /* \"#utility.yul\":20739:20768   */\n      swap1\n      pop\n        /* \"#utility.yul\":20729:20774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20780:20906   */\n    tag_478:\n      0x00\n        /* \"#utility.yul\":20857:20899   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20850:20855   */\n      dup3\n        /* \"#utility.yul\":20846:20900   */\n      and\n        /* \"#utility.yul\":20835:20900   */\n      swap1\n      pop\n        /* \"#utility.yul\":20825:20906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20912:21003   */\n    tag_486:\n      0x00\n        /* \"#utility.yul\":20988:20996   */\n      0xffffff\n        /* \"#utility.yul\":20981:20986   */\n      dup3\n        /* \"#utility.yul\":20977:20997   */\n      and\n        /* \"#utility.yul\":20966:20997   */\n      swap1\n      pop\n        /* \"#utility.yul\":20956:21003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21009:21086   */\n    tag_491:\n      0x00\n        /* \"#utility.yul\":21075:21080   */\n      dup2\n        /* \"#utility.yul\":21064:21080   */\n      swap1\n      pop\n        /* \"#utility.yul\":21054:21086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21092:21185   */\n    tag_494:\n      0x00\n        /* \"#utility.yul\":21168:21178   */\n      0xffffffff\n        /* \"#utility.yul\":21161:21166   */\n      dup3\n        /* \"#utility.yul\":21157:21179   */\n      and\n        /* \"#utility.yul\":21146:21179   */\n      swap1\n      pop\n        /* \"#utility.yul\":21136:21185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21191:21277   */\n    tag_558:\n      0x00\n        /* \"#utility.yul\":21266:21270   */\n      0xff\n        /* \"#utility.yul\":21259:21264   */\n      dup3\n        /* \"#utility.yul\":21255:21271   */\n      and\n        /* \"#utility.yul\":21244:21271   */\n      swap1\n      pop\n        /* \"#utility.yul\":21234:21277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21283:21437   */\n    tag_284:\n        /* \"#utility.yul\":21367:21373   */\n      dup3\n        /* \"#utility.yul\":21362:21365   */\n      dup2\n        /* \"#utility.yul\":21357:21360   */\n      dup4\n        /* \"#utility.yul\":21344:21374   */\n      calldatacopy\n        /* \"#utility.yul\":21429:21430   */\n      0x00\n        /* \"#utility.yul\":21420:21426   */\n      dup4\n        /* \"#utility.yul\":21415:21418   */\n      dup4\n        /* \"#utility.yul\":21411:21427   */\n      add\n        /* \"#utility.yul\":21404:21431   */\n      mstore\n        /* \"#utility.yul\":21334:21437   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21443:21750   */\n    tag_292:\n        /* \"#utility.yul\":21511:21512   */\n      0x00\n        /* \"#utility.yul\":21521:21634   */\n    tag_562:\n        /* \"#utility.yul\":21535:21541   */\n      dup4\n        /* \"#utility.yul\":21532:21533   */\n      dup2\n        /* \"#utility.yul\":21529:21542   */\n      lt\n        /* \"#utility.yul\":21521:21634   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":21620:21621   */\n      dup1\n        /* \"#utility.yul\":21615:21618   */\n      dup3\n        /* \"#utility.yul\":21611:21622   */\n      add\n        /* \"#utility.yul\":21605:21623   */\n      mload\n        /* \"#utility.yul\":21601:21602   */\n      dup2\n        /* \"#utility.yul\":21596:21599   */\n      dup5\n        /* \"#utility.yul\":21592:21603   */\n      add\n        /* \"#utility.yul\":21585:21624   */\n      mstore\n        /* \"#utility.yul\":21557:21559   */\n      0x20\n        /* \"#utility.yul\":21554:21555   */\n      dup2\n        /* \"#utility.yul\":21550:21560   */\n      add\n        /* \"#utility.yul\":21545:21560   */\n      swap1\n      pop\n        /* \"#utility.yul\":21521:21634   */\n      jump(tag_562)\n    tag_564:\n        /* \"#utility.yul\":21652:21658   */\n      dup4\n        /* \"#utility.yul\":21649:21650   */\n      dup2\n        /* \"#utility.yul\":21646:21659   */\n      gt\n        /* \"#utility.yul\":21643:21645   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":21732:21733   */\n      0x00\n        /* \"#utility.yul\":21723:21729   */\n      dup5\n        /* \"#utility.yul\":21718:21721   */\n      dup5\n        /* \"#utility.yul\":21714:21730   */\n      add\n        /* \"#utility.yul\":21707:21734   */\n      mstore\n        /* \"#utility.yul\":21643:21645   */\n    tag_565:\n        /* \"#utility.yul\":21492:21750   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21756:21856   */\n    tag_419:\n      0x00\n        /* \"#utility.yul\":21824:21850   */\n      tag_567\n        /* \"#utility.yul\":21844:21849   */\n      dup3\n        /* \"#utility.yul\":21824:21850   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":21813:21850   */\n      swap1\n      pop\n        /* \"#utility.yul\":21803:21856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21862:21956   */\n    tag_568:\n      0x00\n        /* \"#utility.yul\":21930:21950   */\n      tag_570\n        /* \"#utility.yul\":21944:21949   */\n      dup3\n        /* \"#utility.yul\":21930:21950   */\n      tag_571\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":21919:21950   */\n      swap1\n      pop\n        /* \"#utility.yul\":21909:21956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21962:22056   */\n    tag_487:\n      0x00\n        /* \"#utility.yul\":22029:22050   */\n      tag_573\n        /* \"#utility.yul\":22044:22049   */\n      dup3\n        /* \"#utility.yul\":22029:22050   */\n      tag_574\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":22018:22050   */\n      swap1\n      pop\n        /* \"#utility.yul\":22008:22056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22062:22110   */\n    tag_527:\n        /* \"#utility.yul\":22095:22104   */\n      invalid\n        /* \"#utility.yul\":22116:22218   */\n    tag_460:\n      0x00\n        /* \"#utility.yul\":22208:22210   */\n      0x1f\n        /* \"#utility.yul\":22204:22211   */\n      not\n        /* \"#utility.yul\":22199:22201   */\n      0x1f\n        /* \"#utility.yul\":22192:22197   */\n      dup4\n        /* \"#utility.yul\":22188:22202   */\n      add\n        /* \"#utility.yul\":22184:22212   */\n      and\n        /* \"#utility.yul\":22174:22212   */\n      swap1\n      pop\n        /* \"#utility.yul\":22164:22218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22224:22320   */\n    tag_574:\n      0x00\n        /* \"#utility.yul\":22307:22312   */\n      dup2\n        /* \"#utility.yul\":22302:22305   */\n      0xe8\n        /* \"#utility.yul\":22298:22313   */\n      shl\n        /* \"#utility.yul\":22277:22313   */\n      swap1\n      pop\n        /* \"#utility.yul\":22267:22320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22326:22420   */\n    tag_571:\n      0x00\n        /* \"#utility.yul\":22407:22412   */\n      dup2\n        /* \"#utility.yul\":22403:22405   */\n      0x60\n        /* \"#utility.yul\":22399:22413   */\n      shl\n        /* \"#utility.yul\":22378:22413   */\n      swap1\n      pop\n        /* \"#utility.yul\":22368:22420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22426:22548   */\n    tag_296:\n        /* \"#utility.yul\":22499:22523   */\n      tag_580\n        /* \"#utility.yul\":22517:22522   */\n      dup2\n        /* \"#utility.yul\":22499:22523   */\n      tag_414\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":22492:22497   */\n      dup2\n        /* \"#utility.yul\":22489:22524   */\n      eq\n        /* \"#utility.yul\":22479:22481   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":22538:22539   */\n      0x00\n        /* \"#utility.yul\":22535:22536   */\n      dup1\n        /* \"#utility.yul\":22528:22540   */\n      revert\n        /* \"#utility.yul\":22479:22481   */\n    tag_581:\n        /* \"#utility.yul\":22469:22548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22554:22670   */\n    tag_300:\n        /* \"#utility.yul\":22624:22645   */\n      tag_583\n        /* \"#utility.yul\":22639:22644   */\n      dup2\n        /* \"#utility.yul\":22624:22645   */\n      tag_451\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":22617:22622   */\n      dup2\n        /* \"#utility.yul\":22614:22646   */\n      eq\n        /* \"#utility.yul\":22604:22606   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":22660:22661   */\n      0x00\n        /* \"#utility.yul\":22657:22658   */\n      dup1\n        /* \"#utility.yul\":22650:22662   */\n      revert\n        /* \"#utility.yul\":22604:22606   */\n    tag_584:\n        /* \"#utility.yul\":22594:22670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22676:22794   */\n    tag_308:\n        /* \"#utility.yul\":22747:22769   */\n      tag_586\n        /* \"#utility.yul\":22763:22768   */\n      dup2\n        /* \"#utility.yul\":22747:22769   */\n      tag_549\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":22740:22745   */\n      dup2\n        /* \"#utility.yul\":22737:22770   */\n      eq\n        /* \"#utility.yul\":22727:22729   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":22784:22785   */\n      0x00\n        /* \"#utility.yul\":22781:22782   */\n      dup1\n        /* \"#utility.yul\":22774:22786   */\n      revert\n        /* \"#utility.yul\":22727:22729   */\n    tag_587:\n        /* \"#utility.yul\":22717:22794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22800:22920   */\n    tag_312:\n        /* \"#utility.yul\":22872:22895   */\n      tag_589\n        /* \"#utility.yul\":22889:22894   */\n      dup2\n        /* \"#utility.yul\":22872:22895   */\n      tag_464\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":22865:22870   */\n      dup2\n        /* \"#utility.yul\":22862:22896   */\n      eq\n        /* \"#utility.yul\":22852:22854   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":22910:22911   */\n      0x00\n        /* \"#utility.yul\":22907:22908   */\n      dup1\n        /* \"#utility.yul\":22900:22912   */\n      revert\n        /* \"#utility.yul\":22852:22854   */\n    tag_590:\n        /* \"#utility.yul\":22842:22920   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22926:23046   */\n    tag_350:\n        /* \"#utility.yul\":22998:23021   */\n      tag_592\n        /* \"#utility.yul\":23015:23020   */\n      dup2\n        /* \"#utility.yul\":22998:23021   */\n      tag_552\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":22991:22996   */\n      dup2\n        /* \"#utility.yul\":22988:23022   */\n      eq\n        /* \"#utility.yul\":22978:22980   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":23036:23037   */\n      0x00\n        /* \"#utility.yul\":23033:23034   */\n      dup1\n        /* \"#utility.yul\":23026:23038   */\n      revert\n        /* \"#utility.yul\":22978:22980   */\n    tag_593:\n        /* \"#utility.yul\":22968:23046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23052:23174   */\n    tag_343:\n        /* \"#utility.yul\":23125:23149   */\n      tag_595\n        /* \"#utility.yul\":23143:23148   */\n      dup2\n        /* \"#utility.yul\":23125:23149   */\n      tag_478\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":23118:23123   */\n      dup2\n        /* \"#utility.yul\":23115:23150   */\n      eq\n        /* \"#utility.yul\":23105:23107   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":23164:23165   */\n      0x00\n        /* \"#utility.yul\":23161:23162   */\n      dup1\n        /* \"#utility.yul\":23154:23166   */\n      revert\n        /* \"#utility.yul\":23105:23107   */\n    tag_596:\n        /* \"#utility.yul\":23095:23174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23180:23300   */\n    tag_353:\n        /* \"#utility.yul\":23252:23275   */\n      tag_598\n        /* \"#utility.yul\":23269:23274   */\n      dup2\n        /* \"#utility.yul\":23252:23275   */\n      tag_486\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":23245:23250   */\n      dup2\n        /* \"#utility.yul\":23242:23276   */\n      eq\n        /* \"#utility.yul\":23232:23234   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":23290:23291   */\n      0x00\n        /* \"#utility.yul\":23287:23288   */\n      dup1\n        /* \"#utility.yul\":23280:23292   */\n      revert\n        /* \"#utility.yul\":23232:23234   */\n    tag_599:\n        /* \"#utility.yul\":23222:23300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23306:23428   */\n    tag_356:\n        /* \"#utility.yul\":23379:23403   */\n      tag_601\n        /* \"#utility.yul\":23397:23402   */\n      dup2\n        /* \"#utility.yul\":23379:23403   */\n      tag_491\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":23372:23377   */\n      dup2\n        /* \"#utility.yul\":23369:23404   */\n      eq\n        /* \"#utility.yul\":23359:23361   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":23418:23419   */\n      0x00\n        /* \"#utility.yul\":23415:23416   */\n      dup1\n        /* \"#utility.yul\":23408:23420   */\n      revert\n        /* \"#utility.yul\":23359:23361   */\n    tag_602:\n        /* \"#utility.yul\":23349:23428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23434:23552   */\n    tag_363:\n        /* \"#utility.yul\":23505:23527   */\n      tag_604\n        /* \"#utility.yul\":23521:23526   */\n      dup2\n        /* \"#utility.yul\":23505:23527   */\n      tag_558\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":23498:23503   */\n      dup2\n        /* \"#utility.yul\":23495:23528   */\n      eq\n        /* \"#utility.yul\":23485:23487   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":23542:23543   */\n      0x00\n        /* \"#utility.yul\":23539:23540   */\n      dup1\n        /* \"#utility.yul\":23532:23544   */\n      revert\n        /* \"#utility.yul\":23485:23487   */\n    tag_605:\n        /* \"#utility.yul\":23475:23552   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe4409c77535903b92bab013cbc24cc06a05d608cccda9e76cdd9de4772c353764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:961:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:21"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:21",
														"type": ""
													}
												],
												"src": "7:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:346:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "305:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "308:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "298:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:21"
															},
															"nodeType": "YulIf",
															"src": "260:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "322:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "337:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "351:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "341:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "366:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "412:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "423:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "408:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "408:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "432:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "376:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "366:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "460:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "475:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "489:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "479:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "505:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "551:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "562:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "547:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "547:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "515:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "505:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:21",
														"type": ""
													}
												],
												"src": "156:440:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "657:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "686:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "668:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "657:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "639:7:21",
														"type": ""
													}
												],
												"src": "602:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "759:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "774:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "759:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "731:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "741:7:21",
														"type": ""
													}
												],
												"src": "704:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "936:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "945:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "948:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "938:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "938:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "902:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "927:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "909:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "909:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "899:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:43:21"
															},
															"nodeType": "YulIf",
															"src": "889:2:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:21",
														"type": ""
													}
												],
												"src": "836:122:21"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2AD2 CODESIZE SUB DUP1 PUSH3 0x2AD2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xC8 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xC2 DUP2 PUSH3 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xEC DUP6 DUP3 DUP7 ADD PUSH3 0xB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xFF DUP6 DUP3 DUP7 ADD PUSH3 0xB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x116 DUP3 PUSH3 0x11D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x148 DUP2 PUSH3 0x109 JUMP JUMPDEST DUP2 EQ PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x2947 PUSH3 0x18B PUSH1 0x0 CODECOPY DUP1 PUSH2 0x3B7 MSTORE POP DUP1 PUSH2 0x618 MSTORE DUP1 PUSH2 0xA5D MSTORE DUP1 PUSH2 0xCA1 MSTORE POP PUSH2 0x2947 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xC6A5026A EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x18A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBD21704A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1B6 DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x207 DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x267 DUP11 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2EA PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH2 0x3D9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x2FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x346 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP4 SWAP13 POP DUP1 DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH2 0x379 DUP15 PUSH2 0xC56 JUMP JUMPDEST ISZERO PUSH2 0x38E JUMPI PUSH2 0x387 DUP15 PUSH2 0xC71 JUMP JUMPDEST SWAP14 POP PUSH2 0x39E JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x252 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT SWAP1 POP PUSH1 0x0 PUSH2 0x433 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x464 JUMPI DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x494 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0x0 DUP14 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C3 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4F0 JUMP JUMPDEST DUP8 PUSH2 0x4E5 JUMPI PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 SUB PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x1 PUSH5 0x1000276A3 ADD JUMPDEST JUMPDEST DUP14 PUSH1 0x20 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x511 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x58A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x609 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH1 0x0 DUP10 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x5F8 DUP2 DUP5 DUP8 PUSH2 0xD0F JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x60F JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT SWAP1 POP PUSH1 0x0 PUSH2 0x694 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x6C6 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x0 DUP14 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F2 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x71F JUMP JUMPDEST DUP8 PUSH2 0x714 JUMPI PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 SUB PUSH2 0x71E JUMP JUMPDEST PUSH1 0x1 PUSH5 0x1000276A3 ADD JUMPDEST JUMPDEST DUP14 PUSH1 0x0 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x740 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7B9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x810 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH2 0x7FF DUP2 DUP5 DUP8 PUSH2 0xD0F JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x816 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x82D DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x872 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x87E DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8DE DUP11 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x961 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH2 0x63A JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x9BD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP4 SWAP13 POP DUP1 DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH2 0x9F0 DUP15 PUSH2 0xC56 JUMP JUMPDEST ISZERO PUSH2 0xA05 JUMPI PUSH2 0x9FE DUP15 PUSH2 0xC71 JUMP JUMPDEST SWAP14 POP PUSH2 0xA15 JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0xA23 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x8C9 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0xA3B JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA52 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA84 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0xACA JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0xAFF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0xB12 DUP8 DUP8 DUP8 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ PUSH2 0xBD3 JUMPI PUSH1 0x0 SLOAD DUP5 EQ PUSH2 0xBD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x14 DUP4 MLOAD SUB DUP2 PUSH2 0xBFD JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC1E PUSH1 0x0 DUP6 PUSH2 0xE29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0xC34 PUSH1 0x14 DUP6 PUSH2 0xF42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC4D PUSH1 0x3 PUSH1 0x14 ADD DUP6 PUSH2 0xE29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x14 PUSH1 0x3 PUSH1 0x14 ADD ADD ADD DUP3 MLOAD LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC93 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x3 PUSH1 0x14 ADD DUP5 MLOAD SUB DUP5 PUSH2 0x104C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD0 PUSH32 0x0 PUSH2 0xCCB DUP7 DUP7 DUP7 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 LT PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0xDB9 DUP10 PUSH2 0x142D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP8 POP DUP3 SWAP9 POP POP POP POP PUSH2 0xDF0 DUP3 DUP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP6 DUP6 DUP6 DUP10 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F DUP6 PUSH2 0xE1A DUP7 DUP7 DUP7 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 DUP4 ADD LT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F766572666C6F770000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F75744F66426F756E64730000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 PUSH1 0x20 DUP7 ADD ADD MLOAD DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP4 ADD LT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F766572666C6F77000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F75744F66426F756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 ADD LT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1217 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11FA JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x123E PUSH2 0x1C54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x127D JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH1 0x0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 MLOAD EQ PUSH2 0x14D6 JUMPI PUSH1 0x44 DUP5 MLOAD LT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1477 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP5 ADD SWAP4 POP DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14EA SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x155F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1594 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1630 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x163B JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x16D1 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x174E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x176D JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1778 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND GT DUP1 ISZERO PUSH2 0x18B4 JUMPI POP PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x18AE JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND EQ JUMPDEST DUP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST SWAP5 POP PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1939 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND GT DUP1 ISZERO PUSH2 0x1A00 JUMPI POP PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP15 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x19FA JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A11 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST SWAP6 POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND SLT DUP1 PUSH2 0x1A3E JUMPI POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND EQ DUP1 ISZERO PUSH2 0x1A3D JUMPI POP DUP1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x1A54 JUMPI DUP4 SWAP10 POP DUP3 SWAP8 POP DUP2 SWAP9 POP DUP1 SWAP7 POP PUSH2 0x1A61 JUMP JUMPDEST DUP2 SWAP10 POP DUP1 SWAP8 POP DUP4 SWAP9 POP DUP3 SWAP7 POP JUMPDEST POP POP POP POP PUSH1 0x0 DUP5 PUSH1 0xFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SHL SWAP1 POP JUMPDEST DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND SGT PUSH2 0x1BB2 JUMPI DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND EQ ISZERO PUSH2 0x1ADB JUMPI DUP4 PUSH1 0xFF SUB PUSH1 0xFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SHR DUP2 AND SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND SWAP1 POP PUSH2 0x1B79 DUP2 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0xFFFF AND DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x1A91 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BBF JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST DUP3 ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP4 DUP4 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x1C4B JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x1 DUP4 SUB DUP4 AND SWAP3 POP PUSH2 0x1C2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB9 PUSH2 0x1CB4 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDC DUP5 DUP3 DUP6 PUSH2 0x279D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF7 PUSH2 0x1CF2 DUP5 PUSH2 0x262A JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1A DUP5 DUP3 DUP6 PUSH2 0x27AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D31 DUP2 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D46 DUP2 PUSH2 0x2859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D85 DUP2 PUSH2 0x2870 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x2887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DAF DUP2 PUSH2 0x2887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DD6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DFB PUSH1 0xA0 PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E0B DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E1F DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E33 DUP5 DUP3 DUP6 ADD PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1E47 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1E5B DUP5 DUP3 DUP6 ADD PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E83 PUSH1 0xA0 PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E93 DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1EA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1EBB DUP5 DUP3 DUP6 ADD PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1ECF DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1EE3 DUP5 DUP3 DUP6 ADD PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFE DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F13 DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F28 DUP2 PUSH2 0x289E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3D DUP2 PUSH2 0x28CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F52 DUP2 PUSH2 0x28E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F67 DUP2 PUSH2 0x28E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F7C DUP2 PUSH2 0x28FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FBB DUP6 DUP3 DUP7 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1F43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2008 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2035 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2046 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206F DUP7 DUP3 DUP8 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20DA DUP5 DUP3 DUP6 ADD PUSH2 0x1DDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP5 DUP3 DUP6 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP11 DUP3 DUP12 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2146 DUP11 DUP3 DUP12 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2157 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2168 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2179 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x218A DUP11 DUP3 DUP12 ADD PUSH2 0x1F6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x219B DUP11 DUP3 DUP12 ADD PUSH2 0x1D37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21CD DUP7 DUP3 DUP8 ADD PUSH2 0x1F58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21DE DUP7 DUP3 DUP8 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21EF DUP7 DUP3 DUP8 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2205 DUP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221D DUP4 DUP4 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x2704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2249 PUSH2 0x2244 DUP3 PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x27DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225A DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x2264 DUP2 DUP6 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x226F DUP4 PUSH2 0x265A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22A0 JUMPI DUP2 MLOAD PUSH2 0x2287 DUP9 DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2292 DUP4 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2273 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B8 DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x22C2 DUP2 DUP6 PUSH2 0x26D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x22CD DUP4 PUSH2 0x266A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22FE JUMPI DUP2 MLOAD PUSH2 0x22E5 DUP9 DUP3 PUSH2 0x2211 JUMP JUMPDEST SWAP8 POP PUSH2 0x22F0 DUP4 PUSH2 0x26B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22D1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2314 DUP2 PUSH2 0x2716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2325 DUP3 PUSH2 0x2690 JUMP JUMPDEST PUSH2 0x232F DUP2 DUP6 PUSH2 0x26E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x233F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27AC JUMP JUMPDEST PUSH2 0x2348 DUP2 PUSH2 0x2817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235C DUP2 PUSH2 0x272F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236D DUP3 PUSH2 0x269B JUMP JUMPDEST PUSH2 0x2377 DUP2 DUP6 PUSH2 0x26F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2387 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27AC JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x2817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A8 PUSH1 0x10 DUP4 PUSH2 0x26F3 JUMP JUMPDEST SWAP2 POP PUSH32 0x556E6578706563746564206572726F7200000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E4 DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F3 DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x2405 DUP3 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2803 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2419 DUP2 PUSH2 0x2776 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2428 DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2437 DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2449 DUP3 DUP7 PUSH2 0x2238 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2459 DUP3 DUP6 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x2469 DUP3 DUP5 PUSH2 0x2238 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24AA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x24B7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x230B JUMP JUMPDEST PUSH2 0x24C4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24E3 DUP2 DUP5 PUSH2 0x231A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x239B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2546 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2410 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2558 DUP2 DUP7 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x256C DUP2 DUP6 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP PUSH2 0x257B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2410 JUMP JUMPDEST PUSH2 0x25A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23EA JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x242E JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x2815 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2615 JUMPI PUSH2 0x2614 PUSH2 0x2815 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x2815 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270F DUP3 PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27AF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP3 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FC DUP3 PUSH2 0x2835 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x2704 JUMP JUMPDEST DUP2 EQ PUSH2 0x2856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2862 DUP2 PUSH2 0x2716 JUMP JUMPDEST DUP2 EQ PUSH2 0x286D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2879 DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP2 EQ PUSH2 0x2884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2890 DUP2 PUSH2 0x272F JUMP JUMPDEST DUP2 EQ PUSH2 0x289B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28A7 DUP2 PUSH2 0x2739 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28BE DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28D5 DUP2 PUSH2 0x2767 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28EC DUP2 PUSH2 0x2776 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2903 DUP2 PUSH2 0x2790 JUMP JUMPDEST DUP2 EQ PUSH2 0x290E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID DIFFICULTY MULMOD 0xC7 PUSH22 0x35903B92BAB013CBC24CC06A05D608CCCDA9E76CDD9D 0xE4 PUSH24 0x2C353764736F6C6343000706003300000000000000000000 ",
							"sourceMap": "983:9333:3:-:0;;;1309:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1379:8;1389:6;532:8:0;522:18;;;;;;;;;;;;558:6;550:14;;;;;;;;;;;;466:105;;1309:90:3;;983:9333;;7:143:21;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:440::-;;;292:2;280:9;271:7;267:23;263:32;260:2;;;308:1;305;298:12;260:2;351:1;376:64;432:7;423:6;412:9;408:22;376:64;:::i;:::-;366:74;;322:128;489:2;515:64;571:7;562:6;551:9;547:22;515:64;:::i;:::-;505:74;;460:129;250:346;;;;;:::o;602:96::-;;668:24;686:5;668:24;:::i;:::-;657:35;;647:51;;;:::o;704:126::-;;781:42;774:5;770:54;759:65;;749:81;;;:::o;836:122::-;909:24;927:5;909:24;:::i;:::-;902:5;899:35;889:2;;948:1;945;938:12;889:2;879:79;:::o;983:9333:3:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23555:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:259:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:73:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "165:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "124:40:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "124:48:21"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "109:14:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:64:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "189:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "196:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "182:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "182:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "182:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "227:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "234:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "216:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "258:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "263:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "272:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "251:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:25:21"
															},
															"nodeType": "YulIf",
															"src": "248:2:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "331:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "302:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:41:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:21",
														"type": ""
													}
												],
												"src": "7:342:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "450:258:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "460:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "484:41:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "484:49:21"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "469:14:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "460:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "557:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "543:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "573:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "588:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "577:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "650:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "640:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "640:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "640:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "619:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "624:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "615:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "615:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "633:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "612:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:25:21"
															},
															"nodeType": "YulIf",
															"src": "609:2:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "690:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "695:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "663:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:39:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "663:39:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "423:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "428:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "436:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "444:5:21",
														"type": ""
													}
												],
												"src": "355:353:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "776:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "798:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "785:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "776:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "841:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "814:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "814:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "744:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "752:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "760:5:21",
														"type": ""
													}
												],
												"src": "714:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "919:77:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "929:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "944:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "938:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "984:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "960:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "960:30:21"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "897:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "905:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "913:5:21",
														"type": ""
													}
												],
												"src": "859:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1076:210:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1125:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1134:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1137:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1127:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1127:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1104:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1100:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1100:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1119:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1096:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:35:21"
															},
															"nodeType": "YulIf",
															"src": "1086:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1150:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1177:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1164:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1154:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1193:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1261:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1268:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1276:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1202:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1054:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1062:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1070:5:21",
														"type": ""
													}
												],
												"src": "1015:271:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1353:78:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1363:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1378:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1372:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1363:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1419:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "1394:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:31:21"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1331:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1339:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1347:5:21",
														"type": ""
													}
												],
												"src": "1292:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1488:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1498:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1520:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1562:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "1536:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1536:32:21"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1466:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1474:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1482:5:21",
														"type": ""
													}
												],
												"src": "1437:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:79:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1652:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1667:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1661:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1709:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "1683:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1683:32:21"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1636:5:21",
														"type": ""
													}
												],
												"src": "1580:141:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:215:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1863:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1872:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1865:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1865:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1842:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1850:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1838:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1838:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1857:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1827:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:35:21"
															},
															"nodeType": "YulIf",
															"src": "1824:2:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1888:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:13:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1892:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1924:99:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1996:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2004:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1933:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:90:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1924:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1792:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1800:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1808:5:21",
														"type": ""
													}
												],
												"src": "1741:288:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:932:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2229:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2238:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2241:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2231:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2231:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2231:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2206:3:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2202:19:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:4:21",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:30:21"
															},
															"nodeType": "YulIf",
															"src": "2195:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2254:29:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:4:21",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2263:14:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2254:5:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2293:153:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2371:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2378:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2410:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2421:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2406:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2406:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2430:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2385:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2385:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2360:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2360:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2456:155:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2495:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2499:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2536:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2543:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2532:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2532:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2575:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2586:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2571:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2571:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2595:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2550:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2550:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2525:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2525:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2621:155:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2660:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2664:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2701:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2708:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2697:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2740:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2751:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2736:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2736:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2760:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2715:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2715:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2690:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2690:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2786:149:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2820:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2834:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2824:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2861:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2868:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2857:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2899:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2910:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2895:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2895:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2919:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "2875:19:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2875:48:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2850:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2850:74:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2850:74:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2945:165:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:3:21",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3035:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3042:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3031:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3031:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3074:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3085:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3070:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3070:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3094:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3049:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3049:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3024:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3024:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3024:75:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2160:9:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2171:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:21",
														"type": ""
													}
												],
												"src": "2087:1030:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3276:930:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3320:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3322:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3297:3:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:19:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3314:4:21",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3289:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:30:21"
															},
															"nodeType": "YulIf",
															"src": "3286:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3345:29:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3369:4:21",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3354:14:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3345:5:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3384:153:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3422:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3426:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3462:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:4:21",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3458:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3458:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3501:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3512:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3497:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3497:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3521:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3476:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3476:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3451:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3451:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3451:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3547:155:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3586:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3590:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3627:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3634:4:21",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3623:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3623:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3666:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3677:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3662:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3662:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3686:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3641:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3641:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3616:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3616:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3712:153:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3749:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3763:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3753:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3790:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3797:4:21",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3786:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3786:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3829:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3840:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3825:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3825:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3849:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3804:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3804:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3779:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3779:75:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3875:149:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3909:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3913:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3950:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3957:4:21",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3946:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3946:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3988:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3999:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3984:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3984:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4008:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "3964:19:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3964:48:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3939:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:74:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3939:74:21"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4034:165:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4082:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:3:21",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4086:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4124:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4131:4:21",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4120:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4120:16:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4163:9:21"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4174:6:21"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4159:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4159:22:21"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4183:3:21"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4138:20:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:49:21"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4113:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:75:21"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4113:75:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3251:9:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3262:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3270:5:21",
														"type": ""
													}
												],
												"src": "3176:1030:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4264:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4274:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4296:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4283:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4274:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4312:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4312:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4242:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4250:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4258:5:21",
														"type": ""
													}
												],
												"src": "4212:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4420:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4430:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4445:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4439:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4430:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4488:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4461:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4461:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4398:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4406:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4414:5:21",
														"type": ""
													}
												],
												"src": "4357:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4568:79:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4578:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4593:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4587:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4578:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4635:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "4609:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4609:32:21"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4546:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4554:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4562:5:21",
														"type": ""
													}
												],
												"src": "4506:141:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4714:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4736:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4723:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4714:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4778:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "4752:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4752:32:21"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4682:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4690:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4698:5:21",
														"type": ""
													}
												],
												"src": "4653:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4848:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4858:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4880:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4867:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4858:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4923:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4896:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4826:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4834:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4842:5:21",
														"type": ""
													}
												],
												"src": "4796:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5014:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5029:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5023:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5014:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5072:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5045:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5045:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5045:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4982:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4990:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4998:5:21",
														"type": ""
													}
												],
												"src": "4941:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5151:78:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5161:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5176:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5170:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5161:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5217:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5192:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5192:31:21"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5129:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5137:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5145:5:21",
														"type": ""
													}
												],
												"src": "5090:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5327:426:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5373:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5382:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5385:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5375:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5375:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5375:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5357:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5344:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5369:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5340:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:32:21"
															},
															"nodeType": "YulIf",
															"src": "5337:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "5399:219:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5414:45:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5445:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5456:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5441:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5441:17:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5428:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:31:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5418:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5506:16:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5515:1:21",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5518:1:21",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "5508:6:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5508:12:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5508:12:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5478:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5486:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "5472:2:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5536:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5580:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5591:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5576:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5576:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5600:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5546:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5536:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5628:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5643:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5657:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5647:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5673:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5708:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5719:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5704:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5704:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5728:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5683:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5683:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5673:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5289:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5300:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5312:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5320:6:21",
														"type": ""
													}
												],
												"src": "5235:518:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5851:344:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5897:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5906:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5909:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5899:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:32:21"
															},
															"nodeType": "YulIf",
															"src": "5861:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "5923:127:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5938:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5952:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5942:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5967:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6012:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6023:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6008:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6032:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5977:30:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5977:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5967:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6060:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6075:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6079:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6105:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6150:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6161:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6146:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6146:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6170:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6115:30:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5813:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5824:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5836:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5844:6:21",
														"type": ""
													}
												],
												"src": "5759:436:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6308:552:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6354:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6363:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6366:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6356:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6356:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6356:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6329:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6350:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:32:21"
															},
															"nodeType": "YulIf",
															"src": "6318:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "6380:116:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6395:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6409:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6399:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6424:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6458:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6469:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6454:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6454:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6478:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "6434:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6434:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6424:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6506:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6521:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6525:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6551:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6585:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6596:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6581:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6581:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6605:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "6561:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6551:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6633:220:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6648:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6679:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6690:2:21",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6675:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6675:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6662:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6662:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6652:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6741:16:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6750:1:21",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6753:1:21",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "6743:6:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6743:12:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6743:12:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6713:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6721:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6710:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "6707:2:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6771:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6815:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6826:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6811:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6811:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6835:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6781:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6781:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6771:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6262:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6273:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6285:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6293:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6301:6:21",
														"type": ""
													}
												],
												"src": "6201:659:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6953:303:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6999:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7008:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7011:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7001:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7001:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7001:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6974:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6970:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6995:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:32:21"
															},
															"nodeType": "YulIf",
															"src": "6963:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7025:224:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7040:38:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7064:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7075:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7060:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7060:17:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7054:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7054:24:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7044:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7125:16:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7134:1:21",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7137:1:21",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7127:6:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7127:12:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7127:12:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7097:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7105:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7094:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "7091:2:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7155:84:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7211:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7222:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7207:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7207:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7231:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7165:41:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7165:74:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7155:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6923:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6934:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6946:6:21",
														"type": ""
													}
												],
												"src": "6866:390:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7371:240:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7418:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7427:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7430:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7420:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7420:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7420:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7392:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7388:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7388:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7413:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:33:21"
															},
															"nodeType": "YulIf",
															"src": "7381:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7444:160:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7459:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7473:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7463:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7488:106:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7566:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7577:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7562:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7562:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7586:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7498:63:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7498:96:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7488:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7341:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7352:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7364:6:21",
														"type": ""
													}
												],
												"src": "7262:349:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7728:242:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7775:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7784:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7787:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7777:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7777:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7777:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7749:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7758:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7770:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7741:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7741:33:21"
															},
															"nodeType": "YulIf",
															"src": "7738:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7801:162:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7816:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7830:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7820:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7845:108:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7925:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7936:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7921:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7921:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7945:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7855:65:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7855:98:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7845:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7698:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7709:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7721:6:21",
														"type": ""
													}
												],
												"src": "7617:353:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8145:1035:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8192:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8201:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8204:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8194:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8194:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8194:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8166:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8162:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8187:3:21",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:33:21"
															},
															"nodeType": "YulIf",
															"src": "8155:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "8218:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8233:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8247:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8237:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8262:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8308:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8319:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8304:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8304:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8328:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8272:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8272:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8262:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8356:127:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8371:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8385:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8375:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8401:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8445:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8456:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8441:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8441:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8465:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8411:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8401:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8493:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8508:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8512:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8538:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8583:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8594:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8579:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8579:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8603:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8548:30:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8548:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8538:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8631:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8646:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8660:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8650:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8676:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8721:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8732:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8717:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8717:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8741:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8686:30:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8686:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8676:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8769:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8784:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:3:21",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8788:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8815:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8860:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8871:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8856:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8880:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8825:30:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8825:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8815:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8908:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8923:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8937:3:21",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8927:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8954:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8998:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9009:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8994:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8994:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9018:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8964:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8964:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "8954:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9046:127:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9061:17:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9075:3:21",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9065:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9092:71:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9135:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9146:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9131:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9131:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9155:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9102:28:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9102:61:21"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "9092:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8067:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8078:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8090:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8098:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8106:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8114:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8122:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "8130:6:21",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "8138:6:21",
														"type": ""
													}
												],
												"src": "7976:1204:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:483:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9341:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9350:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9353:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9343:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9343:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9343:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9316:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9325:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9312:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9312:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9308:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9308:32:21"
															},
															"nodeType": "YulIf",
															"src": "9305:2:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "9367:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9382:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9396:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9386:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9411:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9421:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9421:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9411:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9534:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9550:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9596:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9607:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9592:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9592:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9616:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9560:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9560:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9550:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9644:127:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9659:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9663:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9689:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9733:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9744:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9729:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9729:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9753:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9699:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9699:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9689:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint160t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9249:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9260:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9272:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9280:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9288:6:21",
														"type": ""
													}
												],
												"src": "9186:592:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9864:99:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9908:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9874:33:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9874:46:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9874:46:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9929:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9947:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9952:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9943:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9943:14:21"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9929:10:21"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9837:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9845:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9853:10:21",
														"type": ""
													}
												],
												"src": "9784:179:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10047:97:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10089:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10097:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "10057:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:44:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10110:28:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10128:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10133:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10124:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10124:14:21"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "10110:10:21"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10020:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10028:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "10036:10:21",
														"type": ""
													}
												],
												"src": "9969:175:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10215:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10232:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10255:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10237:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10237:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10203:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10210:3:21",
														"type": ""
													}
												],
												"src": "10150:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10357:74:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10374:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10417:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10399:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10399:24:21"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10379:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10379:45:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10367:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10367:58:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10367:58:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10345:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10352:3:21",
														"type": ""
													}
												],
												"src": "10274:157:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10591:608:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10601:68:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10663:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint160_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10615:47:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10615:54:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10605:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10678:93:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10759:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10764:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint160_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10685:73:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10685:86:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10678:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10780:71:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10845:5:21"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint160_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10795:49:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10795:56:21"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10784:7:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10860:21:21",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10874:7:21"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10864:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10950:224:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10964:34:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10991:6:21"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10985:5:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10985:13:21"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10968:13:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11011:70:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11062:13:21"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11077:3:21"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint160_to_t_uint160",
																				"nodeType": "YulIdentifier",
																				"src": "11018:43:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11018:63:21"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11011:3:21"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11094:70:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11157:6:21"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint160_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11104:52:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11104:60:21"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11094:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10912:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10915:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10909:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10909:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10923:18:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10925:14:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10934:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10937:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10930:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10930:9:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10925:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10894:14:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10896:10:21",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10905:1:21",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10900:1:21",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10890:284:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11183:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11190:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11183:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint160_$dyn_memory_ptr_to_t_array$_t_uint160_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10570:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10577:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10586:3:21",
														"type": ""
													}
												],
												"src": "10467:732:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11355:602:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11365:67:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11426:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11379:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11379:53:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11369:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11441:92:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11521:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11526:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11448:72:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:85:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11441:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11542:70:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11606:5:21"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11557:48:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:55:21"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "11546:7:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11621:21:21",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "11635:7:21"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11625:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11711:221:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11725:34:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11752:6:21"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11746:5:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11746:13:21"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "11729:13:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11772:68:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11821:13:21"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11836:3:21"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint32_to_t_uint32",
																				"nodeType": "YulIdentifier",
																				"src": "11779:41:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11779:61:21"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11772:3:21"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11853:69:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11915:6:21"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11863:51:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11863:59:21"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11853:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11673:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11676:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11670:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11670:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11684:18:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11686:14:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11695:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11698:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11691:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11691:9:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11686:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11655:14:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11657:10:21",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11666:1:21",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "11661:1:21",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11651:281:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11941:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11948:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11941:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11334:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11341:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11350:3:21",
														"type": ""
													}
												],
												"src": "11233:724:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12022:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12039:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12059:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12044:14:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12044:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12032:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12032:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12032:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12010:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12017:3:21",
														"type": ""
													}
												],
												"src": "11963:109:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12168:270:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12178:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12224:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12192:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12182:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12239:77:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12304:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12309:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12246:57:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:70:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12351:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12358:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12347:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12347:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12365:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12370:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12325:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12325:52:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12325:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12386:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12397:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12424:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12402:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12402:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12386:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12149:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12156:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12164:3:21",
														"type": ""
													}
												],
												"src": "12078:360:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12507:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12524:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12546:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "12529:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12529:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12517:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12517:36:21"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12495:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12502:3:21",
														"type": ""
													}
												],
												"src": "12444:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12657:272:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12667:53:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12714:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12681:32:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12681:39:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12671:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12729:78:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12795:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12800:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12736:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12736:71:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12842:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12849:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12838:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12838:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12856:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12861:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12816:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:52:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12877:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12888:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12915:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12893:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12893:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12884:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12877:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12638:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12645:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12653:3:21",
														"type": ""
													}
												],
												"src": "12565:364:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13081:168:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13091:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13162:2:21",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13098:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13098:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13091:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13186:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13191:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13182:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13182:11:21"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13195:18:21",
																		"type": "",
																		"value": "Unexpected error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13175:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13175:39:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13175:39:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13224:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13235:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13231:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13069:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13077:3:21",
														"type": ""
													}
												],
												"src": "12935:314:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13310:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13327:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13350:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "13332:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13332:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13320:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13320:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13320:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13298:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13305:3:21",
														"type": ""
													}
												],
												"src": "13255:108:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13434:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13451:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13474:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "13456:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13456:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13444:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13444:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13444:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13422:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13429:3:21",
														"type": ""
													}
												],
												"src": "13369:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13574:72:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13591:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13632:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "13615:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13615:23:21"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "13596:18:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13596:43:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13584:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13584:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13584:56:21"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13562:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13569:3:21",
														"type": ""
													}
												],
												"src": "13493:153:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13717:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13734:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13757:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13739:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13739:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13727:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13727:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13727:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13705:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13712:3:21",
														"type": ""
													}
												],
												"src": "13652:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13829:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13846:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13868:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "13851:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13851:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13839:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13839:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13839:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13817:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13824:3:21",
														"type": ""
													}
												],
												"src": "13776:105:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13950:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13967:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13989:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "13972:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13972:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13960:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13960:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13960:36:21"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13938:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13945:3:21",
														"type": ""
													}
												],
												"src": "13887:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14178:363:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14251:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14260:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14189:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14189:75:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14273:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14284:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14289:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14280:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14280:12:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14273:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14362:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14371:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14302:59:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14302:73:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14302:73:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14384:18:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14395:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14400:1:21",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14391:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14391:11:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14384:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14474:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14483:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14412:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14412:75:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14496:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14507:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14512:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14503:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14503:12:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14496:3:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14525:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14532:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14525:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14141:3:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14147:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14155:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14163:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14174:3:21",
														"type": ""
													}
												],
												"src": "14008:533:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14645:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14655:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14667:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14678:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14663:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14663:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14655:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14735:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14748:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14759:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14744:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14744:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14691:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14691:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14691:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14617:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14629:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14640:4:21",
														"type": ""
													}
												],
												"src": "14547:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14995:515:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15005:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15017:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15028:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15013:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15013:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15005:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15086:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15099:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15110:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15095:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15095:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15042:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15042:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15042:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15161:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15174:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15185:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15170:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15170:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15123:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15123:66:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15123:66:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15241:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15254:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15265:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15250:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15250:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15199:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:70:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15199:70:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15323:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15336:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15347:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15332:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15332:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15279:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15279:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15279:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15372:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15383:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15368:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15368:19:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15393:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15399:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15389:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15389:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15361:49:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15361:49:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15419:84:21",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15489:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15498:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15427:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:76:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15419:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14935:9:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14947:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14955:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14963:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14971:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14979:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14990:4:21",
														"type": ""
													}
												],
												"src": "14775:735:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15634:195:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15644:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15656:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15667:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15652:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15652:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15644:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15691:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15702:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15687:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15687:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15710:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15716:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15706:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15706:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15680:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15680:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15736:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15808:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15817:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15744:63:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15744:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15736:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15606:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15618:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15629:4:21",
														"type": ""
													}
												],
												"src": "15516:313:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16006:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16016:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16028:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16039:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16024:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16024:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16016:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16063:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16074:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16059:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16059:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16082:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16088:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16078:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16078:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16052:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16052:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16052:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16108:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16242:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16116:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16116:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16108:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15986:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16001:4:21",
														"type": ""
													}
												],
												"src": "15835:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16540:571:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16550:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16562:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16573:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16558:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16550:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16631:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16644:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16655:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16640:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16640:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16587:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16587:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16587:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16679:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16690:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16675:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16675:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16699:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16705:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16695:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16695:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16668:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16668:48:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16668:48:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16725:116:21",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16827:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16836:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint160_$dyn_memory_ptr_to_t_array$_t_uint160_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16733:93:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16733:108:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16725:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16862:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16873:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16858:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16858:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16882:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16888:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16878:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16878:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16851:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16851:48:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16851:48:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16908:114:21",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17008:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17017:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16916:91:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16916:106:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16908:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17076:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17089:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17100:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17085:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17085:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17032:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17032:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17032:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16488:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16500:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16508:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16516:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16524:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16535:4:21",
														"type": ""
													}
												],
												"src": "16260:851:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17297:369:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17307:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17319:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17330:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17315:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17315:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17307:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17388:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17401:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17412:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17397:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17397:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17344:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17344:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17344:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17469:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17482:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17493:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17478:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17478:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17425:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17425:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17425:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17549:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17562:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17573:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17558:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17558:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint32_to_t_uint32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17507:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17507:70:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17507:70:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17631:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17644:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17655:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17640:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17640:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17587:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17587:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17587:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint160_t_uint32_t_uint256__to_t_uint256_t_uint160_t_uint32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17245:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17257:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17265:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17273:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17281:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17292:4:21",
														"type": ""
													}
												],
												"src": "17117:549:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17712:238:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17722:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17738:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17732:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17732:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "17722:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17750:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "17772:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17780:4:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17768:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17768:17:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "17754:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17896:17:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "17898:11:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17898:13:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17898:13:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "17839:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17851:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17836:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17836:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "17875:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17887:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "17872:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17872:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17833:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17833:62:21"
															},
															"nodeType": "YulIf",
															"src": "17830:2:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17929:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "17933:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17922:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17922:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17922:22:21"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17696:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17705:6:21",
														"type": ""
													}
												],
												"src": "17672:278:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18022:260:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18127:17:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "18129:11:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18129:13:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18129:13:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18099:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18107:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18096:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18096:30:21"
															},
															"nodeType": "YulIf",
															"src": "18093:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18174:41:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18190:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18198:4:21",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18186:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18186:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18209:4:21",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18205:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18205:9:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18182:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18182:33:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18174:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18252:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "18264:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18270:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18260:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18260:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18252:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18006:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18017:4:21",
														"type": ""
													}
												],
												"src": "17956:326:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18355:260:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18460:17:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "18462:11:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18462:13:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18462:13:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18432:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18440:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18429:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:30:21"
															},
															"nodeType": "YulIf",
															"src": "18426:2:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18507:41:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18523:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18531:4:21",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18519:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18519:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18542:4:21",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18538:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18538:9:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18515:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18515:33:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18507:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18585:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "18597:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18603:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18593:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18593:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "18585:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18339:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "18350:4:21",
														"type": ""
													}
												],
												"src": "18288:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18693:60:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18703:11:21",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18711:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18703:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18724:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18736:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18741:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18732:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18732:14:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18724:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint160_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18680:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18688:4:21",
														"type": ""
													}
												],
												"src": "18621:132:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18830:60:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18840:11:21",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18848:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18840:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18861:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18873:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18878:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18869:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18869:14:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18861:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18817:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18825:4:21",
														"type": ""
													}
												],
												"src": "18759:131:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18970:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18981:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18997:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18991:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18991:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18981:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint160_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18953:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18963:6:21",
														"type": ""
													}
												],
												"src": "18896:114:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19089:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19100:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19116:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19110:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19110:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19100:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19072:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19082:6:21",
														"type": ""
													}
												],
												"src": "19016:113:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19193:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19204:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19220:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19214:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19214:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19204:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19176:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19186:6:21",
														"type": ""
													}
												],
												"src": "19135:98:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19298:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19309:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19325:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19319:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19319:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19309:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19281:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19291:6:21",
														"type": ""
													}
												],
												"src": "19239:99:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19419:38:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19429:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "19441:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19446:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19437:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19437:14:21"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "19429:4:21"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint160_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "19406:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "19414:4:21",
														"type": ""
													}
												],
												"src": "19344:113:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19537:38:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19547:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "19559:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19564:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19555:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19555:14:21"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "19547:4:21"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "19524:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "19532:4:21",
														"type": ""
													}
												],
												"src": "19463:112:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19692:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19709:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19714:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19702:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19702:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19702:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19730:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19749:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19754:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19745:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19745:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19730:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint160_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19664:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19669:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19680:11:21",
														"type": ""
													}
												],
												"src": "19581:184:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19881:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19898:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19903:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19891:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19891:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19891:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19919:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19938:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19943:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19934:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19934:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19919:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19853:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19858:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19869:11:21",
														"type": ""
													}
												],
												"src": "19771:183:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20055:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20072:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20077:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20065:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20065:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20065:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20093:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20112:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20117:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20108:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20108:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20093:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20027:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20032:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20043:11:21",
														"type": ""
													}
												],
												"src": "19960:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20230:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20247:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20252:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20240:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20240:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20240:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20268:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20287:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20292:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20283:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20283:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20268:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20202:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20207:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20218:11:21",
														"type": ""
													}
												],
												"src": "20134:169:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20354:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20364:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20393:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20375:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20375:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20364:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20336:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20346:7:21",
														"type": ""
													}
												],
												"src": "20309:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20453:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20463:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20488:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20481:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20481:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20474:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20474:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20463:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20435:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20445:7:21",
														"type": ""
													}
												],
												"src": "20411:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20550:47:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20560:31:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20582:1:21",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20585:5:21"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "20571:10:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20571:20:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20560:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20532:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20542:7:21",
														"type": ""
													}
												],
												"src": "20507:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20647:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20657:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20668:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20657:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20629:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20639:7:21",
														"type": ""
													}
												],
												"src": "20603:76:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20729:45:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20739:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20754:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20761:6:21",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20750:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20750:18:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20739:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20711:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20721:7:21",
														"type": ""
													}
												],
												"src": "20685:89:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20825:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20835:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20850:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20857:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20846:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20846:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20835:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20807:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20817:7:21",
														"type": ""
													}
												],
												"src": "20780:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20956:47:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20966:31:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20981:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20988:8:21",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20977:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "20977:20:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20966:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20938:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20948:7:21",
														"type": ""
													}
												],
												"src": "20912:91:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21054:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21064:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "21075:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21064:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21036:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21046:7:21",
														"type": ""
													}
												],
												"src": "21009:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21136:49:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21146:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21161:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21168:10:21",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21157:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21157:22:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21146:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21118:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21128:7:21",
														"type": ""
													}
												],
												"src": "21092:93:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21234:43:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21244:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21259:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21266:4:21",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21255:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21255:16:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21244:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21216:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21226:7:21",
														"type": ""
													}
												],
												"src": "21191:86:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21334:103:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "21357:3:21"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "21362:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21367:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "21344:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21344:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21344:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "21415:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21420:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21411:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21411:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21429:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21404:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21404:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21404:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21316:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21321:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21326:6:21",
														"type": ""
													}
												],
												"src": "21283:154:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21492:258:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21502:10:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21511:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21506:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21571:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21596:3:21"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21601:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21592:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21592:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21615:3:21"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21620:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21611:3:21"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21611:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21605:5:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21605:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21585:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21585:39:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21585:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21532:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21535:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21529:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21529:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21543:19:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21545:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21554:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21557:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21550:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21550:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21545:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21525:3:21",
																"statements": []
															},
															"src": "21521:113:21"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21668:76:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21718:3:21"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21723:6:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21714:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21714:16:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21732:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21707:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21707:27:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21707:27:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21649:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21652:6:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21646:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21646:13:21"
															},
															"nodeType": "YulIf",
															"src": "21643:2:21"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21474:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21479:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21484:6:21",
														"type": ""
													}
												],
												"src": "21443:307:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21803:53:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21813:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21844:5:21"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21824:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21824:26:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "21813:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21785:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "21795:7:21",
														"type": ""
													}
												],
												"src": "21756:100:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21909:47:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21919:31:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21944:5:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "21930:13:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "21930:20:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "21919:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21891:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "21901:7:21",
														"type": ""
													}
												],
												"src": "21862:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22008:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22018:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22044:5:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nodeType": "YulIdentifier",
																	"src": "22029:14:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22029:21:21"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "22018:7:21"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21990:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "22000:7:21",
														"type": ""
													}
												],
												"src": "21962:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22085:25:21",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "invalid",
																	"nodeType": "YulIdentifier",
																	"src": "22095:7:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22095:9:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22095:9:21"
														}
													]
												},
												"name": "panic_error",
												"nodeType": "YulFunctionDefinition",
												"src": "22062:48:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22164:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22174:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22192:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22199:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22188:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22188:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22208:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22204:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22204:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22184:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22184:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22174:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22147:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22157:6:21",
														"type": ""
													}
												],
												"src": "22116:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22267:53:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22277:36:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22302:3:21",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22307:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "22298:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22298:15:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "22277:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22248:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "22258:8:21",
														"type": ""
													}
												],
												"src": "22224:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22368:52:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22378:35:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22403:2:21",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22407:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "22399:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22399:14:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "22378:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22349:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "22359:8:21",
														"type": ""
													}
												],
												"src": "22326:94:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22469:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22526:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22535:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22538:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22528:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22528:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22528:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22492:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22517:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "22499:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22499:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22489:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22489:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22482:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22482:43:21"
															},
															"nodeType": "YulIf",
															"src": "22479:2:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22462:5:21",
														"type": ""
													}
												],
												"src": "22426:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22594:76:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22648:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22657:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22660:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22650:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22650:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22650:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22617:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22639:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "22624:14:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22624:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22614:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22614:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22607:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22607:40:21"
															},
															"nodeType": "YulIf",
															"src": "22604:2:21"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22587:5:21",
														"type": ""
													}
												],
												"src": "22554:116:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22717:77:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22772:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22781:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22784:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22774:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22774:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22774:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22740:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22763:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "22747:15:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22747:22:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22737:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22737:33:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22730:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22730:41:21"
															},
															"nodeType": "YulIf",
															"src": "22727:2:21"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22710:5:21",
														"type": ""
													}
												],
												"src": "22676:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22842:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22898:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22907:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22910:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22900:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22900:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22900:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22865:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22889:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "22872:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22872:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22862:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22862:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22855:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22855:42:21"
															},
															"nodeType": "YulIf",
															"src": "22852:2:21"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22835:5:21",
														"type": ""
													}
												],
												"src": "22800:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22968:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23024:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23033:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23036:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23026:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23026:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23026:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22991:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23015:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "22998:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22998:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22988:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22988:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22981:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "22981:42:21"
															},
															"nodeType": "YulIf",
															"src": "22978:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22961:5:21",
														"type": ""
													}
												],
												"src": "22926:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23095:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23152:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23161:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23164:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23154:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23154:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23154:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23118:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23143:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "23125:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23125:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23115:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23115:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23108:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23108:43:21"
															},
															"nodeType": "YulIf",
															"src": "23105:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23088:5:21",
														"type": ""
													}
												],
												"src": "23052:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23222:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23278:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23287:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23290:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23280:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23280:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23280:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23245:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23269:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "23252:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23252:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23242:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23242:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23235:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23235:42:21"
															},
															"nodeType": "YulIf",
															"src": "23232:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23215:5:21",
														"type": ""
													}
												],
												"src": "23180:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23349:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23406:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23415:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23418:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23408:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23408:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23408:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23372:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23397:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "23379:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23379:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23369:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23369:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23362:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23362:43:21"
															},
															"nodeType": "YulIf",
															"src": "23359:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23342:5:21",
														"type": ""
													}
												],
												"src": "23306:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23475:77:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23530:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23539:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23542:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23532:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23532:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23532:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23498:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23521:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "23505:15:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23505:22:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23495:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23495:33:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23488:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "23488:41:21"
															},
															"nodeType": "YulIf",
															"src": "23485:2:21"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23468:5:21",
														"type": ""
													}
												],
												"src": "23434:118:21"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct IQuoterV2.QuoteExactInputSingleParams\n    function abi_decode_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocateMemory(0xa0)\n\n        {\n            // tokenIn\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenOut\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountIn\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint160(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct IQuoterV2.QuoteExactOutputSingleParams\n    function abi_decode_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocateMemory(0xa0)\n\n        {\n            // tokenIn\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenOut\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // fee\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint160(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint160(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint160t_int24_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint160_to_t_uint160(value0, pos) -> updatedPos {\n        abi_encode_t_uint160_to_t_uint160(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint32_to_t_uint32(value0, pos) -> updatedPos {\n        abi_encode_t_uint32_to_t_uint32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    // uint160[] -> uint160[]\n    function abi_encode_t_array$_t_uint160_$dyn_memory_ptr_to_t_array$_t_uint160_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint160_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint160_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint160_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint160_to_t_uint160(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint160_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint32[] -> uint32[]\n    function abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint32_to_t_uint32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"Unexpected error\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint24(cleanup_t_uint24(value)))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint24_to_t_uint24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint160_$dyn_memory_ptr_to_t_array$_t_uint160_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint32_$dyn_memory_ptr_to_t_array$_t_uint32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint160_t_uint32_t_uint256__to_t_uint256_t_uint160_t_uint32_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint160_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint160_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint160_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint160_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"9": [
									{
										"length": 32,
										"start": 1560
									},
									{
										"length": 32,
										"start": 2653
									},
									{
										"length": 32,
										"start": 3233
									}
								],
								"13": [
									{
										"length": 32,
										"start": 951
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a015514610106578063c6a5026a14610124578063cdca175314610157578063fa461e331461018a5761007d565b80632f80bb1d146100825780634aa4a4fc146100b5578063bd21704a146100d3575b600080fd5b61009c60048036038101906100979190611f82565b6101a6565b6040516100ac9493929190612531565b60405180910390f35b6100bd6103b5565b6040516100ca919061247a565b60405180910390f35b6100ed60048036038101906100e891906120e3565b6103d9565b6040516100fd9493929190612584565b60405180910390f35b61010e610616565b60405161011b919061247a565b60405180910390f35b61013e600480360381019061013991906120ba565b61063a565b60405161014e9493929190612584565b60405180910390f35b610171600480360381019061016c9190611f82565b61081d565b6040516101819493929190612531565b60405180910390f35b6101a4600480360381019061019f9190612012565b610a2c565b005b600060608060006101b686610bea565b67ffffffffffffffff811180156101cc57600080fd5b506040519080825280602002602001820160405280156101fb5781602001602082028036833780820191505090505b50925061020786610bea565b67ffffffffffffffff8111801561021d57600080fd5b5060405190808252806020026020018201604052801561024c5781602001602082028036833780820191505090505b50915060005b6001156103aa5760008060006102678a610c05565b9250925092506000806000806102ea6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506103d9565b9350935093509350828b89815181106102ff57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a898151811061034657fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506103798e610c56565b1561038e576103878e610c71565b9d5061039e565b8c9b5050505050505050506103ac565b50505050505050610252565b505b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610433876000015188602001518960600151610c9a565b90506000876080015173ffffffffffffffffffffffffffffffffffffffff1614156104645786604001516000819055505b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856104948c60400151610cd9565b60000360008d6080015173ffffffffffffffffffffffffffffffffffffffff16146104c3578c608001516104f0565b876104e557600173fffd8963efd1fc6a506488495d951d5263988d26036104ef565b60016401000276a3015b5b8d602001518e606001518f600001516040516020016105119392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610540959493929190612495565b6040805180830381600087803b15801561055957600080fd5b505af192505050801561058a57506040513d601f19601f820116820180604052508101906105879190611fd6565b60015b610609573d80600081146105ba576040519150601f19603f3d011682016040523d82523d6000602084013e6105bf565b606091505b505a820394506000896080015173ffffffffffffffffffffffffffffffffffffffff1614156105ed57600080555b6105f8818487610d0f565b97509750975097505050505061060f565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161090506000610694876000015188602001518960600151610c9a565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106c68c60400151610cd9565b60008d6080015173ffffffffffffffffffffffffffffffffffffffff16146106f2578c6080015161071f565b8761071457600173fffd8963efd1fc6a506488495d951d5263988d260361071e565b60016401000276a3015b5b8d600001518e606001518f602001516040516020016107409392919061243d565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161076f959493929190612495565b6040805180830381600087803b15801561078857600080fd5b505af19250505080156107b957506040513d601f19601f820116820180604052508101906107b69190611fd6565b60015b610810573d80600081146107e9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ee565b606091505b505a820394506107ff818487610d0f565b975097509750975050505050610816565b50505050505b9193509193565b6000606080600061082d86610bea565b67ffffffffffffffff8111801561084357600080fd5b506040519080825280602002602001820160405280156108725781602001602082028036833780820191505090505b50925061087e86610bea565b67ffffffffffffffff8111801561089457600080fd5b506040519080825280602002602001820160405280156108c35781602001602082028036833780820191505090505b50915060005b600115610a215760008060006108de8a610c05565b9250925092506000806000806109616040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525061063a565b9350935093509350828b898151811061097657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106109bd57fe5b602002602001019063ffffffff16908163ffffffff1681525050839c50808901985087806001019850506109f08e610c56565b15610a05576109fe8e610c71565b9d50610a15565b8c9b505050505050505050610a23565b505050505050506108c9565b505b92959194509250565b6000831380610a3b5750600082135b610a4457600080fd5b6000806000610a5284610c05565b925092509250610a847f0000000000000000000000000000000000000000000000000000000000000000848484610e09565b506000806000808913610aca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610aff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610b12878787610c9a565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610b5d57600080fd5b505afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b95919061210c565b5050505050915091508515610bbb57604051848152826020820152816040820152606081fd5b6000805414610bd3576000548414610bd257600080fd5b5b604051858152826020820152816040820152606081fd5b60006003601401601483510381610bfd57fe5b049050919050565b6000806000610c1e600085610e2990919063ffffffff16565b9250610c34601485610f4290919063ffffffff16565b9050610c4d600360140185610e2990919063ffffffff16565b91509193909250565b60006003601401601460036014010101825110159050919050565b6060610c93600360140160036014018451038461104c9092919063ffffffff16565b9050919050565b6000610cd07f0000000000000000000000000000000000000000000000000000000000000000610ccb868686611236565b6112d2565b90509392505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610d0757600080fd5b819050919050565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d96919061210c565b9091929394955090919293509091925090915090505080925050610db98961142d565b809350819750829850505050610df082828a73ffffffffffffffffffffffffffffffffffffffff166114f79092919063ffffffff16565b9350858585899550955095509550505093509350935093565b6000610e1f85610e1a868686611236565b611bda565b9050949350505050565b600081601483011015610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f416464726573735f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b6014820183511015610f1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f416464726573735f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b600081600383011015610fbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f55696e7432345f6f766572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b6003820183511015611037576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f55696e7432345f6f75744f66426f756e647300000000000000000000000081525060200191505060405180910390fd5b60008260038501015190508091505092915050565b606081601f830110156110c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b82828401101561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f736c6963655f6f766572666c6f7700000000000000000000000000000000000081525060200191505060405180910390fd5b818301845110156111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f736c6963655f6f75744f66426f756e647300000000000000000000000000000081525060200191505060405180910390fd5b60608215600081146111d9576040519150600082526020820160405261122a565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561121757805183526020830192506020810190506111fa565b50868552601f19601f8301166040525050505b50809150509392505050565b61123e611c54565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561127d57828480945081955050505b60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff1681525090509392505050565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061131457600080fd5b82826000015183602001518460400151604051602001808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050604051602081830303815290604052805190602001207fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460001b60405160200180807fff000000000000000000000000000000000000000000000000000000000000008152506001018473ffffffffffffffffffffffffffffffffffffffff1660601b815260140183815260200182815260200193505050506040516020818303038152906040528051906020012060001c905092915050565b600080600060608451146114d657604484511015611480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147790612511565b60405180910390fd5b6004840193508380602001905181019061149a9190612079565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd91906124ef565b60405180910390fd5b838060200190518101906114ea91906121aa565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154b57600080fd5b505afa15801561155f573d6000803e3d6000fd5b505050506040513d602081101561157557600080fd5b810190808051906020019092919050505060020b8b60020b8161159457fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b810190808051906020019092919050505060020b8c60020b8161163057fe5b0560020b8161163b57fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561168857600080fd5b505afa15801561169c573d6000803e3d6000fd5b505050506040513d60208110156116b257600080fd5b810190808051906020019092919050505060020b8c60020b816116d157fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561172457600080fd5b505afa158015611738573d6000803e3d6000fd5b505050506040513d602081101561174e57600080fd5b810190808051906020019092919050505060020b8d60020b8161176d57fe5b0560020b8161177857fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156117d957600080fd5b505afa1580156117ed573d6000803e3d6000fd5b505050506040513d602081101561180357600080fd5b8101908080519060200190929190505050161180156118b4575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d602081101561188f57600080fd5b810190808051906020019092919050505060020b8d60020b816118ae57fe5b0760020b145b80156118c557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561192557600080fd5b505afa158015611939573d6000803e3d6000fd5b505050506040513d602081101561194f57600080fd5b810190808051906020019092919050505016118015611a00575060008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b157600080fd5b505afa1580156119c5573d6000803e3d6000fd5b505050506040513d60208110156119db57600080fd5b810190808051906020019092919050505060020b8e60020b816119fa57fe5b0760020b145b8015611a1157508b60020b8d60020b125b95508160010b8460010b1280611a3e57508160010b8460010b148015611a3d57508060ff168360ff1611155b5b15611a5457839950829750819850809650611a61565b8199508097508398508296505b5050505060008460ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901b90505b8560010b8760010b13611bb2578560010b8760010b1415611adb578360ff0360ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff901c811690505b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b158015611b3257600080fd5b505afa158015611b46573d6000803e3d6000fd5b505050506040513d6020811015611b5c57600080fd5b8101908080519060200190929190505050169050611b7981611c26565b61ffff168901985087806001019850507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611a91565b8115611bbf576001880397505b8215611bcc576001880397505b505050505050509392505050565b6000611be683836112d2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c2057600080fd5b92915050565b600080600090505b60008314611c4b5780806001019150506001830383169250611c2e565b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600062ffffff1681525090565b6000611cb9611cb4846125fa565b6125c9565b905082815260208101848484011115611cd157600080fd5b611cdc84828561279d565b509392505050565b6000611cf7611cf28461262a565b6125c9565b905082815260208101848484011115611d0f57600080fd5b611d1a8482856127ac565b509392505050565b600081359050611d3181612842565b92915050565b600081519050611d4681612859565b92915050565b600082601f830112611d5d57600080fd5b8135611d6d848260208601611ca6565b91505092915050565b600081519050611d8581612870565b92915050565b600081359050611d9a81612887565b92915050565b600081519050611daf81612887565b92915050565b600082601f830112611dc657600080fd5b8151611dd6848260208601611ce4565b91505092915050565b600060a08284031215611df157600080fd5b611dfb60a06125c9565b90506000611e0b84828501611d22565b6000830152506020611e1f84828501611d22565b6020830152506040611e3384828501611f43565b6040830152506060611e4784828501611f2e565b6060830152506080611e5b84828501611eef565b60808301525092915050565b600060a08284031215611e7957600080fd5b611e8360a06125c9565b90506000611e9384828501611d22565b6000830152506020611ea784828501611d22565b6020830152506040611ebb84828501611f43565b6040830152506060611ecf84828501611f2e565b6060830152506080611ee384828501611eef565b60808301525092915050565b600081359050611efe816128b5565b92915050565b600081519050611f13816128b5565b92915050565b600081519050611f288161289e565b92915050565b600081359050611f3d816128cc565b92915050565b600081359050611f52816128e3565b92915050565b600081519050611f67816128e3565b92915050565b600081519050611f7c816128fa565b92915050565b60008060408385031215611f9557600080fd5b600083013567ffffffffffffffff811115611faf57600080fd5b611fbb85828601611d4c565b9250506020611fcc85828601611f43565b9150509250929050565b60008060408385031215611fe957600080fd5b6000611ff785828601611da0565b925050602061200885828601611da0565b9150509250929050565b60008060006060848603121561202757600080fd5b600061203586828701611d8b565b935050602061204686828701611d8b565b925050604084013567ffffffffffffffff81111561206357600080fd5b61206f86828701611d4c565b9150509250925092565b60006020828403121561208b57600080fd5b600082015167ffffffffffffffff8111156120a557600080fd5b6120b184828501611db5565b91505092915050565b600060a082840312156120cc57600080fd5b60006120da84828501611ddf565b91505092915050565b600060a082840312156120f557600080fd5b600061210384828501611e67565b91505092915050565b600080600080600080600060e0888a03121561212757600080fd5b60006121358a828b01611f04565b97505060206121468a828b01611d76565b96505060406121578a828b01611f19565b95505060606121688a828b01611f19565b94505060806121798a828b01611f19565b93505060a061218a8a828b01611f6d565b92505060c061219b8a828b01611d37565b91505092959891949750929550565b6000806000606084860312156121bf57600080fd5b60006121cd86828701611f58565b93505060206121de86828701611f04565b92505060406121ef86828701611d76565b9150509250925092565b600061220583836123db565b60208301905092915050565b600061221d838361241f565b60208301905092915050565b61223281612704565b82525050565b61224961224482612704565b6127df565b82525050565b600061225a8261267a565b61226481856126c0565b935061226f8361265a565b8060005b838110156122a057815161228788826121f9565b9750612292836126a6565b925050600181019050612273565b5085935050505092915050565b60006122b882612685565b6122c281856126d1565b93506122cd8361266a565b8060005b838110156122fe5781516122e58882612211565b97506122f0836126b3565b9250506001810190506122d1565b5085935050505092915050565b61231481612716565b82525050565b600061232582612690565b61232f81856126e2565b935061233f8185602086016127ac565b61234881612817565b840191505092915050565b61235c8161272f565b82525050565b600061236d8261269b565b61237781856126f3565b93506123878185602086016127ac565b61239081612817565b840191505092915050565b60006123a86010836126f3565b91507f556e6578706563746564206572726f72000000000000000000000000000000006000830152602082019050919050565b6123e481612747565b82525050565b6123f381612747565b82525050565b61240a61240582612767565b612803565b82525050565b61241981612776565b82525050565b61242881612780565b82525050565b61243781612780565b82525050565b60006124498286612238565b60148201915061245982856123f9565b6003820191506124698284612238565b601482019150819050949350505050565b600060208201905061248f6000830184612229565b92915050565b600060a0820190506124aa6000830188612229565b6124b7602083018761230b565b6124c46040830186612353565b6124d160608301856123ea565b81810360808301526124e3818461231a565b90509695505050505050565b600060208201905081810360008301526125098184612362565b905092915050565b6000602082019050818103600083015261252a8161239b565b9050919050565b60006080820190506125466000830187612410565b8181036020830152612558818661224f565b9050818103604083015261256c81856122ad565b905061257b6060830184612410565b95945050505050565b60006080820190506125996000830187612410565b6125a660208301866123ea565b6125b3604083018561242e565b6125c06060830184612410565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156125f0576125ef612815565b5b8060405250919050565b600067ffffffffffffffff82111561261557612614612815565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561264557612644612815565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061270f82612747565b9050919050565b60008115159050919050565b60008160020b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156127ca5780820151818401526020810190506127af565b838111156127d9576000848401525b50505050565b60006127ea826127f1565b9050919050565b60006127fc82612835565b9050919050565b600061280e82612828565b9050919050565bfe5b6000601f19601f8301169050919050565b60008160e81b9050919050565b60008160601b9050919050565b61284b81612704565b811461285657600080fd5b50565b61286281612716565b811461286d57600080fd5b50565b61287981612722565b811461288457600080fd5b50565b6128908161272f565b811461289b57600080fd5b50565b6128a781612739565b81146128b257600080fd5b50565b6128be81612747565b81146128c957600080fd5b50565b6128d581612767565b81146128e057600080fd5b50565b6128ec81612776565b81146128f757600080fd5b50565b61290381612790565b811461290e57600080fd5b5056fea2646970667358221220fe4409c77535903b92bab013cbc24cc06a05d608cccda9e76cdd9de4772c353764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xC6A5026A EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x18A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xBD21704A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1B6 DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x207 DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x24C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x267 DUP11 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2EA PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH2 0x3D9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x2FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x346 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP4 SWAP13 POP DUP1 DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH2 0x379 DUP15 PUSH2 0xC56 JUMP JUMPDEST ISZERO PUSH2 0x38E JUMPI PUSH2 0x387 DUP15 PUSH2 0xC71 JUMP JUMPDEST SWAP14 POP PUSH2 0x39E JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x252 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT SWAP1 POP PUSH1 0x0 PUSH2 0x433 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x464 JUMPI DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x494 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0x0 DUP14 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C3 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x4F0 JUMP JUMPDEST DUP8 PUSH2 0x4E5 JUMPI PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 SUB PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x1 PUSH5 0x1000276A3 ADD JUMPDEST JUMPDEST DUP14 PUSH1 0x20 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x511 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x58A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x609 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH1 0x0 DUP10 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x5F8 DUP2 DUP5 DUP8 PUSH2 0xD0F JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x60F JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT SWAP1 POP PUSH1 0x0 PUSH2 0x694 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x6C6 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x0 DUP14 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F2 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x71F JUMP JUMPDEST DUP8 PUSH2 0x714 JUMPI PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 SUB PUSH2 0x71E JUMP JUMPDEST PUSH1 0x1 PUSH5 0x1000276A3 ADD JUMPDEST JUMPDEST DUP14 PUSH1 0x0 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x740 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7B9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x810 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH2 0x7FF DUP2 DUP5 DUP8 PUSH2 0xD0F JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x816 JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x82D DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x872 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x87E DUP7 PUSH2 0xBEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x8DE DUP11 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x961 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH2 0x63A JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x9BD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP4 SWAP13 POP DUP1 DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH2 0x9F0 DUP15 PUSH2 0xC56 JUMP JUMPDEST ISZERO PUSH2 0xA05 JUMPI PUSH2 0x9FE DUP15 PUSH2 0xC71 JUMP JUMPDEST SWAP14 POP PUSH2 0xA15 JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0xA23 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x8C9 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0xA3B JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA52 DUP5 PUSH2 0xC05 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA84 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0xACA JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0xAFF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0xB12 DUP8 DUP8 DUP8 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD EQ PUSH2 0xBD3 JUMPI PUSH1 0x0 SLOAD DUP5 EQ PUSH2 0xBD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x14 DUP4 MLOAD SUB DUP2 PUSH2 0xBFD JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC1E PUSH1 0x0 DUP6 PUSH2 0xE29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0xC34 PUSH1 0x14 DUP6 PUSH2 0xF42 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC4D PUSH1 0x3 PUSH1 0x14 ADD DUP6 PUSH2 0xE29 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x14 PUSH1 0x3 PUSH1 0x14 ADD ADD ADD DUP3 MLOAD LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC93 PUSH1 0x3 PUSH1 0x14 ADD PUSH1 0x3 PUSH1 0x14 ADD DUP5 MLOAD SUB DUP5 PUSH2 0x104C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD0 PUSH32 0x0 PUSH2 0xCCB DUP7 DUP7 DUP7 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 LT PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP SWAP1 POP POP DUP1 SWAP3 POP POP PUSH2 0xDB9 DUP10 PUSH2 0x142D JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP8 POP DUP3 SWAP9 POP POP POP POP PUSH2 0xDF0 DUP3 DUP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP6 DUP6 DUP6 DUP10 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F DUP6 PUSH2 0xE1A DUP7 DUP7 DUP7 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 DUP4 ADD LT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F766572666C6F770000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F75744F66426F756E64730000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 PUSH1 0x20 DUP7 ADD ADD MLOAD DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP4 ADD LT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F766572666C6F77000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F75744F66426F756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 ADD LT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1217 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11FA JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x123E PUSH2 0x1C54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x127D JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x1314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 PUSH1 0x0 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 MLOAD EQ PUSH2 0x14D6 JUMPI PUSH1 0x44 DUP5 MLOAD LT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1477 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP5 ADD SWAP4 POP DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x14EA SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x155F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1594 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1630 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x163B JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x169C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x16D1 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1738 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x174E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x176D JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1778 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND GT DUP1 ISZERO PUSH2 0x18B4 JUMPI POP PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1879 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x18AE JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND EQ JUMPDEST DUP1 ISZERO PUSH2 0x18C5 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST SWAP5 POP PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1939 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND GT DUP1 ISZERO PUSH2 0x1A00 JUMPI POP PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x2 SIGNEXTEND DUP15 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x19FA JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1A11 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST SWAP6 POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND SLT DUP1 PUSH2 0x1A3E JUMPI POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND EQ DUP1 ISZERO PUSH2 0x1A3D JUMPI POP DUP1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x1A54 JUMPI DUP4 SWAP10 POP DUP3 SWAP8 POP DUP2 SWAP9 POP DUP1 SWAP7 POP PUSH2 0x1A61 JUMP JUMPDEST DUP2 SWAP10 POP DUP1 SWAP8 POP DUP4 SWAP9 POP DUP3 SWAP7 POP JUMPDEST POP POP POP POP PUSH1 0x0 DUP5 PUSH1 0xFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SHL SWAP1 POP JUMPDEST DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND SGT PUSH2 0x1BB2 JUMPI DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND EQ ISZERO PUSH2 0x1ADB JUMPI DUP4 PUSH1 0xFF SUB PUSH1 0xFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SHR DUP2 AND SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5339C296 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP AND SWAP1 POP PUSH2 0x1B79 DUP2 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0xFFFF AND DUP10 ADD SWAP9 POP DUP8 DUP1 PUSH1 0x1 ADD SWAP9 POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x1A91 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BBF JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST DUP3 ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP4 DUP4 PUSH2 0x12D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 EQ PUSH2 0x1C4B JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x1 DUP4 SUB DUP4 AND SWAP3 POP PUSH2 0x1C2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB9 PUSH2 0x1CB4 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CDC DUP5 DUP3 DUP6 PUSH2 0x279D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF7 PUSH2 0x1CF2 DUP5 PUSH2 0x262A JUMP JUMPDEST PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1A DUP5 DUP3 DUP6 PUSH2 0x27AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D31 DUP2 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D46 DUP2 PUSH2 0x2859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D85 DUP2 PUSH2 0x2870 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x2887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DAF DUP2 PUSH2 0x2887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1DD6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DFB PUSH1 0xA0 PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E0B DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1E1F DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1E33 DUP5 DUP3 DUP6 ADD PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1E47 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1E5B DUP5 DUP3 DUP6 ADD PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E83 PUSH1 0xA0 PUSH2 0x25C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E93 DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1EA7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1EBB DUP5 DUP3 DUP6 ADD PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1ECF DUP5 DUP3 DUP6 ADD PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1EE3 DUP5 DUP3 DUP6 ADD PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFE DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F13 DUP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F28 DUP2 PUSH2 0x289E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3D DUP2 PUSH2 0x28CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F52 DUP2 PUSH2 0x28E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F67 DUP2 PUSH2 0x28E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F7C DUP2 PUSH2 0x28FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FBB DUP6 DUP3 DUP7 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1F43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2008 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2035 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2046 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206F DUP7 DUP3 DUP8 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20DA DUP5 DUP3 DUP6 ADD PUSH2 0x1DDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP5 DUP3 DUP6 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP11 DUP3 DUP12 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2146 DUP11 DUP3 DUP12 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2157 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2168 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2179 DUP11 DUP3 DUP12 ADD PUSH2 0x1F19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x218A DUP11 DUP3 DUP12 ADD PUSH2 0x1F6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x219B DUP11 DUP3 DUP12 ADD PUSH2 0x1D37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21CD DUP7 DUP3 DUP8 ADD PUSH2 0x1F58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21DE DUP7 DUP3 DUP8 ADD PUSH2 0x1F04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21EF DUP7 DUP3 DUP8 ADD PUSH2 0x1D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2205 DUP4 DUP4 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221D DUP4 DUP4 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x2704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2249 PUSH2 0x2244 DUP3 PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x27DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225A DUP3 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x2264 DUP2 DUP6 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x226F DUP4 PUSH2 0x265A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22A0 JUMPI DUP2 MLOAD PUSH2 0x2287 DUP9 DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2292 DUP4 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2273 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B8 DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x22C2 DUP2 DUP6 PUSH2 0x26D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x22CD DUP4 PUSH2 0x266A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22FE JUMPI DUP2 MLOAD PUSH2 0x22E5 DUP9 DUP3 PUSH2 0x2211 JUMP JUMPDEST SWAP8 POP PUSH2 0x22F0 DUP4 PUSH2 0x26B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22D1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2314 DUP2 PUSH2 0x2716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2325 DUP3 PUSH2 0x2690 JUMP JUMPDEST PUSH2 0x232F DUP2 DUP6 PUSH2 0x26E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x233F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27AC JUMP JUMPDEST PUSH2 0x2348 DUP2 PUSH2 0x2817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235C DUP2 PUSH2 0x272F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236D DUP3 PUSH2 0x269B JUMP JUMPDEST PUSH2 0x2377 DUP2 DUP6 PUSH2 0x26F3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2387 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27AC JUMP JUMPDEST PUSH2 0x2390 DUP2 PUSH2 0x2817 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A8 PUSH1 0x10 DUP4 PUSH2 0x26F3 JUMP JUMPDEST SWAP2 POP PUSH32 0x556E6578706563746564206572726F7200000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E4 DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F3 DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x240A PUSH2 0x2405 DUP3 PUSH2 0x2767 JUMP JUMPDEST PUSH2 0x2803 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2419 DUP2 PUSH2 0x2776 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2428 DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2437 DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2449 DUP3 DUP7 PUSH2 0x2238 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2459 DUP3 DUP6 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x2469 DUP3 DUP5 PUSH2 0x2238 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24AA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x24B7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x230B JUMP JUMPDEST PUSH2 0x24C4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24E3 DUP2 DUP5 PUSH2 0x231A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x239B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2546 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2410 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2558 DUP2 DUP7 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x256C DUP2 DUP6 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP PUSH2 0x257B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2410 JUMP JUMPDEST PUSH2 0x25A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23EA JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x242E JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x2815 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2615 JUMPI PUSH2 0x2614 PUSH2 0x2815 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2644 PUSH2 0x2815 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270F DUP3 PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27AF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP3 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FC DUP3 PUSH2 0x2835 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x2704 JUMP JUMPDEST DUP2 EQ PUSH2 0x2856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2862 DUP2 PUSH2 0x2716 JUMP JUMPDEST DUP2 EQ PUSH2 0x286D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2879 DUP2 PUSH2 0x2722 JUMP JUMPDEST DUP2 EQ PUSH2 0x2884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2890 DUP2 PUSH2 0x272F JUMP JUMPDEST DUP2 EQ PUSH2 0x289B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28A7 DUP2 PUSH2 0x2739 JUMP JUMPDEST DUP2 EQ PUSH2 0x28B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28BE DUP2 PUSH2 0x2747 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28D5 DUP2 PUSH2 0x2767 JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28EC DUP2 PUSH2 0x2776 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2903 DUP2 PUSH2 0x2790 JUMP JUMPDEST DUP2 EQ PUSH2 0x290E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID DIFFICULTY MULMOD 0xC7 PUSH22 0x35903B92BAB013CBC24CC06A05D608CCCDA9E76CDD9D 0xE4 PUSH24 0x2C353764736F6C6343000706003300000000000000000000 ",
							"sourceMap": "983:9333:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8694:1620;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;420:39:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7313:1375:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;328:41:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:1104:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5689:1618;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1703:1605;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8694:1620;8820:16;8850:38;8902:43;8959:19;9041:15;:4;:13;:15::i;:::-;9027:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9003:54;;9110:15;:4;:13;:15::i;:::-;9097:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9067:59;;9137:9;9160:1148;9167:4;9160:1148;;;9188:16;9206:15;9223:10;9237:22;:4;:20;:22::i;:::-;9187:72;;;;;;9354:17;9373:26;9401:31;9434:20;9474:323;9518:261;;;;;;;;9582:7;9518:261;;;;;;9625:8;9518:261;;;;;;9667:9;9518:261;;;;9707:3;9518:261;;;;;;9755:1;9518:261;;;;;9474:22;:323::i;:::-;9353:444;;;;;;;;9839:18;9812:21;9834:1;9812:24;;;;;;;;;;;;;:45;;;;;;;;;;;9904:24;9871:27;9899:1;9871:30;;;;;;;;;;;;;:57;;;;;;;;;;;9954:9;9942:21;;9992:12;9977:27;;;;10018:3;;;;;;;10095:23;:4;:21;:23::i;:::-;10091:207;;;10145:16;:4;:14;:16::i;:::-;10138:23;;10091:207;;;10208:9;10200:83;;;;;;;;;;;;10091:207;9160:1148;;;;;;;;;;8694:1620;;;;;;;;;:::o;420:39:0:-;;;:::o;7313:1375:3:-;7451:16;7481:25;7520:30;7564:19;7608:15;7643:6;:15;;;7626:32;;:6;:14;;;:32;;;7608:50;;7668:19;7690:52;7698:6;:14;;;7714:6;:15;;;7731:6;:10;;;7690:7;:52::i;:::-;7668:74;;7894:1;7866:6;:24;;;:29;;;7862:66;;;7915:6;:13;;;7897:15;:31;;;;7862:66;7938:17;7958:9;7938:29;;7993:4;:9;;;8028:4;8101:10;8130:24;:6;:13;;;:22;:24::i;:::-;8129:25;;8200:1;8172:6;:24;;;:29;;;:171;;8319:6;:24;;;8172:171;;;8225:10;:70;;8294:1;1004:49:20;8268:27:3;8225:70;;;8264:1;824:10:20;8238:27:3;8225:70;8172:171;8378:6;:15;;;8395:6;:10;;;8407:6;:14;;;8361:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7993:443;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7977:705;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8516:9;8504;:21;8490:35;;8571:1;8543:6;:24;;;:29;;;8539:57;;;8581:15;8574:22;;8539:57;8632:39;8645:6;8653:4;8659:11;8632:12;:39::i;:::-;8625:46;;;;;;;;;;;;;;7977:705;;;7313:1375;;;;;;;;;:::o;328:41:0:-;;;:::o;4579:1104:3:-;4715:17;4746:25;4785:30;4829:19;4873:15;4908:6;:15;;;4891:32;;:6;:14;;;:32;;;4873:50;;4933:19;4955:52;4963:6;:14;;;4979:6;:15;;;4996:6;:10;;;4955:7;:52::i;:::-;4933:74;;5018:17;5038:9;5018:29;;5073:4;:9;;;5108:4;5181:10;5209:26;:6;:15;;;:24;:26::i;:::-;5281:1;5253:6;:24;;;:29;;;:171;;5400:6;:24;;;5253:171;;;5306:10;:70;;5375:1;1004:49:20;5349:27:3;5306:70;;;5345:1;824:10:20;5319:27:3;5306:70;5253:171;5459:6;:14;;;5475:6;:10;;;5487:6;:15;;;5442:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5073:444;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5057:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5597:9;5585;:21;5571:35;;5627:39;5640:6;5648:4;5654:11;5627:12;:39::i;:::-;5620:46;;;;;;;;;;;;;;5057:620;;;4579:1104;;;;;;;;;:::o;5689:1618::-;5813:17;5844:38;5896:43;5953:19;6035:15;:4;:13;:15::i;:::-;6021:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5997:54;;6104:15;:4;:13;:15::i;:::-;6091:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6061:59;;6131:9;6154:1147;6161:4;6154:1147;;;6182:15;6199:16;6217:10;6231:22;:4;:20;:22::i;:::-;6181:72;;;;;;6348:18;6368:26;6396:31;6429:20;6469:322;6512:261;;;;;;;;6575:7;6512:261;;;;;;6618:8;6512:261;;;;;;6696:8;6512:261;;;;6657:3;6512:261;;;;;;6749:1;6512:261;;;;;6469:21;:322::i;:::-;6347:444;;;;;;;;6833:18;6806:21;6828:1;6806:24;;;;;;;;;;;;;:45;;;;;;;;;;;6898:24;6865:27;6893:1;6865:30;;;;;;;;;;;;;:57;;;;;;;;;;;6947:10;6936:21;;6986:12;6971:27;;;;7012:3;;;;;;;7089:23;:4;:21;:23::i;:::-;7085:206;;;7139:16;:4;:14;:16::i;:::-;7132:23;;7085:206;;;7202:8;7194:82;;;;;;;;;;;;7085:206;6154:1147;;;;;;;;;;5689:1618;;;;;;;;;:::o;1703:1605::-;1881:1;1866:12;:16;:36;;;;1901:1;1886:12;:16;1866:36;1858:45;;;;;;1977:15;1994:16;2012:10;2026:22;:4;:20;:22::i;:::-;1976:72;;;;;;2058:66;2092:7;2101;2110:8;2120:3;2058:33;:66::i;:::-;;2136:17;2155:19;2176:22;2229:1;2214:12;:16;:188;;2347:7;2336:18;;:8;:18;;;2364:12;2388;2387:13;;2214:188;;;2260:8;2250:18;;:7;:18;;;2278:12;2302;2301:13;;2214:188;2135:267;;;;;;2413:19;2435:31;2443:7;2452:8;2462:3;2435:7;:31::i;:::-;2413:53;;2477:25;2504:15;2533:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2476:69;;;;;;;;;2560:12;2556:746;;;2632:4;2626:11;2666:14;2661:3;2654:27;2721:17;2714:4;2709:3;2705:14;2698:41;2779:9;2772:4;2767:3;2763:14;2756:33;2818:2;2813:3;2806:15;2597:238;2989:1;2970:15;;:20;2966:68;;3018:15;;3000:14;:33;2992:42;;;;;;2966:68;3092:4;3086:11;3126;3121:3;3114:24;3178:17;3171:4;3166:3;3162:14;3155:41;3236:9;3229:4;3224:3;3220:14;3213:33;3275:2;3270:3;3263:15;1282:235:6;1342:7;397:1;304:2;507:20;304:2;1471:4;:11;:23;1470:39;;;;;;1462:48;;1282:235;;;:::o;1779:314::-;1883:14;1911;1939:10;1983:17;1998:1;1983:4;:14;;:17;;;;:::i;:::-;1974:26;;2016:24;304:2;2016:4;:13;;:24;;;;:::i;:::-;2010:30;;2059:27;397:1;304:2;507:20;2059:4;:14;;:27;;;;:::i;:::-;2050:36;;1779:314;;;;;:::o;992:138::-;1060:4;397:1;304:2;507:20;304:2;397:1;304:2;507:20;618:23;777:24;1083:4;:11;:40;;1076:47;;992:138;;;:::o;2635:149::-;2696:12;2727:50;397:1;304:2;507:20;397:1;304:2;507:20;2751:4;:11;:25;2727:4;:10;;:50;;;;;:::i;:::-;2720:57;;2635:149;;;:::o;1405:249:3:-;1518:14;1566:80;1593:7;1602:43;1625:6;1633;1641:3;1602:22;:43::i;:::-;1566:26;:80::i;:::-;1544:103;;1405:249;;;;;:::o;924:121:18:-;976:8;1008:6;1004:1;:10;996:19;;;;;;1036:1;1025:13;;924:121;;;:::o;3907:666:3:-;4081:14;4109:25;4148:30;4192:7;4224:16;4250:15;4302:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4275:39;;;;;;;;;;;;;;;;;;;;;;;;;;4365:25;4383:6;4365:17;:25::i;:::-;4324:66;;;;;;;;;;;;4427:56;4461:10;4473:9;4427:4;:33;;;;:56;;;;;:::i;:::-;4401:82;;4502:6;4510:17;4529:23;4554:11;4494:72;;;;;;;;;;3907:666;;;;;;;:::o;683:259:5:-;829:19;867:68;882:7;891:43;914:6;922;930:3;891:22;:43::i;:::-;867:14;:68::i;:::-;860:75;;683:259;;;;;;:::o;3412:416:4:-;3491:7;3533:6;3527:2;3518:6;:11;:21;;3510:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3606:2;3597:6;:11;3580:6;:13;:28;;3572:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3644:19;3755:27;3745:6;3738:4;3730:6;3726:17;3722:30;3716:37;3712:71;3697:86;;3810:11;3803:18;;;3412:416;;;;:::o;3834:365::-;3912:6;3952;3947:1;3938:6;:10;:20;;3930:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4024:1;4015:6;:10;3998:6;:13;:27;;3990:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:15;4149:6;4143:3;4135:6;4131:16;4127:29;4121:36;4109:48;;4184:8;4177:15;;;3834:365;;;;:::o;399:3007::-;521:12;569:7;563:2;553:7;:12;:23;;545:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:6;622:7;613:6;:16;:26;;605:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:7;693:6;:16;676:6;:13;:33;;668:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:22;812:7;805:15;842:1;837:2099;;;;3089:4;3083:11;3070:24;;3287:1;3276:9;3269:20;3339:4;3328:9;3324:20;3318:4;3311:34;798:2565;;837:2099;1031:4;1025:11;1012:24;;1726:2;1717:7;1713:16;2128:9;2121:17;2115:4;2111:28;2099:9;2088;2084:25;2080:60;2180:7;2176:2;2172:16;2448:6;2434:9;2427:17;2421:4;2417:28;2405:9;2397:6;2393:22;2389:57;2385:70;2210:461;2485:3;2481:2;2478:11;2210:461;;;2645:2;2639:9;2635:2;2628:21;2530:4;2526:2;2522:13;2516:19;;2574:4;2570:2;2566:13;2560:19;;2210:461;;;2214:263;2711:7;2700:9;2693:26;2913:2;2909:7;2904:2;2900;2896:11;2892:25;2886:4;2879:39;844:2092;;;798:2565;;3390:9;3383:16;;;399:3007;;;;;:::o;784:274:7:-;901:14;;:::i;:::-;940:6;931:15;;:6;:15;;;927:56;;;968:6;976;948:35;;;;;;;;927:56;1000:51;;;;;;;;1017:6;1000:51;;;;;;1033:6;1000:51;;;;;;1046:3;1000:51;;;;;993:58;;784:274;;;;;:::o;1305:512::-;1389:12;1434:3;:10;;;1421:23;;:3;:10;;;:23;;;1413:32;;;;;;1614:7;1668:3;:10;;;1680:3;:10;;;1692:3;:7;;;1657:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:54;;;;;;241:66;1727:19;;1539:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:278;;;;;;1483:317;;1455:355;;1305:512;;;;:::o;3388:513:3:-;3495:14;3523:25;3562:15;3623:2;3606:6;:13;:19;3602:231;;3661:2;3645:6;:13;:18;3641:50;;;3665:26;;;;;;;;;;:::i;:::-;;;;;;;;3641:50;3754:4;3746:6;3742:17;3732:27;;3804:6;3793:28;;;;;;;;;;;;:::i;:::-;3786:36;;;;;;;;;;;:::i;:::-;;;;;;;;3602:231;3860:6;3849:45;;;;;;;;;;;;:::i;:::-;3842:52;;;;;;3388:513;;;;;:::o;637:3305:8:-;784:30;826:18;854:19;883:17;910:18;938:26;974:25;1127:13;1186:1;1163:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:31;;:10;:31;;;;;;;;1149:38;;;;1127:61;;1202:12;1259:3;1237:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:31;;:10;:31;;;;;;;;1223:39;;;;;;;;1202:61;;1278:18;1341:1;1318:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:30;;:9;:30;;;;;;;;1305:37;;;;1278:65;;1357:17;1418:3;1396:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:30;;:9;:30;;;;;;;;1383:38;;;;;;;;1357:65;;1897:1;1881:11;1876:16;;:1;:16;;1843:4;:15;;;1859:12;1843:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:50;1842:56;1841:117;;;;;1956:1;1933:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:30;;:9;:30;;;;;;;;1920:37;;;1841:117;:161;;;;;1992:9;1979:22;;:10;:22;;;1841:161;1802:200;;2312:1;2301:6;2296:11;;:1;:11;;2268:4;:15;;;2284:7;2268:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;2267:46;2266:108;;;;;2372:1;2349:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:31;;:10;:31;;;;;;;;2335:38;;;2266:108;:152;;;;;2408:9;2395:22;;:10;:22;;;2266:152;2226:192;;2447:12;2437:22;;:7;:22;;;:76;;;;2475:12;2464:23;;:7;:23;;;:48;;;;;2501:11;2491:21;;:6;:21;;;;2464:48;2437:76;2433:454;;;2548:7;2533:22;;2587:6;2573:20;;2627:12;2611:28;;2672:11;2657:26;;2433:454;;;2737:12;2722:27;;2781:11;2767:25;;2826:7;2810:23;;2866:6;2851:21;;2433:454;637:3305;;;;3086:12;3122:11;3101:32;;:17;:32;;3086:47;;3143:573;3166:13;3150:29;;:12;:29;;;3143:573;;3329:13;3313:29;;:12;:29;;;3309:125;;;3405:12;3399:3;:18;3377:41;;:17;:41;;3369:4;:50;3362:57;;3309:125;3448:14;3497:4;3465;:15;;;3481:12;3465:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;3448:53;;3542:20;3555:6;3542:12;:20::i;:::-;3515:47;;;;;;3576:14;;;;;;;3688:17;3681:24;;3143:573;;;;3730:20;3726:79;;;3793:1;3766:28;;;;3726:79;3819:21;3815:80;;;3883:1;3856:28;;;;3815:80;3905:30;;;;;;;637:3305;;;;;:::o;1189:279:5:-;1313:19;1370:44;1397:7;1406;1370:26;:44::i;:::-;1348:67;;1455:4;1433:27;;:10;:27;;;1425:36;;;;;;1189:279;;;;:::o;3948:197:8:-;4003:6;4021:11;4035:1;4021:15;;4046:72;4058:1;4053;:6;4046:72;;4075:6;;;;;;;4105:1;4101;:5;4095:12;;;;4046:72;;;4134:4;4127:11;;;3948:197;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:342:21:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:353::-;;469:65;484:49;526:6;484:49;:::i;:::-;469:65;:::i;:::-;460:74;;557:6;550:5;543:21;595:4;588:5;584:16;633:3;624:6;619:3;615:16;612:25;609:2;;;650:1;647;640:12;609:2;663:39;695:6;690:3;685;663:39;:::i;:::-;450:258;;;;;;:::o;714:139::-;;798:6;785:20;776:29;;814:33;841:5;814:33;:::i;:::-;766:87;;;;:::o;859:137::-;;944:6;938:13;929:22;;960:30;984:5;960:30;:::i;:::-;919:77;;;;:::o;1015:271::-;;1119:3;1112:4;1104:6;1100:17;1096:27;1086:2;;1137:1;1134;1127:12;1086:2;1177:6;1164:20;1202:78;1276:3;1268:6;1261:4;1253:6;1249:17;1202:78;:::i;:::-;1193:87;;1076:210;;;;;:::o;1292:139::-;;1378:6;1372:13;1363:22;;1394:31;1419:5;1394:31;:::i;:::-;1353:78;;;;:::o;1437:137::-;;1520:6;1507:20;1498:29;;1536:32;1562:5;1536:32;:::i;:::-;1488:86;;;;:::o;1580:141::-;;1667:6;1661:13;1652:22;;1683:32;1709:5;1683:32;:::i;:::-;1642:79;;;;:::o;1741:288::-;;1857:3;1850:4;1842:6;1838:17;1834:27;1824:2;;1875:1;1872;1865:12;1824:2;1908:6;1902:13;1933:90;2019:3;2011:6;2004:4;1996:6;1992:17;1933:90;:::i;:::-;1924:99;;1814:215;;;;;:::o;2087:1030::-;;2223:4;2211:9;2206:3;2202:19;2198:30;2195:2;;;2241:1;2238;2231:12;2195:2;2263:20;2278:4;2263:20;:::i;:::-;2254:29;;2345:1;2385:49;2430:3;2421:6;2410:9;2406:22;2385:49;:::i;:::-;2378:4;2371:5;2367:16;2360:75;2293:153;2509:2;2550:49;2595:3;2586:6;2575:9;2571:22;2550:49;:::i;:::-;2543:4;2536:5;2532:16;2525:75;2456:155;2674:2;2715:49;2760:3;2751:6;2740:9;2736:22;2715:49;:::i;:::-;2708:4;2701:5;2697:16;2690:75;2621:155;2834:2;2875:48;2919:3;2910:6;2899:9;2895:22;2875:48;:::i;:::-;2868:4;2861:5;2857:16;2850:74;2786:149;3007:3;3049:49;3094:3;3085:6;3074:9;3070:22;3049:49;:::i;:::-;3042:4;3035:5;3031:16;3024:75;2945:165;2185:932;;;;:::o;3176:1030::-;;3314:4;3302:9;3297:3;3293:19;3289:30;3286:2;;;3332:1;3329;3322:12;3286:2;3354:20;3369:4;3354:20;:::i;:::-;3345:29;;3436:1;3476:49;3521:3;3512:6;3501:9;3497:22;3476:49;:::i;:::-;3469:4;3462:5;3458:16;3451:75;3384:153;3600:2;3641:49;3686:3;3677:6;3666:9;3662:22;3641:49;:::i;:::-;3634:4;3627:5;3623:16;3616:75;3547:155;3763:2;3804:49;3849:3;3840:6;3829:9;3825:22;3804:49;:::i;:::-;3797:4;3790:5;3786:16;3779:75;3712:153;3923:2;3964:48;4008:3;3999:6;3988:9;3984:22;3964:48;:::i;:::-;3957:4;3950:5;3946:16;3939:74;3875:149;4096:3;4138:49;4183:3;4174:6;4163:9;4159:22;4138:49;:::i;:::-;4131:4;4124:5;4120:16;4113:75;4034:165;3276:930;;;;:::o;4212:139::-;;4296:6;4283:20;4274:29;;4312:33;4339:5;4312:33;:::i;:::-;4264:87;;;;:::o;4357:143::-;;4445:6;4439:13;4430:22;;4461:33;4488:5;4461:33;:::i;:::-;4420:80;;;;:::o;4506:141::-;;4593:6;4587:13;4578:22;;4609:32;4635:5;4609:32;:::i;:::-;4568:79;;;;:::o;4653:137::-;;4736:6;4723:20;4714:29;;4752:32;4778:5;4752:32;:::i;:::-;4704:86;;;;:::o;4796:139::-;;4880:6;4867:20;4858:29;;4896:33;4923:5;4896:33;:::i;:::-;4848:87;;;;:::o;4941:143::-;;5029:6;5023:13;5014:22;;5045:33;5072:5;5045:33;:::i;:::-;5004:80;;;;:::o;5090:139::-;;5176:6;5170:13;5161:22;;5192:31;5217:5;5192:31;:::i;:::-;5151:78;;;;:::o;5235:518::-;;;5369:2;5357:9;5348:7;5344:23;5340:32;5337:2;;;5385:1;5382;5375:12;5337:2;5456:1;5445:9;5441:17;5428:31;5486:18;5478:6;5475:30;5472:2;;;5518:1;5515;5508:12;5472:2;5546:62;5600:7;5591:6;5580:9;5576:22;5546:62;:::i;:::-;5536:72;;5399:219;5657:2;5683:53;5728:7;5719:6;5708:9;5704:22;5683:53;:::i;:::-;5673:63;;5628:118;5327:426;;;;;:::o;5759:436::-;;;5893:2;5881:9;5872:7;5868:23;5864:32;5861:2;;;5909:1;5906;5899:12;5861:2;5952:1;5977:63;6032:7;6023:6;6012:9;6008:22;5977:63;:::i;:::-;5967:73;;5923:127;6089:2;6115:63;6170:7;6161:6;6150:9;6146:22;6115:63;:::i;:::-;6105:73;;6060:128;5851:344;;;;;:::o;6201:659::-;;;;6350:2;6338:9;6329:7;6325:23;6321:32;6318:2;;;6366:1;6363;6356:12;6318:2;6409:1;6434:52;6478:7;6469:6;6458:9;6454:22;6434:52;:::i;:::-;6424:62;;6380:116;6535:2;6561:52;6605:7;6596:6;6585:9;6581:22;6561:52;:::i;:::-;6551:62;;6506:117;6690:2;6679:9;6675:18;6662:32;6721:18;6713:6;6710:30;6707:2;;;6753:1;6750;6743:12;6707:2;6781:62;6835:7;6826:6;6815:9;6811:22;6781:62;:::i;:::-;6771:72;;6633:220;6308:552;;;;;:::o;6866:390::-;;6995:2;6983:9;6974:7;6970:23;6966:32;6963:2;;;7011:1;7008;7001:12;6963:2;7075:1;7064:9;7060:17;7054:24;7105:18;7097:6;7094:30;7091:2;;;7137:1;7134;7127:12;7091:2;7165:74;7231:7;7222:6;7211:9;7207:22;7165:74;:::i;:::-;7155:84;;7025:224;6953:303;;;;:::o;7262:349::-;;7413:3;7401:9;7392:7;7388:23;7384:33;7381:2;;;7430:1;7427;7420:12;7381:2;7473:1;7498:96;7586:7;7577:6;7566:9;7562:22;7498:96;:::i;:::-;7488:106;;7444:160;7371:240;;;;:::o;7617:353::-;;7770:3;7758:9;7749:7;7745:23;7741:33;7738:2;;;7787:1;7784;7777:12;7738:2;7830:1;7855:98;7945:7;7936:6;7925:9;7921:22;7855:98;:::i;:::-;7845:108;;7801:162;7728:242;;;;:::o;7976:1204::-;;;;;;;;8187:3;8175:9;8166:7;8162:23;8158:33;8155:2;;;8204:1;8201;8194:12;8155:2;8247:1;8272:64;8328:7;8319:6;8308:9;8304:22;8272:64;:::i;:::-;8262:74;;8218:128;8385:2;8411:62;8465:7;8456:6;8445:9;8441:22;8411:62;:::i;:::-;8401:72;;8356:127;8522:2;8548:63;8603:7;8594:6;8583:9;8579:22;8548:63;:::i;:::-;8538:73;;8493:128;8660:2;8686:63;8741:7;8732:6;8721:9;8717:22;8686:63;:::i;:::-;8676:73;;8631:128;8798:3;8825:63;8880:7;8871:6;8860:9;8856:22;8825:63;:::i;:::-;8815:73;;8769:129;8937:3;8964:62;9018:7;9009:6;8998:9;8994:22;8964:62;:::i;:::-;8954:72;;8908:128;9075:3;9102:61;9155:7;9146:6;9135:9;9131:22;9102:61;:::i;:::-;9092:71;;9046:127;8145:1035;;;;;;;;;;:::o;9186:592::-;;;;9337:2;9325:9;9316:7;9312:23;9308:32;9305:2;;;9353:1;9350;9343:12;9305:2;9396:1;9421:64;9477:7;9468:6;9457:9;9453:22;9421:64;:::i;:::-;9411:74;;9367:128;9534:2;9560:64;9616:7;9607:6;9596:9;9592:22;9560:64;:::i;:::-;9550:74;;9505:129;9673:2;9699:62;9753:7;9744:6;9733:9;9729:22;9699:62;:::i;:::-;9689:72;;9644:127;9295:483;;;;;:::o;9784:179::-;;9874:46;9916:3;9908:6;9874:46;:::i;:::-;9952:4;9947:3;9943:14;9929:28;;9864:99;;;;:::o;9969:175::-;;10057:44;10097:3;10089:6;10057:44;:::i;:::-;10133:4;10128:3;10124:14;10110:28;;10047:97;;;;:::o;10150:118::-;10237:24;10255:5;10237:24;:::i;:::-;10232:3;10225:37;10215:53;;:::o;10274:157::-;10379:45;10399:24;10417:5;10399:24;:::i;:::-;10379:45;:::i;:::-;10374:3;10367:58;10357:74;;:::o;10467:732::-;;10615:54;10663:5;10615:54;:::i;:::-;10685:86;10764:6;10759:3;10685:86;:::i;:::-;10678:93;;10795:56;10845:5;10795:56;:::i;:::-;10874:7;10905:1;10890:284;10915:6;10912:1;10909:13;10890:284;;;10991:6;10985:13;11018:63;11077:3;11062:13;11018:63;:::i;:::-;11011:70;;11104:60;11157:6;11104:60;:::i;:::-;11094:70;;10950:224;10937:1;10934;10930:9;10925:14;;10890:284;;;10894:14;11190:3;11183:10;;10591:608;;;;;;;:::o;11233:724::-;;11379:53;11426:5;11379:53;:::i;:::-;11448:85;11526:6;11521:3;11448:85;:::i;:::-;11441:92;;11557:55;11606:5;11557:55;:::i;:::-;11635:7;11666:1;11651:281;11676:6;11673:1;11670:13;11651:281;;;11752:6;11746:13;11779:61;11836:3;11821:13;11779:61;:::i;:::-;11772:68;;11863:59;11915:6;11863:59;:::i;:::-;11853:69;;11711:221;11698:1;11695;11691:9;11686:14;;11651:281;;;11655:14;11948:3;11941:10;;11355:602;;;;;;;:::o;11963:109::-;12044:21;12059:5;12044:21;:::i;:::-;12039:3;12032:34;12022:50;;:::o;12078:360::-;;12192:38;12224:5;12192:38;:::i;:::-;12246:70;12309:6;12304:3;12246:70;:::i;:::-;12239:77;;12325:52;12370:6;12365:3;12358:4;12351:5;12347:16;12325:52;:::i;:::-;12402:29;12424:6;12402:29;:::i;:::-;12397:3;12393:39;12386:46;;12168:270;;;;;:::o;12444:115::-;12529:23;12546:5;12529:23;:::i;:::-;12524:3;12517:36;12507:52;;:::o;12565:364::-;;12681:39;12714:5;12681:39;:::i;:::-;12736:71;12800:6;12795:3;12736:71;:::i;:::-;12729:78;;12816:52;12861:6;12856:3;12849:4;12842:5;12838:16;12816:52;:::i;:::-;12893:29;12915:6;12893:29;:::i;:::-;12888:3;12884:39;12877:46;;12657:272;;;;;:::o;12935:314::-;;13098:67;13162:2;13157:3;13098:67;:::i;:::-;13091:74;;13195:18;13191:1;13186:3;13182:11;13175:39;13240:2;13235:3;13231:12;13224:19;;13081:168;;;:::o;13255:108::-;13332:24;13350:5;13332:24;:::i;:::-;13327:3;13320:37;13310:53;;:::o;13369:118::-;13456:24;13474:5;13456:24;:::i;:::-;13451:3;13444:37;13434:53;;:::o;13493:153::-;13596:43;13615:23;13632:5;13615:23;:::i;:::-;13596:43;:::i;:::-;13591:3;13584:56;13574:72;;:::o;13652:118::-;13739:24;13757:5;13739:24;:::i;:::-;13734:3;13727:37;13717:53;;:::o;13776:105::-;13851:23;13868:5;13851:23;:::i;:::-;13846:3;13839:36;13829:52;;:::o;13887:115::-;13972:23;13989:5;13972:23;:::i;:::-;13967:3;13960:36;13950:52;;:::o;14008:533::-;;14189:75;14260:3;14251:6;14189:75;:::i;:::-;14289:2;14284:3;14280:12;14273:19;;14302:73;14371:3;14362:6;14302:73;:::i;:::-;14400:1;14395:3;14391:11;14384:18;;14412:75;14483:3;14474:6;14412:75;:::i;:::-;14512:2;14507:3;14503:12;14496:19;;14532:3;14525:10;;14178:363;;;;;;:::o;14547:222::-;;14678:2;14667:9;14663:18;14655:26;;14691:71;14759:1;14748:9;14744:17;14735:6;14691:71;:::i;:::-;14645:124;;;;:::o;14775:735::-;;15028:3;15017:9;15013:19;15005:27;;15042:71;15110:1;15099:9;15095:17;15086:6;15042:71;:::i;:::-;15123:66;15185:2;15174:9;15170:18;15161:6;15123:66;:::i;:::-;15199:70;15265:2;15254:9;15250:18;15241:6;15199:70;:::i;:::-;15279:72;15347:2;15336:9;15332:18;15323:6;15279:72;:::i;:::-;15399:9;15393:4;15389:20;15383:3;15372:9;15368:19;15361:49;15427:76;15498:4;15489:6;15427:76;:::i;:::-;15419:84;;14995:515;;;;;;;;:::o;15516:313::-;;15667:2;15656:9;15652:18;15644:26;;15716:9;15710:4;15706:20;15702:1;15691:9;15687:17;15680:47;15744:78;15817:4;15808:6;15744:78;:::i;:::-;15736:86;;15634:195;;;;:::o;15835:419::-;;16039:2;16028:9;16024:18;16016:26;;16088:9;16082:4;16078:20;16074:1;16063:9;16059:17;16052:47;16116:131;16242:4;16116:131;:::i;:::-;16108:139;;16006:248;;;:::o;16260:851::-;;16573:3;16562:9;16558:19;16550:27;;16587:71;16655:1;16644:9;16640:17;16631:6;16587:71;:::i;:::-;16705:9;16699:4;16695:20;16690:2;16679:9;16675:18;16668:48;16733:108;16836:4;16827:6;16733:108;:::i;:::-;16725:116;;16888:9;16882:4;16878:20;16873:2;16862:9;16858:18;16851:48;16916:106;17017:4;17008:6;16916:106;:::i;:::-;16908:114;;17032:72;17100:2;17089:9;17085:18;17076:6;17032:72;:::i;:::-;16540:571;;;;;;;:::o;17117:549::-;;17330:3;17319:9;17315:19;17307:27;;17344:71;17412:1;17401:9;17397:17;17388:6;17344:71;:::i;:::-;17425:72;17493:2;17482:9;17478:18;17469:6;17425:72;:::i;:::-;17507:70;17573:2;17562:9;17558:18;17549:6;17507:70;:::i;:::-;17587:72;17655:2;17644:9;17640:18;17631:6;17587:72;:::i;:::-;17297:369;;;;;;;:::o;17672:278::-;;17738:2;17732:9;17722:19;;17780:4;17772:6;17768:17;17887:6;17875:10;17872:22;17851:18;17839:10;17836:34;17833:62;17830:2;;;17898:13;;:::i;:::-;17830:2;17933:10;17929:2;17922:22;17712:238;;;;:::o;17956:326::-;;18107:18;18099:6;18096:30;18093:2;;;18129:13;;:::i;:::-;18093:2;18209:4;18205:9;18198:4;18190:6;18186:17;18182:33;18174:41;;18270:4;18264;18260:15;18252:23;;18022:260;;;:::o;18288:327::-;;18440:18;18432:6;18429:30;18426:2;;;18462:13;;:::i;:::-;18426:2;18542:4;18538:9;18531:4;18523:6;18519:17;18515:33;18507:41;;18603:4;18597;18593:15;18585:23;;18355:260;;;:::o;18621:132::-;;18711:3;18703:11;;18741:4;18736:3;18732:14;18724:22;;18693:60;;;:::o;18759:131::-;;18848:3;18840:11;;18878:4;18873:3;18869:14;18861:22;;18830:60;;;:::o;18896:114::-;;18997:5;18991:12;18981:22;;18970:40;;;:::o;19016:113::-;;19116:5;19110:12;19100:22;;19089:40;;;:::o;19135:98::-;;19220:5;19214:12;19204:22;;19193:40;;;:::o;19239:99::-;;19325:5;19319:12;19309:22;;19298:40;;;:::o;19344:113::-;;19446:4;19441:3;19437:14;19429:22;;19419:38;;;:::o;19463:112::-;;19564:4;19559:3;19555:14;19547:22;;19537:38;;;:::o;19581:184::-;;19714:6;19709:3;19702:19;19754:4;19749:3;19745:14;19730:29;;19692:73;;;;:::o;19771:183::-;;19903:6;19898:3;19891:19;19943:4;19938:3;19934:14;19919:29;;19881:73;;;;:::o;19960:168::-;;20077:6;20072:3;20065:19;20117:4;20112:3;20108:14;20093:29;;20055:73;;;;:::o;20134:169::-;;20252:6;20247:3;20240:19;20292:4;20287:3;20283:14;20268:29;;20230:73;;;;:::o;20309:96::-;;20375:24;20393:5;20375:24;:::i;:::-;20364:35;;20354:51;;;:::o;20411:90::-;;20488:5;20481:13;20474:21;20463:32;;20453:48;;;:::o;20507:90::-;;20585:5;20582:1;20571:20;20560:31;;20550:47;;;:::o;20603:76::-;;20668:5;20657:16;;20647:32;;;:::o;20685:89::-;;20761:6;20754:5;20750:18;20739:29;;20729:45;;;:::o;20780:126::-;;20857:42;20850:5;20846:54;20835:65;;20825:81;;;:::o;20912:91::-;;20988:8;20981:5;20977:20;20966:31;;20956:47;;;:::o;21009:77::-;;21075:5;21064:16;;21054:32;;;:::o;21092:93::-;;21168:10;21161:5;21157:22;21146:33;;21136:49;;;:::o;21191:86::-;;21266:4;21259:5;21255:16;21244:27;;21234:43;;;:::o;21283:154::-;21367:6;21362:3;21357;21344:30;21429:1;21420:6;21415:3;21411:16;21404:27;21334:103;;;:::o;21443:307::-;21511:1;21521:113;21535:6;21532:1;21529:13;21521:113;;;21620:1;21615:3;21611:11;21605:18;21601:1;21596:3;21592:11;21585:39;21557:2;21554:1;21550:10;21545:15;;21521:113;;;21652:6;21649:1;21646:13;21643:2;;;21732:1;21723:6;21718:3;21714:16;21707:27;21643:2;21492:258;;;;:::o;21756:100::-;;21824:26;21844:5;21824:26;:::i;:::-;21813:37;;21803:53;;;:::o;21862:94::-;;21930:20;21944:5;21930:20;:::i;:::-;21919:31;;21909:47;;;:::o;21962:94::-;;22029:21;22044:5;22029:21;:::i;:::-;22018:32;;22008:48;;;:::o;22062:::-;22095:9;22116:102;;22208:2;22204:7;22199:2;22192:5;22188:14;22184:28;22174:38;;22164:54;;;:::o;22224:96::-;;22307:5;22302:3;22298:15;22277:36;;22267:53;;;:::o;22326:94::-;;22407:5;22403:2;22399:14;22378:35;;22368:52;;;:::o;22426:122::-;22499:24;22517:5;22499:24;:::i;:::-;22492:5;22489:35;22479:2;;22538:1;22535;22528:12;22479:2;22469:79;:::o;22554:116::-;22624:21;22639:5;22624:21;:::i;:::-;22617:5;22614:32;22604:2;;22660:1;22657;22650:12;22604:2;22594:76;:::o;22676:118::-;22747:22;22763:5;22747:22;:::i;:::-;22740:5;22737:33;22727:2;;22784:1;22781;22774:12;22727:2;22717:77;:::o;22800:120::-;22872:23;22889:5;22872:23;:::i;:::-;22865:5;22862:34;22852:2;;22910:1;22907;22900:12;22852:2;22842:78;:::o;22926:120::-;22998:23;23015:5;22998:23;:::i;:::-;22991:5;22988:34;22978:2;;23036:1;23033;23026:12;22978:2;22968:78;:::o;23052:122::-;23125:24;23143:5;23125:24;:::i;:::-;23118:5;23115:35;23105:2;;23164:1;23161;23154:12;23105:2;23095:79;:::o;23180:120::-;23252:23;23269:5;23252:23;:::i;:::-;23245:5;23242:34;23232:2;;23290:1;23287;23280:12;23232:2;23222:78;:::o;23306:122::-;23379:24;23397:5;23379:24;:::i;:::-;23372:5;23369:35;23359:2;;23418:1;23415;23408:12;23359:2;23349:79;:::o;23434:118::-;23505:22;23521:5;23505:22;:::i;:::-;23498:5;23495:33;23485:2;;23542:1;23539;23532:12;23485:2;23475:77;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2113400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"factory()": "infinite",
								"quoteExactInput(bytes,uint256)": "infinite",
								"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "infinite",
								"quoteExactOutput(bytes,uint256)": "infinite",
								"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "infinite",
								"uniswapV3SwapCallback(int256,int256,bytes)": "infinite"
							},
							"internal": {
								"getPool(address,address,uint24)": "infinite",
								"handleRevert(bytes memory,contract IUniswapV3Pool,uint256)": "infinite",
								"parseRevertReason(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1387,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 532,
									"end": 540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 522,
									"end": 540,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 558,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 550,
									"end": 564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 564,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 550,
									"end": 564,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 550,
									"end": 564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 466,
									"end": 571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 466,
									"end": 571,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "tag",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 156,
									"end": 596,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 21
								},
								{
									"begin": 260,
									"end": 262,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 260,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 308,
									"end": 309,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 306,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 298,
									"end": 310,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 260,
									"end": 262,
									"name": "tag",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 432,
									"end": 439,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 423,
									"end": 429,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 412,
									"end": 421,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 408,
									"end": 430,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "tag",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 366,
									"end": 440,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 366,
									"end": 440,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 322,
									"end": 450,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 489,
									"end": 491,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "17"
								},
								{
									"begin": 571,
									"end": 578,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 562,
									"end": 568,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 551,
									"end": 560,
									"name": "DUP7",
									"source": 21
								},
								{
									"begin": 547,
									"end": 569,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "tag",
									"source": 21,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 505,
									"end": 579,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 505,
									"end": 579,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 460,
									"end": 589,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 250,
									"end": 596,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 602,
									"end": 698,
									"name": "tag",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 602,
									"end": 698,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 602,
									"end": 698,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 686,
									"end": 691,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "tag",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 657,
									"end": 692,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 657,
									"end": 692,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 647,
									"end": 698,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 647,
									"end": 698,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 647,
									"end": 698,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 647,
									"end": 698,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 704,
									"end": 830,
									"name": "tag",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 704,
									"end": 830,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 704,
									"end": 830,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 823,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 770,
									"end": 824,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 759,
									"end": 824,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 759,
									"end": 824,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 749,
									"end": 830,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 749,
									"end": 830,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 749,
									"end": 830,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 749,
									"end": 830,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 836,
									"end": 958,
									"name": "tag",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 836,
									"end": 958,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 909,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 927,
									"end": 932,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 909,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "JUMP",
									"source": 21,
									"value": "[in]"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "tag",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 902,
									"end": 907,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 899,
									"end": 934,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 889,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 889,
									"end": 891,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 945,
									"end": 946,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 938,
									"end": 950,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 889,
									"end": 891,
									"name": "tag",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 889,
									"end": 891,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 879,
									"end": 958,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 879,
									"end": 958,
									"name": "JUMP",
									"source": 21,
									"value": "[out]"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 10316,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe4409c77535903b92bab013cbc24cc06a05d608cccda9e76cdd9de4772c353764736f6c63430007060033",
									".code": [
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "C45A0155"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "C45A0155"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "C6A5026A"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "CDCA1753"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "FA461E33"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "2F80BB1D"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "4AA4A4FC"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "BD21704A"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 10316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 420,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8888,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8902,
											"end": 8945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8959,
											"end": 8978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9041,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9041,
											"end": 9045,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9041,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 9041,
											"end": 9056,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9041,
											"end": 9056,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9041,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9057,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9003,
											"end": 9057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 9110,
											"end": 9114,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9137,
											"end": 9146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9167,
											"end": 9171,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9221,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9223,
											"end": 9233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 9237,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 9237,
											"end": 9259,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9237,
											"end": 9259,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 9237,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9401,
											"end": 9432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9474,
											"end": 9797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9582,
											"end": 9589,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 9633,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP16",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9707,
											"end": 9710,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9518,
											"end": 9779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9474,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9474,
											"end": 9797,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9474,
											"end": 9797,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 9474,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9353,
											"end": 9797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9833,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9904,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9898,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 9963,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9942,
											"end": 9963,
											"name": "SWAP13",
											"source": 3
										},
										{
											"begin": 9942,
											"end": 9963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9992,
											"end": 10004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 10004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 10095,
											"end": 10099,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10145,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 10145,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 10145,
											"end": 10161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10145,
											"end": 10161,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10145,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10161,
											"name": "SWAP14",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10208,
											"end": 10217,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 10200,
											"end": 10283,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 10091,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 9160,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 10314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7658,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7698,
											"end": 7704,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7714,
											"end": 7729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7714,
											"end": 7729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7714,
											"end": 7729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 7741,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7731,
											"end": 7741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 7741,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7690,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 7690,
											"end": 7742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7690,
											"end": 7742,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7690,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7872,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7866,
											"end": 7895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7895,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7915,
											"end": 7928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7915,
											"end": 7928,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7928,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7862,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7938,
											"end": 7967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7938,
											"end": 7967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "PUSH",
											"source": 3,
											"value": "128ACB08"
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 8101,
											"end": 8111,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8130,
											"end": 8154,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8130,
											"end": 8154,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 8130,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8178,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8196,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8172,
											"end": 8196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8196,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8172,
											"end": 8201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8201,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8343,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8319,
											"end": 8343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8235,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 20,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D26"
										},
										{
											"begin": 8268,
											"end": 8295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8264,
											"end": 8265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 834,
											"name": "PUSH",
											"source": 20,
											"value": "1000276A3"
										},
										{
											"begin": 8238,
											"end": 8265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 8225,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 8172,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8384,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8401,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8413,
											"name": "DUP16",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8422,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 7993,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8516,
											"end": 8525,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8504,
											"end": 8513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8504,
											"end": 8525,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8525,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8549,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8543,
											"end": 8572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8572,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8596,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8539,
											"end": 8596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8596,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8596,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8596,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8539,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8645,
											"end": 8651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8653,
											"end": 8657,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8659,
											"end": 8670,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8632,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 8632,
											"end": 8671,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8632,
											"end": 8671,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8632,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8625,
											"end": 8671,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 8682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 8688,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4771,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4897,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 4952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4977,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4979,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4979,
											"end": 4994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4979,
											"end": 4994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4996,
											"end": 5006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4996,
											"end": 5006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4996,
											"end": 5006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4955,
											"end": 5007,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5007,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4955,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 5007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5047,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "PUSH",
											"source": 3,
											"value": "128ACB08"
										},
										{
											"begin": 5108,
											"end": 5112,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5191,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5209,
											"end": 5224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5209,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5277,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5253,
											"end": 5277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5424,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5400,
											"end": 5424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5424,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5316,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 1053,
											"name": "PUSH",
											"source": 20,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D26"
										},
										{
											"begin": 5349,
											"end": 5376,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5346,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 834,
											"name": "PUSH",
											"source": 20,
											"value": "1000276A3"
										},
										{
											"begin": 5319,
											"end": 5346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5306,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5253,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5465,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5473,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5485,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5475,
											"end": 5485,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5485,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP16",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5502,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5502,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5073,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5606,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5606,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5627,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5620,
											"end": 5666,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5683,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5882,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6035,
											"end": 6039,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6104,
											"end": 6119,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6119,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6104,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6061,
											"end": 6120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6061,
											"end": 6120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6182,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6217,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6181,
											"end": 6253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6396,
											"end": 6427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6575,
											"end": 6582,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6626,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 6704,
											"name": "DUP16",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6660,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 6469,
											"end": 6791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6791,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6469,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6827,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 6851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 6957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6957,
											"name": "SWAP13",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6971,
											"end": 6998,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6971,
											"end": 6998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6971,
											"end": 6998,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 6971,
											"end": 6998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7089,
											"end": 7093,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7089,
											"end": 7112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7089,
											"end": 7112,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7089,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 7139,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7155,
											"name": "SWAP14",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7210,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7194,
											"end": 7276,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7085,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6154,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 7307,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1858,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2010,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2026,
											"end": 2030,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2026,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2101,
											"end": 2108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2058,
											"end": 2124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2058,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2230,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2344,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2354,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2376,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2268,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2257,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2214,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2460,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "3850C7BD"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2572,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 3302,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2556,
											"end": 3302,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2636,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2681,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2835,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2597,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 2990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 2985,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 2990,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2966,
											"end": 3034,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3033,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3033,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2992,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3034,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2966,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3126,
											"end": 3137,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3229,
											"end": 3233,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3277,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3263,
											"end": 3278,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1482,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1494,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1517,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 2000,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 2000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1123,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1123,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1130,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2708,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2762,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2731,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2727,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2727,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2784,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1602,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1602,
											"end": 1645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1602,
											"end": 1645,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1602,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1566,
											"end": 1646,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1646,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1566,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1654,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 976,
											"end": 984,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "PUSH",
											"source": 18,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1025,
											"end": 1038,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1025,
											"end": 1038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 924,
											"end": 1045,
											"name": "JUMP",
											"source": 18,
											"value": "[out]"
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4148,
											"end": 4178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4199,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4302,
											"end": 4312,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "3850C7BD"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4302,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4461,
											"end": 4471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4431,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4460,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4460,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4427,
											"end": 4460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4427,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4483,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4565,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 4573,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 683,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 683,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 882,
											"end": 889,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 891,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 930,
											"end": 933,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 891,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 891,
											"end": 934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 891,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 867,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 867,
											"end": 935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 935,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 867,
											"end": 935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 942,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3498,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "746F416464726573735F6F766572666C6F770000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3593,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "746F416464726573735F6F75744F66426F756E64730000000000000000000000"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3782,
											"name": "PUSH",
											"source": 4,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3716,
											"end": 3753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "746F55696E7432345F6F766572666C6F77000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "746F55696E7432345F6F75744F66426F756E6473000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4157,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4192,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 533,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 569,
											"end": 576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 563,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 553,
											"end": 560,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 553,
											"end": 565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 576,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 553,
											"end": 576,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "736C6963655F6F766572666C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 545,
											"end": 595,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 545,
											"end": 595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 622,
											"end": 629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 613,
											"end": 629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 613,
											"end": 639,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 613,
											"end": 639,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "736C6963655F6F766572666C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 605,
											"end": 658,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 605,
											"end": 658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 702,
											"end": 709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 693,
											"end": 709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 682,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 676,
											"end": 689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 709,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "736C6963655F6F75744F66426F756E6473000000000000000000000000000000"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 668,
											"end": 731,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 668,
											"end": 731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 764,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 812,
											"end": 819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 805,
											"end": 820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3328,
											"end": 3337,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 798,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 798,
											"end": 3363,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 837,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2138,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2139,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2445,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2489,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2637,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2535,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2210,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2214,
											"end": 2477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2909,
											"end": 2916,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2906,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2900,
											"end": 2902,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2917,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 844,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 844,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 844,
											"end": 2936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 798,
											"end": 3363,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 798,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 798,
											"end": 3363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 901,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 901,
											"end": 915,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 915,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 901,
											"end": 915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 931,
											"end": 946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 931,
											"end": 937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 931,
											"end": 946,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 931,
											"end": 946,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 927,
											"end": 983,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 927,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 927,
											"end": 983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 968,
											"end": 974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 927,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 927,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFF"
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 1058,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1695,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1692,
											"end": 1699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFF"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1701,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 241,
											"end": 307,
											"name": "PUSH",
											"source": 7,
											"value": "E34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54"
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1786,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1800,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1817,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3606,
											"end": 3625,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3602,
											"end": 3833,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3641,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3759,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3822,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3602,
											"end": 3833,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3602,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3849,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3388,
											"end": 3901,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 784,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 900,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1187,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1163,
											"end": 1167,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1150,
											"end": 1181,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1187,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1149,
											"end": 1187,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1187,
											"name": "SAR",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1253,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1255,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1262,
											"name": "SMOD",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1334,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1334,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1334,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1315,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1336,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1342,
											"name": "SAR",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1412,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1393,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1414,
											"name": "SDIV",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1421,
											"name": "SMOD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1892,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1847,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "5339C296"
										},
										{
											"begin": 1859,
											"end": 1871,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1893,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1898,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1937,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1933,
											"end": 1949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1951,
											"name": "SMOD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1841,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 1989,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 2001,
											"name": "SGT",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1841,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 2002,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 2002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2307,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2296,
											"end": 2307,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2296,
											"end": 2307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2307,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2272,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2283,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2283,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2283,
											"name": "PUSH",
											"source": 8,
											"value": "5339C296"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2267,
											"end": 2313,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "PUSH",
											"source": 8,
											"value": "D0C93A7C"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2346,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2367,
											"name": "SMOD",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2335,
											"end": 2373,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2373,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2266,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2417,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2266,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2418,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2459,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2471,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2512,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2437,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2593,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2639,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2683,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2683,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2749,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2792,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2433,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3133,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3179,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "SGT",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3342,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3313,
											"end": 3342,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3325,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3342,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3313,
											"end": 3342,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3342,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3309,
											"end": 3434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3417,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3402,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3399,
											"end": 3417,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3418,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3377,
											"end": 3418,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3394,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3377,
											"end": 3418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3418,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3419,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3434,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3309,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "PUSH",
											"source": 8,
											"value": "5339C296"
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3705,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3681,
											"end": 3705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3143,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3805,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3726,
											"end": 3805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3766,
											"end": 3794,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3794,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3794,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3805,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3726,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 3815,
											"end": 3895,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3895,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 3815,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 3942,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 1397,
											"end": 1404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1370,
											"end": 1414,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1414,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 1370,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1468,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4036,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4021,
											"end": 4036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4101,
											"end": 4102,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4046,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4145,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 349,
											"name": "tag",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 7,
											"end": 349,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7,
											"end": 349,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 124,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 165,
											"end": 171,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 124,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 124,
											"end": 172,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 124,
											"end": 172,
											"name": "tag",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 124,
											"end": 172,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 109,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 109,
											"end": 173,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 173,
											"name": "tag",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 109,
											"end": 173,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 100,
											"end": 173,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 100,
											"end": 173,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 196,
											"end": 202,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 189,
											"end": 194,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 182,
											"end": 203,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 234,
											"end": 238,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 223,
											"end": 239,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 272,
											"end": 275,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 263,
											"end": 269,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 258,
											"end": 261,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 254,
											"end": 270,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 251,
											"end": 276,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 248,
											"end": 250,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 248,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 248,
											"end": 250,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 248,
											"end": 250,
											"name": "tag",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 248,
											"end": 250,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 302,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 336,
											"end": 342,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 331,
											"end": 334,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 302,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 302,
											"end": 343,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 343,
											"name": "tag",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 302,
											"end": 343,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 90,
											"end": 349,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 355,
											"end": 708,
											"name": "tag",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 355,
											"end": 708,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 355,
											"end": 708,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "287"
										},
										{
											"begin": 484,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "288"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 484,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "289"
										},
										{
											"begin": 484,
											"end": 533,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 533,
											"name": "tag",
											"source": 21,
											"value": "288"
										},
										{
											"begin": 484,
											"end": 533,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 469,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 469,
											"end": 534,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 534,
											"name": "tag",
											"source": 21,
											"value": "287"
										},
										{
											"begin": 469,
											"end": 534,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 460,
											"end": 534,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 460,
											"end": 534,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 557,
											"end": 563,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 543,
											"end": 564,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 595,
											"end": 599,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 593,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 584,
											"end": 600,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 633,
											"end": 636,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 615,
											"end": 631,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 612,
											"end": 637,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 609,
											"end": 611,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 650,
											"end": 651,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 648,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 640,
											"end": 652,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 609,
											"end": 611,
											"name": "tag",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 663,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "291"
										},
										{
											"begin": 695,
											"end": 701,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 690,
											"end": 693,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 663,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 663,
											"end": 702,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 702,
											"name": "tag",
											"source": 21,
											"value": "291"
										},
										{
											"begin": 663,
											"end": 702,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 450,
											"end": 708,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 853,
											"name": "tag",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 714,
											"end": 853,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 714,
											"end": 853,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 804,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 785,
											"end": 805,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 776,
											"end": 805,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 776,
											"end": 805,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 814,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "295"
										},
										{
											"begin": 841,
											"end": 846,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 814,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 814,
											"end": 847,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 814,
											"end": 847,
											"name": "tag",
											"source": 21,
											"value": "295"
										},
										{
											"begin": 814,
											"end": 847,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 766,
											"end": 853,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 766,
											"end": 853,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 766,
											"end": 853,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 766,
											"end": 853,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 766,
											"end": 853,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 996,
											"name": "tag",
											"source": 21,
											"value": "297"
										},
										{
											"begin": 859,
											"end": 996,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 859,
											"end": 996,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 938,
											"end": 951,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 929,
											"end": 951,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 960,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 984,
											"end": 989,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 960,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 960,
											"end": 990,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 960,
											"end": 990,
											"name": "tag",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 960,
											"end": 990,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 919,
											"end": 996,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 919,
											"end": 996,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 919,
											"end": 996,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 919,
											"end": 996,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 919,
											"end": 996,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1286,
											"name": "tag",
											"source": 21,
											"value": "301"
										},
										{
											"begin": 1015,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1015,
											"end": 1286,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1100,
											"end": 1117,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1096,
											"end": 1123,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "303"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1127,
											"end": 1139,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "tag",
											"source": 21,
											"value": "303"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1164,
											"end": 1184,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1202,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 1276,
											"end": 1279,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1202,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 1202,
											"end": 1280,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1280,
											"name": "tag",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 1202,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1193,
											"end": 1280,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1193,
											"end": 1280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1076,
											"end": 1286,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1292,
											"end": 1431,
											"name": "tag",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 1292,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1292,
											"end": 1431,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1384,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1363,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1363,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "307"
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "308"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "tag",
											"source": 21,
											"value": "307"
										},
										{
											"begin": 1394,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1353,
											"end": 1431,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1353,
											"end": 1431,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1353,
											"end": 1431,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1353,
											"end": 1431,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1353,
											"end": 1431,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1437,
											"end": 1574,
											"name": "tag",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 1437,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1437,
											"end": 1574,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1527,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1498,
											"end": 1527,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "311"
										},
										{
											"begin": 1562,
											"end": 1567,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "312"
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "tag",
											"source": 21,
											"value": "311"
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1488,
											"end": 1574,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1488,
											"end": 1574,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1488,
											"end": 1574,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1488,
											"end": 1574,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1488,
											"end": 1574,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1721,
											"name": "tag",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 1580,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1580,
											"end": 1721,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1661,
											"end": 1674,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1683,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 1709,
											"end": 1714,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1683,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "312"
										},
										{
											"begin": 1683,
											"end": 1715,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1715,
											"name": "tag",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 1683,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1642,
											"end": 1721,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1642,
											"end": 1721,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1642,
											"end": 1721,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1642,
											"end": 1721,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1642,
											"end": 1721,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 1741,
											"end": 2029,
											"name": "tag",
											"source": 21,
											"value": "316"
										},
										{
											"begin": 1741,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1741,
											"end": 2029,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1838,
											"end": 1855,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "318"
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "tag",
											"source": 21,
											"value": "318"
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1902,
											"end": 1915,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1933,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2004,
											"end": 2008,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1992,
											"end": 2009,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1933,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 1933,
											"end": 2023,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1933,
											"end": 2023,
											"name": "tag",
											"source": 21,
											"value": "319"
										},
										{
											"begin": 1933,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1924,
											"end": 2023,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1924,
											"end": 2023,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1814,
											"end": 2029,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2087,
											"end": 3117,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 2087,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2087,
											"end": 3117,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2206,
											"end": 2209,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2198,
											"end": 2228,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "tag",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "tag",
											"source": 21,
											"value": "323"
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2410,
											"end": 2419,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2406,
											"end": 2428,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2385,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 2385,
											"end": 2434,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2385,
											"end": 2434,
											"name": "tag",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 2385,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2367,
											"end": 2383,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2360,
											"end": 2435,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2293,
											"end": 2446,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 2595,
											"end": 2598,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2571,
											"end": 2593,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "tag",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2532,
											"end": 2548,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2525,
											"end": 2600,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2456,
											"end": 2611,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 2760,
											"end": 2763,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2715,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 2715,
											"end": 2764,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2715,
											"end": 2764,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 2715,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2708,
											"end": 2712,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2690,
											"end": 2765,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2621,
											"end": 2776,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2834,
											"end": 2836,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2875,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 2919,
											"end": 2922,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2875,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 2875,
											"end": 2923,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 2923,
											"name": "tag",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 2875,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2868,
											"end": 2872,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2857,
											"end": 2873,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2850,
											"end": 2924,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2786,
											"end": 2935,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3007,
											"end": 3010,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "tag",
											"source": 21,
											"value": "330"
										},
										{
											"begin": 3049,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3042,
											"end": 3046,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3035,
											"end": 3040,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3031,
											"end": 3047,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3024,
											"end": 3099,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2945,
											"end": 3110,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2185,
											"end": 3117,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2185,
											"end": 3117,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2185,
											"end": 3117,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2185,
											"end": 3117,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2185,
											"end": 3117,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3176,
											"end": 4206,
											"name": "tag",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 3176,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3176,
											"end": 4206,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3300,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3293,
											"end": 3312,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3289,
											"end": 3319,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "tag",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "tag",
											"source": 21,
											"value": "335"
										},
										{
											"begin": 3354,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3345,
											"end": 3374,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3345,
											"end": 3374,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 3521,
											"end": 3524,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3476,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 3476,
											"end": 3525,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3476,
											"end": 3525,
											"name": "tag",
											"source": 21,
											"value": "336"
										},
										{
											"begin": 3476,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3467,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3458,
											"end": 3474,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3451,
											"end": 3526,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3384,
											"end": 3537,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 3686,
											"end": 3689,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "tag",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 3641,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3632,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3623,
											"end": 3639,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3616,
											"end": 3691,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3547,
											"end": 3702,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 3849,
											"end": 3852,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3825,
											"end": 3847,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3804,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 3804,
											"end": 3853,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3853,
											"name": "tag",
											"source": 21,
											"value": "338"
										},
										{
											"begin": 3804,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3797,
											"end": 3801,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3779,
											"end": 3854,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3712,
											"end": 3865,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 4008,
											"end": 4011,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3984,
											"end": 4006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "tag",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3939,
											"end": 4013,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3875,
											"end": 4024,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4096,
											"end": 4099,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 4138,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4163,
											"end": 4172,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4159,
											"end": 4181,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4138,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 4138,
											"end": 4187,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4138,
											"end": 4187,
											"name": "tag",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 4138,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 4124,
											"end": 4129,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4120,
											"end": 4136,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4113,
											"end": 4188,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4034,
											"end": 4199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3276,
											"end": 4206,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3276,
											"end": 4206,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3276,
											"end": 4206,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3276,
											"end": 4206,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3276,
											"end": 4206,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4351,
											"name": "tag",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 4212,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4212,
											"end": 4351,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4283,
											"end": 4303,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4303,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4303,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 4339,
											"end": 4344,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "tag",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4351,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4351,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4351,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4351,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4351,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4357,
											"end": 4500,
											"name": "tag",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 4357,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4357,
											"end": 4500,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4439,
											"end": 4452,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4430,
											"end": 4452,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4430,
											"end": 4452,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "tag",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4647,
											"name": "tag",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 4506,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4506,
											"end": 4647,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4587,
											"end": 4600,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 4578,
											"end": 4600,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4578,
											"end": 4600,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4609,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 4635,
											"end": 4640,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4609,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 4609,
											"end": 4641,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4609,
											"end": 4641,
											"name": "tag",
											"source": 21,
											"value": "349"
										},
										{
											"begin": 4609,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4568,
											"end": 4647,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4568,
											"end": 4647,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4568,
											"end": 4647,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4568,
											"end": 4647,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4568,
											"end": 4647,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4653,
											"end": 4790,
											"name": "tag",
											"source": 21,
											"value": "329"
										},
										{
											"begin": 4653,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4653,
											"end": 4790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4714,
											"end": 4743,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4714,
											"end": 4743,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "tag",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4704,
											"end": 4790,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4704,
											"end": 4790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4704,
											"end": 4790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4704,
											"end": 4790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4704,
											"end": 4790,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 4935,
											"name": "tag",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 4796,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4796,
											"end": 4935,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4858,
											"end": 4887,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4858,
											"end": 4887,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4896,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4896,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 4896,
											"end": 4929,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 4929,
											"name": "tag",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 4896,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4935,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4935,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4935,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4935,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4848,
											"end": 4935,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4941,
											"end": 5084,
											"name": "tag",
											"source": 21,
											"value": "357"
										},
										{
											"begin": 4941,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4941,
											"end": 5084,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5023,
											"end": 5036,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5014,
											"end": 5036,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5014,
											"end": 5036,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 5072,
											"end": 5077,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5045,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 5045,
											"end": 5078,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5078,
											"name": "tag",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 5045,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5004,
											"end": 5084,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5004,
											"end": 5084,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5004,
											"end": 5084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5004,
											"end": 5084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5004,
											"end": 5084,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5090,
											"end": 5229,
											"name": "tag",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 5090,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5229,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5170,
											"end": 5183,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 5217,
											"end": 5222,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "tag",
											"source": 21,
											"value": "362"
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5151,
											"end": 5229,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5151,
											"end": 5229,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5151,
											"end": 5229,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5151,
											"end": 5229,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5151,
											"end": 5229,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5235,
											"end": 5753,
											"name": "tag",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 5235,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5235,
											"end": 5753,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5753,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5369,
											"end": 5371,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5344,
											"end": 5367,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5340,
											"end": 5372,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5375,
											"end": 5387,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "tag",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5428,
											"end": 5459,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5486,
											"end": 5504,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5475,
											"end": 5505,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "tag",
											"source": 21,
											"value": "366"
										},
										{
											"begin": 5472,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5546,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "367"
										},
										{
											"begin": 5600,
											"end": 5607,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5546,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "301"
										},
										{
											"begin": 5546,
											"end": 5608,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 5608,
											"name": "tag",
											"source": 21,
											"value": "367"
										},
										{
											"begin": 5546,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5608,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5536,
											"end": 5608,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5399,
											"end": 5618,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 5728,
											"end": 5735,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5708,
											"end": 5717,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5704,
											"end": 5726,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5683,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "327"
										},
										{
											"begin": 5683,
											"end": 5736,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5736,
											"name": "tag",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 5683,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5673,
											"end": 5736,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5673,
											"end": 5736,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5628,
											"end": 5746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5327,
											"end": 5753,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5759,
											"end": 6195,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 5759,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5759,
											"end": 6195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 6195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5899,
											"end": 5911,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "tag",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5952,
											"end": 5953,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6008,
											"end": 6030,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "tag",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5967,
											"end": 6040,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5967,
											"end": 6040,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5923,
											"end": 6050,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 6170,
											"end": 6177,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6150,
											"end": 6159,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6146,
											"end": 6168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "313"
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "tag",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6178,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6178,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6060,
											"end": 6188,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5851,
											"end": 6195,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 6201,
											"end": 6860,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 6201,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6201,
											"end": 6860,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6860,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6201,
											"end": 6860,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6352,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6325,
											"end": 6348,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6321,
											"end": 6353,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "374"
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6364,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6356,
											"end": 6368,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "tag",
											"source": 21,
											"value": "374"
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 6478,
											"end": 6485,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6454,
											"end": 6476,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6434,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 6434,
											"end": 6486,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 6434,
											"end": 6486,
											"name": "tag",
											"source": 21,
											"value": "375"
										},
										{
											"begin": 6434,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6424,
											"end": 6486,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6424,
											"end": 6486,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6380,
											"end": 6496,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6561,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "376"
										},
										{
											"begin": 6605,
											"end": 6612,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6581,
											"end": 6603,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6561,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 6561,
											"end": 6613,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6613,
											"name": "tag",
											"source": 21,
											"value": "376"
										},
										{
											"begin": 6561,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6551,
											"end": 6613,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6506,
											"end": 6623,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6679,
											"end": 6688,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6662,
											"end": 6694,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6713,
											"end": 6719,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6751,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6743,
											"end": 6755,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "tag",
											"source": 21,
											"value": "377"
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6781,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "378"
										},
										{
											"begin": 6835,
											"end": 6842,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6826,
											"end": 6832,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6815,
											"end": 6824,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 6811,
											"end": 6833,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6781,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "301"
										},
										{
											"begin": 6781,
											"end": 6843,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 6781,
											"end": 6843,
											"name": "tag",
											"source": 21,
											"value": "378"
										},
										{
											"begin": 6781,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6771,
											"end": 6843,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6771,
											"end": 6843,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6633,
											"end": 6853,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6308,
											"end": 6860,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 6866,
											"end": 7256,
											"name": "tag",
											"source": 21,
											"value": "204"
										},
										{
											"begin": 6866,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6866,
											"end": 7256,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6974,
											"end": 6981,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6970,
											"end": 6993,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6966,
											"end": 6998,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7009,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "tag",
											"source": 21,
											"value": "380"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7073,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7060,
											"end": 7077,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7054,
											"end": 7078,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7094,
											"end": 7124,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7127,
											"end": 7139,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "tag",
											"source": 21,
											"value": "381"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 7231,
											"end": 7238,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7211,
											"end": 7220,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7207,
											"end": 7229,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "316"
										},
										{
											"begin": 7165,
											"end": 7239,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7165,
											"end": 7239,
											"name": "tag",
											"source": 21,
											"value": "382"
										},
										{
											"begin": 7165,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7155,
											"end": 7239,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7155,
											"end": 7239,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7025,
											"end": 7249,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7256,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7256,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7256,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7256,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7256,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 7262,
											"end": 7611,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 7262,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7262,
											"end": 7611,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7413,
											"end": 7416,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7392,
											"end": 7399,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7384,
											"end": 7417,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7430,
											"end": 7431,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7428,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "tag",
											"source": 21,
											"value": "384"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 7586,
											"end": 7593,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7577,
											"end": 7583,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7562,
											"end": 7584,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7498,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 7498,
											"end": 7594,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7498,
											"end": 7594,
											"name": "tag",
											"source": 21,
											"value": "385"
										},
										{
											"begin": 7498,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7488,
											"end": 7594,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7488,
											"end": 7594,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7444,
											"end": 7604,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7371,
											"end": 7611,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7371,
											"end": 7611,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7371,
											"end": 7611,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7371,
											"end": 7611,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7371,
											"end": 7611,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 7617,
											"end": 7970,
											"name": "tag",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 7617,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7617,
											"end": 7970,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7773,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 7758,
											"end": 7767,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7749,
											"end": 7756,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7745,
											"end": 7768,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7741,
											"end": 7774,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "387"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7787,
											"end": 7788,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7777,
											"end": 7789,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "tag",
											"source": 21,
											"value": "387"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7855,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "388"
										},
										{
											"begin": 7945,
											"end": 7952,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7925,
											"end": 7934,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7921,
											"end": 7943,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7855,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 7855,
											"end": 7953,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 7855,
											"end": 7953,
											"name": "tag",
											"source": 21,
											"value": "388"
										},
										{
											"begin": 7855,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7845,
											"end": 7953,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7845,
											"end": 7953,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7801,
											"end": 7963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7728,
											"end": 7970,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7728,
											"end": 7970,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7728,
											"end": 7970,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7728,
											"end": 7970,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7728,
											"end": 7970,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "tag",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7976,
											"end": 9180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8190,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 8175,
											"end": 8184,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8166,
											"end": 8173,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8162,
											"end": 8185,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8204,
											"end": 8205,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8202,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8194,
											"end": 8206,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "tag",
											"source": 21,
											"value": "390"
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 8328,
											"end": 8335,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8308,
											"end": 8317,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8304,
											"end": 8326,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8272,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 8272,
											"end": 8336,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8272,
											"end": 8336,
											"name": "tag",
											"source": 21,
											"value": "391"
										},
										{
											"begin": 8272,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8262,
											"end": 8336,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 8262,
											"end": 8336,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8218,
											"end": 8346,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8385,
											"end": 8387,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8411,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "392"
										},
										{
											"begin": 8465,
											"end": 8472,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8441,
											"end": 8463,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8411,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 8411,
											"end": 8473,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8411,
											"end": 8473,
											"name": "tag",
											"source": 21,
											"value": "392"
										},
										{
											"begin": 8411,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8401,
											"end": 8473,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 8401,
											"end": 8473,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8356,
											"end": 8483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8522,
											"end": 8524,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8548,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 8603,
											"end": 8610,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8583,
											"end": 8592,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8579,
											"end": 8601,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8548,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 8548,
											"end": 8611,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8548,
											"end": 8611,
											"name": "tag",
											"source": 21,
											"value": "393"
										},
										{
											"begin": 8548,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8538,
											"end": 8611,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8538,
											"end": 8611,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8493,
											"end": 8621,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8660,
											"end": 8662,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8686,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "394"
										},
										{
											"begin": 8741,
											"end": 8748,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8732,
											"end": 8738,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8717,
											"end": 8739,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8686,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 8686,
											"end": 8749,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8686,
											"end": 8749,
											"name": "tag",
											"source": 21,
											"value": "394"
										},
										{
											"begin": 8686,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8676,
											"end": 8749,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 8676,
											"end": 8749,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8631,
											"end": 8759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 8880,
											"end": 8887,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 8871,
											"end": 8877,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8856,
											"end": 8878,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "tag",
											"source": 21,
											"value": "395"
										},
										{
											"begin": 8825,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8815,
											"end": 8888,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8815,
											"end": 8888,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8769,
											"end": 8898,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8937,
											"end": 8940,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 8964,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 9018,
											"end": 9025,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 9009,
											"end": 9015,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8998,
											"end": 9007,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 8994,
											"end": 9016,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8964,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "360"
										},
										{
											"begin": 8964,
											"end": 9026,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 8964,
											"end": 9026,
											"name": "tag",
											"source": 21,
											"value": "396"
										},
										{
											"begin": 8964,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8954,
											"end": 9026,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8954,
											"end": 9026,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8908,
											"end": 9036,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9075,
											"end": 9078,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 9102,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 9155,
											"end": 9162,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 9146,
											"end": 9152,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 9131,
											"end": 9153,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9102,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "297"
										},
										{
											"begin": 9102,
											"end": 9163,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9102,
											"end": 9163,
											"name": "tag",
											"source": 21,
											"value": "397"
										},
										{
											"begin": 9102,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9092,
											"end": 9163,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9092,
											"end": 9163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9046,
											"end": 9173,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8145,
											"end": 9180,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 9186,
											"end": 9778,
											"name": "tag",
											"source": 21,
											"value": "208"
										},
										{
											"begin": 9186,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9186,
											"end": 9778,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9778,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9186,
											"end": 9778,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9339,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9325,
											"end": 9334,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9316,
											"end": 9323,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9312,
											"end": 9335,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 9308,
											"end": 9340,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9353,
											"end": 9354,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9350,
											"end": 9351,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9343,
											"end": 9355,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "tag",
											"source": 21,
											"value": "399"
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9421,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "357"
										},
										{
											"begin": 9421,
											"end": 9485,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9421,
											"end": 9485,
											"name": "tag",
											"source": 21,
											"value": "400"
										},
										{
											"begin": 9421,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9411,
											"end": 9485,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9411,
											"end": 9485,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9367,
											"end": 9495,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9534,
											"end": 9536,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 9616,
											"end": 9623,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9607,
											"end": 9613,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9596,
											"end": 9605,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 9592,
											"end": 9614,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9560,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 9560,
											"end": 9624,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9560,
											"end": 9624,
											"name": "tag",
											"source": 21,
											"value": "401"
										},
										{
											"begin": 9560,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9550,
											"end": 9624,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9550,
											"end": 9624,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9505,
											"end": 9634,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9673,
											"end": 9675,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9699,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "402"
										},
										{
											"begin": 9753,
											"end": 9760,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9744,
											"end": 9750,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 9729,
											"end": 9751,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9699,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 9699,
											"end": 9761,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9699,
											"end": 9761,
											"name": "tag",
											"source": 21,
											"value": "402"
										},
										{
											"begin": 9699,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9689,
											"end": 9761,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9689,
											"end": 9761,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9644,
											"end": 9771,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9295,
											"end": 9778,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 9784,
											"end": 9963,
											"name": "tag",
											"source": 21,
											"value": "403"
										},
										{
											"begin": 9784,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9784,
											"end": 9963,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9874,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "405"
										},
										{
											"begin": 9916,
											"end": 9919,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9874,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 9874,
											"end": 9920,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 9874,
											"end": 9920,
											"name": "tag",
											"source": 21,
											"value": "405"
										},
										{
											"begin": 9874,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9952,
											"end": 9956,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9947,
											"end": 9950,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9943,
											"end": 9957,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9929,
											"end": 9957,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9929,
											"end": 9957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9864,
											"end": 9963,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9864,
											"end": 9963,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9864,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9864,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9864,
											"end": 9963,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 9969,
											"end": 10144,
											"name": "tag",
											"source": 21,
											"value": "407"
										},
										{
											"begin": 9969,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10144,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10057,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "409"
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10089,
											"end": 10095,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10057,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 10057,
											"end": 10101,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10057,
											"end": 10101,
											"name": "tag",
											"source": 21,
											"value": "409"
										},
										{
											"begin": 10057,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10133,
											"end": 10137,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10128,
											"end": 10131,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10124,
											"end": 10138,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10110,
											"end": 10138,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10110,
											"end": 10138,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10047,
											"end": 10144,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10047,
											"end": 10144,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10047,
											"end": 10144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10047,
											"end": 10144,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10047,
											"end": 10144,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10268,
											"name": "tag",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 10150,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10237,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "413"
										},
										{
											"begin": 10255,
											"end": 10260,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10237,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 10237,
											"end": 10261,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10237,
											"end": 10261,
											"name": "tag",
											"source": 21,
											"value": "413"
										},
										{
											"begin": 10237,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10232,
											"end": 10235,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10225,
											"end": 10262,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10274,
											"end": 10431,
											"name": "tag",
											"source": 21,
											"value": "415"
										},
										{
											"begin": 10274,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10379,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 10399,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "418"
										},
										{
											"begin": 10417,
											"end": 10422,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10399,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 10399,
											"end": 10423,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10399,
											"end": 10423,
											"name": "tag",
											"source": 21,
											"value": "418"
										},
										{
											"begin": 10399,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10379,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "419"
										},
										{
											"begin": 10379,
											"end": 10424,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10379,
											"end": 10424,
											"name": "tag",
											"source": 21,
											"value": "417"
										},
										{
											"begin": 10379,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10374,
											"end": 10377,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10367,
											"end": 10425,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10357,
											"end": 10431,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10357,
											"end": 10431,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10357,
											"end": 10431,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 10467,
											"end": 11199,
											"name": "tag",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 10467,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10467,
											"end": 11199,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 10663,
											"end": 10668,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "tag",
											"source": 21,
											"value": "422"
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10685,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "424"
										},
										{
											"begin": 10764,
											"end": 10770,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10759,
											"end": 10762,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10685,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "425"
										},
										{
											"begin": 10685,
											"end": 10771,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10685,
											"end": 10771,
											"name": "tag",
											"source": 21,
											"value": "424"
										},
										{
											"begin": 10685,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10678,
											"end": 10771,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 10678,
											"end": 10771,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10795,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "426"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10795,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 10795,
											"end": 10851,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 10795,
											"end": 10851,
											"name": "tag",
											"source": 21,
											"value": "426"
										},
										{
											"begin": 10795,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10874,
											"end": 10881,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10905,
											"end": 10906,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "tag",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10915,
											"end": 10921,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10909,
											"end": 10922,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "430"
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10991,
											"end": 10997,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10985,
											"end": 10998,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11018,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 11077,
											"end": 11080,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 11062,
											"end": 11075,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11018,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "403"
										},
										{
											"begin": 11018,
											"end": 11081,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11018,
											"end": 11081,
											"name": "tag",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 11018,
											"end": 11081,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11011,
											"end": 11081,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 11011,
											"end": 11081,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11104,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 11157,
											"end": 11163,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11104,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "433"
										},
										{
											"begin": 11104,
											"end": 11164,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11104,
											"end": 11164,
											"name": "tag",
											"source": 21,
											"value": "432"
										},
										{
											"begin": 11104,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11094,
											"end": 11164,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11094,
											"end": 11164,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10950,
											"end": 11174,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 10934,
											"end": 10935,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10925,
											"end": 10939,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10925,
											"end": 10939,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "428"
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "tag",
											"source": 21,
											"value": "430"
										},
										{
											"begin": 10890,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11183,
											"end": 11193,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 11183,
											"end": 11193,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10591,
											"end": 11199,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 11233,
											"end": 11957,
											"name": "tag",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 11233,
											"end": 11957,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11233,
											"end": 11957,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 11426,
											"end": 11431,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11379,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 11379,
											"end": 11432,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11379,
											"end": 11432,
											"name": "tag",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 11379,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11448,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 11526,
											"end": 11532,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11521,
											"end": 11524,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11448,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 11448,
											"end": 11533,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11533,
											"name": "tag",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 11448,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11441,
											"end": 11533,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 11441,
											"end": 11533,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11557,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 11606,
											"end": 11611,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11557,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 11557,
											"end": 11612,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11557,
											"end": 11612,
											"name": "tag",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 11557,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11635,
											"end": 11642,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11666,
											"end": 11667,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "tag",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11676,
											"end": 11682,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11673,
											"end": 11674,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11670,
											"end": 11683,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11752,
											"end": 11758,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11746,
											"end": 11759,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11779,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 11836,
											"end": 11839,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 11821,
											"end": 11834,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11779,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "407"
										},
										{
											"begin": 11779,
											"end": 11840,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11779,
											"end": 11840,
											"name": "tag",
											"source": 21,
											"value": "445"
										},
										{
											"begin": 11779,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11772,
											"end": 11840,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 11772,
											"end": 11840,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11863,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11863,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "447"
										},
										{
											"begin": 11863,
											"end": 11922,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 11863,
											"end": 11922,
											"name": "tag",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 11863,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11853,
											"end": 11922,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11853,
											"end": 11922,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11711,
											"end": 11932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 11695,
											"end": 11696,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11691,
											"end": 11700,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11686,
											"end": 11700,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11686,
											"end": 11700,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "tag",
											"source": 21,
											"value": "444"
										},
										{
											"begin": 11651,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11948,
											"end": 11951,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11941,
											"end": 11951,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 11941,
											"end": 11951,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11355,
											"end": 11957,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 11963,
											"end": 12072,
											"name": "tag",
											"source": 21,
											"value": "448"
										},
										{
											"begin": 11963,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "450"
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "451"
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "tag",
											"source": 21,
											"value": "450"
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12039,
											"end": 12042,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12032,
											"end": 12066,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12022,
											"end": 12072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12022,
											"end": 12072,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12022,
											"end": 12072,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12078,
											"end": 12438,
											"name": "tag",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 12078,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12078,
											"end": 12438,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 12224,
											"end": 12229,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12192,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 12192,
											"end": 12230,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12192,
											"end": 12230,
											"name": "tag",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 12192,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12316,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 12309,
											"end": 12315,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12304,
											"end": 12307,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12316,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "457"
										},
										{
											"begin": 12246,
											"end": 12316,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12246,
											"end": 12316,
											"name": "tag",
											"source": 21,
											"value": "456"
										},
										{
											"begin": 12246,
											"end": 12316,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12239,
											"end": 12316,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12239,
											"end": 12316,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12325,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 12370,
											"end": 12376,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12365,
											"end": 12368,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12358,
											"end": 12362,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12351,
											"end": 12356,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 12347,
											"end": 12363,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12325,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 12325,
											"end": 12377,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12325,
											"end": 12377,
											"name": "tag",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 12325,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12402,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 12424,
											"end": 12430,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12402,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 12402,
											"end": 12431,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12402,
											"end": 12431,
											"name": "tag",
											"source": 21,
											"value": "459"
										},
										{
											"begin": 12402,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12397,
											"end": 12400,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12393,
											"end": 12432,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12386,
											"end": 12432,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12386,
											"end": 12432,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12168,
											"end": 12438,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12444,
											"end": 12559,
											"name": "tag",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 12444,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12529,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 12546,
											"end": 12551,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12529,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 12529,
											"end": 12552,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12529,
											"end": 12552,
											"name": "tag",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 12529,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12524,
											"end": 12527,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12517,
											"end": 12553,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12565,
											"end": 12929,
											"name": "tag",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 12565,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12565,
											"end": 12929,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 12714,
											"end": 12719,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12681,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 12681,
											"end": 12720,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12681,
											"end": 12720,
											"name": "tag",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 12681,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12736,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "469"
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12795,
											"end": 12798,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12736,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 12736,
											"end": 12807,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12736,
											"end": 12807,
											"name": "tag",
											"source": 21,
											"value": "469"
										},
										{
											"begin": 12736,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12729,
											"end": 12807,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12729,
											"end": 12807,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12816,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 12861,
											"end": 12867,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12856,
											"end": 12859,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12847,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12816,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 12816,
											"end": 12868,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12816,
											"end": 12868,
											"name": "tag",
											"source": 21,
											"value": "471"
										},
										{
											"begin": 12816,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12893,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 12915,
											"end": 12921,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12893,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 12893,
											"end": 12922,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 12893,
											"end": 12922,
											"name": "tag",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 12893,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12888,
											"end": 12891,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12884,
											"end": 12923,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12877,
											"end": 12923,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12877,
											"end": 12923,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12657,
											"end": 12929,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 12935,
											"end": 13249,
											"name": "tag",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 12935,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12935,
											"end": 13249,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "tag",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 13098,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13091,
											"end": 13165,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13091,
											"end": 13165,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13195,
											"end": 13213,
											"name": "PUSH",
											"source": 21,
											"value": "556E6578706563746564206572726F7200000000000000000000000000000000"
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13189,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13182,
											"end": 13193,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13175,
											"end": 13214,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13240,
											"end": 13242,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13238,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13231,
											"end": 13243,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13224,
											"end": 13243,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13081,
											"end": 13249,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13081,
											"end": 13249,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13081,
											"end": 13249,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13081,
											"end": 13249,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13255,
											"end": 13363,
											"name": "tag",
											"source": 21,
											"value": "406"
										},
										{
											"begin": 13255,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "tag",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13327,
											"end": 13330,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13320,
											"end": 13357,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13369,
											"end": 13487,
											"name": "tag",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 13369,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13456,
											"end": 13480,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 13474,
											"end": 13479,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13456,
											"end": 13480,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 13456,
											"end": 13480,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13456,
											"end": 13480,
											"name": "tag",
											"source": 21,
											"value": "481"
										},
										{
											"begin": 13456,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13451,
											"end": 13454,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13444,
											"end": 13481,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13434,
											"end": 13487,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13434,
											"end": 13487,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13434,
											"end": 13487,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13493,
											"end": 13646,
											"name": "tag",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 13493,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13596,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 13615,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 13632,
											"end": 13637,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13615,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 13615,
											"end": 13638,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13615,
											"end": 13638,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 13615,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13596,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 13596,
											"end": 13639,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13596,
											"end": 13639,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 13596,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13591,
											"end": 13594,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13584,
											"end": 13640,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13574,
											"end": 13646,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13574,
											"end": 13646,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13574,
											"end": 13646,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "tag",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 13652,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "tag",
											"source": 21,
											"value": "490"
										},
										{
											"begin": 13739,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13734,
											"end": 13737,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13727,
											"end": 13764,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13717,
											"end": 13770,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13717,
											"end": 13770,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13717,
											"end": 13770,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13776,
											"end": 13881,
											"name": "tag",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 13776,
											"end": 13881,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13851,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 13868,
											"end": 13873,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13851,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 13851,
											"end": 13874,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13851,
											"end": 13874,
											"name": "tag",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 13851,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13846,
											"end": 13849,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13839,
											"end": 13875,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13829,
											"end": 13881,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13829,
											"end": 13881,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13829,
											"end": 13881,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 13887,
											"end": 14002,
											"name": "tag",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 13887,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13972,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 13989,
											"end": 13994,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13972,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 13972,
											"end": 13995,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 13972,
											"end": 13995,
											"name": "tag",
											"source": 21,
											"value": "497"
										},
										{
											"begin": 13972,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13967,
											"end": 13970,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13960,
											"end": 13996,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13950,
											"end": 14002,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13950,
											"end": 14002,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13950,
											"end": 14002,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 14008,
											"end": 14541,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 14008,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14008,
											"end": 14541,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 14260,
											"end": 14263,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14251,
											"end": 14257,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14189,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "415"
										},
										{
											"begin": 14189,
											"end": 14264,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 14189,
											"end": 14264,
											"name": "tag",
											"source": 21,
											"value": "499"
										},
										{
											"begin": 14189,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14289,
											"end": 14291,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 14284,
											"end": 14287,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14280,
											"end": 14292,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14273,
											"end": 14292,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14273,
											"end": 14292,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14302,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "500"
										},
										{
											"begin": 14371,
											"end": 14374,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14362,
											"end": 14368,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 14302,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 14302,
											"end": 14375,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 14302,
											"end": 14375,
											"name": "tag",
											"source": 21,
											"value": "500"
										},
										{
											"begin": 14302,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14400,
											"end": 14401,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 14395,
											"end": 14398,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14391,
											"end": 14402,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14384,
											"end": 14402,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14412,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "501"
										},
										{
											"begin": 14483,
											"end": 14486,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14412,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "415"
										},
										{
											"begin": 14412,
											"end": 14487,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 14412,
											"end": 14487,
											"name": "tag",
											"source": 21,
											"value": "501"
										},
										{
											"begin": 14412,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 14507,
											"end": 14510,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14503,
											"end": 14515,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14496,
											"end": 14515,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14496,
											"end": 14515,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14532,
											"end": 14535,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14525,
											"end": 14535,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14525,
											"end": 14535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14178,
											"end": 14541,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 14547,
											"end": 14769,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14547,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14547,
											"end": 14769,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14680,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14655,
											"end": 14681,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14655,
											"end": 14681,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14691,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 14759,
											"end": 14760,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14757,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14744,
											"end": 14761,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14735,
											"end": 14741,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14691,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 14691,
											"end": 14762,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 14691,
											"end": 14762,
											"name": "tag",
											"source": 21,
											"value": "503"
										},
										{
											"begin": 14691,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14769,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14769,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14769,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14769,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14645,
											"end": 14769,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 14775,
											"end": 15510,
											"name": "tag",
											"source": 21,
											"value": "77"
										},
										{
											"begin": 14775,
											"end": 15510,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14775,
											"end": 15510,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15031,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 15017,
											"end": 15026,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15013,
											"end": 15032,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15005,
											"end": 15032,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15005,
											"end": 15032,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15042,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 15110,
											"end": 15111,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15095,
											"end": 15112,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15086,
											"end": 15092,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 15042,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "411"
										},
										{
											"begin": 15042,
											"end": 15113,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15042,
											"end": 15113,
											"name": "tag",
											"source": 21,
											"value": "505"
										},
										{
											"begin": 15042,
											"end": 15113,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15123,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "506"
										},
										{
											"begin": 15185,
											"end": 15187,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15174,
											"end": 15183,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15161,
											"end": 15167,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 15123,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "448"
										},
										{
											"begin": 15123,
											"end": 15189,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15123,
											"end": 15189,
											"name": "tag",
											"source": 21,
											"value": "506"
										},
										{
											"begin": 15123,
											"end": 15189,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15199,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 15265,
											"end": 15267,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15254,
											"end": 15263,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15241,
											"end": 15247,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15199,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "461"
										},
										{
											"begin": 15199,
											"end": 15269,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15199,
											"end": 15269,
											"name": "tag",
											"source": 21,
											"value": "507"
										},
										{
											"begin": 15199,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15279,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 15347,
											"end": 15349,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15336,
											"end": 15345,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15332,
											"end": 15350,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15323,
											"end": 15329,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15279,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 15279,
											"end": 15351,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15279,
											"end": 15351,
											"name": "tag",
											"source": 21,
											"value": "508"
										},
										{
											"begin": 15279,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15399,
											"end": 15408,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15389,
											"end": 15409,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15383,
											"end": 15386,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 15372,
											"end": 15381,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15368,
											"end": 15387,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15361,
											"end": 15410,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15427,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 15498,
											"end": 15502,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15489,
											"end": 15495,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15427,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 15427,
											"end": 15503,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15427,
											"end": 15503,
											"name": "tag",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 15427,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15419,
											"end": 15503,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15419,
											"end": 15503,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14995,
											"end": 15510,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 15516,
											"end": 15829,
											"name": "tag",
											"source": 21,
											"value": "206"
										},
										{
											"begin": 15516,
											"end": 15829,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15829,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15667,
											"end": 15669,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15656,
											"end": 15665,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15652,
											"end": 15670,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15644,
											"end": 15670,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15644,
											"end": 15670,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15716,
											"end": 15725,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15710,
											"end": 15714,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15706,
											"end": 15726,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15702,
											"end": 15703,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15691,
											"end": 15700,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15687,
											"end": 15704,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15680,
											"end": 15727,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15744,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "511"
										},
										{
											"begin": 15817,
											"end": 15821,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15808,
											"end": 15814,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15744,
											"end": 15822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 15744,
											"end": 15822,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 15744,
											"end": 15822,
											"name": "tag",
											"source": 21,
											"value": "511"
										},
										{
											"begin": 15744,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15736,
											"end": 15822,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15736,
											"end": 15822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15634,
											"end": 15829,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15634,
											"end": 15829,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15634,
											"end": 15829,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15634,
											"end": 15829,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15634,
											"end": 15829,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 15835,
											"end": 16254,
											"name": "tag",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 15835,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15835,
											"end": 16254,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16041,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16024,
											"end": 16042,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16016,
											"end": 16042,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16016,
											"end": 16042,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16088,
											"end": 16097,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16078,
											"end": 16098,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16074,
											"end": 16075,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16063,
											"end": 16072,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 16076,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16052,
											"end": 16099,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16116,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "513"
										},
										{
											"begin": 16242,
											"end": 16246,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16116,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 16116,
											"end": 16247,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 16116,
											"end": 16247,
											"name": "tag",
											"source": 21,
											"value": "513"
										},
										{
											"begin": 16116,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16108,
											"end": 16247,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16108,
											"end": 16247,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16006,
											"end": 16254,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16006,
											"end": 16254,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16006,
											"end": 16254,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16006,
											"end": 16254,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 16260,
											"end": 17111,
											"name": "tag",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 16260,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16260,
											"end": 17111,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16576,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 16562,
											"end": 16571,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16558,
											"end": 16577,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16550,
											"end": 16577,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16550,
											"end": 16577,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16587,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "515"
										},
										{
											"begin": 16655,
											"end": 16656,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16644,
											"end": 16653,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16640,
											"end": 16657,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 16587,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 16587,
											"end": 16658,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 16587,
											"end": 16658,
											"name": "tag",
											"source": 21,
											"value": "515"
										},
										{
											"begin": 16587,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16705,
											"end": 16714,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16699,
											"end": 16703,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16695,
											"end": 16715,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16690,
											"end": 16692,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16668,
											"end": 16716,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16733,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 16836,
											"end": 16840,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16827,
											"end": 16833,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 16733,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "420"
										},
										{
											"begin": 16733,
											"end": 16841,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 16733,
											"end": 16841,
											"name": "tag",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 16733,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16725,
											"end": 16841,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16725,
											"end": 16841,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16888,
											"end": 16897,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16882,
											"end": 16886,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16878,
											"end": 16898,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16873,
											"end": 16875,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 16862,
											"end": 16871,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16858,
											"end": 16876,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16899,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16916,
											"end": 17022,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "517"
										},
										{
											"begin": 17017,
											"end": 17021,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17008,
											"end": 17014,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16916,
											"end": 17022,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 16916,
											"end": 17022,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 16916,
											"end": 17022,
											"name": "tag",
											"source": 21,
											"value": "517"
										},
										{
											"begin": 16916,
											"end": 17022,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16908,
											"end": 17022,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16908,
											"end": 17022,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17032,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "518"
										},
										{
											"begin": 17100,
											"end": 17102,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17089,
											"end": 17098,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17076,
											"end": 17082,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17032,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 17032,
											"end": 17104,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17032,
											"end": 17104,
											"name": "tag",
											"source": 21,
											"value": "518"
										},
										{
											"begin": 17032,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16540,
											"end": 17111,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 17117,
											"end": 17666,
											"name": "tag",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 17117,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17117,
											"end": 17666,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17330,
											"end": 17333,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17319,
											"end": 17328,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17315,
											"end": 17334,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17307,
											"end": 17334,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17307,
											"end": 17334,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17344,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "520"
										},
										{
											"begin": 17412,
											"end": 17413,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17401,
											"end": 17410,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17397,
											"end": 17414,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17388,
											"end": 17394,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 17344,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 17344,
											"end": 17415,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17344,
											"end": 17415,
											"name": "tag",
											"source": 21,
											"value": "520"
										},
										{
											"begin": 17344,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17425,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "521"
										},
										{
											"begin": 17493,
											"end": 17495,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17482,
											"end": 17491,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17469,
											"end": 17475,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 17425,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 17425,
											"end": 17497,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17425,
											"end": 17497,
											"name": "tag",
											"source": 21,
											"value": "521"
										},
										{
											"begin": 17425,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17507,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17562,
											"end": 17571,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17558,
											"end": 17576,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17549,
											"end": 17555,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17507,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "495"
										},
										{
											"begin": 17507,
											"end": 17577,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17507,
											"end": 17577,
											"name": "tag",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 17507,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17587,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "523"
										},
										{
											"begin": 17655,
											"end": 17657,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17644,
											"end": 17653,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17640,
											"end": 17658,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17587,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 17587,
											"end": 17659,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17587,
											"end": 17659,
											"name": "tag",
											"source": 21,
											"value": "523"
										},
										{
											"begin": 17587,
											"end": 17659,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17297,
											"end": 17666,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 17672,
											"end": 17950,
											"name": "tag",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 17672,
											"end": 17950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17672,
											"end": 17950,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17740,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17732,
											"end": 17741,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 17722,
											"end": 17741,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17722,
											"end": 17741,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17780,
											"end": 17784,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17772,
											"end": 17778,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17768,
											"end": 17785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17887,
											"end": 17893,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17875,
											"end": 17885,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17872,
											"end": 17894,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 17851,
											"end": 17869,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17839,
											"end": 17849,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17836,
											"end": 17870,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 17833,
											"end": 17895,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17898,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "526"
										},
										{
											"begin": 17898,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 17898,
											"end": 17911,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 17898,
											"end": 17911,
											"name": "tag",
											"source": 21,
											"value": "526"
										},
										{
											"begin": 17898,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "tag",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17933,
											"end": 17943,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 17929,
											"end": 17931,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17922,
											"end": 17944,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17712,
											"end": 17950,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17712,
											"end": 17950,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17712,
											"end": 17950,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17712,
											"end": 17950,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17712,
											"end": 17950,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 17956,
											"end": 18282,
											"name": "tag",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 17956,
											"end": 18282,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17956,
											"end": 18282,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18107,
											"end": 18125,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18099,
											"end": 18105,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18096,
											"end": 18126,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 18093,
											"end": 18095,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 18093,
											"end": 18095,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 18093,
											"end": 18095,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 18129,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "530"
										},
										{
											"begin": 18129,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 18129,
											"end": 18142,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 18129,
											"end": 18142,
											"name": "tag",
											"source": 21,
											"value": "530"
										},
										{
											"begin": 18129,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18093,
											"end": 18095,
											"name": "tag",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 18093,
											"end": 18095,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18209,
											"end": 18213,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 18205,
											"end": 18214,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18186,
											"end": 18203,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18182,
											"end": 18215,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 18174,
											"end": 18215,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18174,
											"end": 18215,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18270,
											"end": 18274,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18264,
											"end": 18268,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18260,
											"end": 18275,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18252,
											"end": 18275,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18252,
											"end": 18275,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18022,
											"end": 18282,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18022,
											"end": 18282,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18022,
											"end": 18282,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18022,
											"end": 18282,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 18288,
											"end": 18615,
											"name": "tag",
											"source": 21,
											"value": "289"
										},
										{
											"begin": 18288,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18288,
											"end": 18615,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18440,
											"end": 18458,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18432,
											"end": 18438,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18429,
											"end": 18459,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 18462,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 18462,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 18462,
											"end": 18475,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 18462,
											"end": 18475,
											"name": "tag",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 18462,
											"end": 18475,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "tag",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18542,
											"end": 18546,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 18538,
											"end": 18547,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 18531,
											"end": 18535,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 18523,
											"end": 18529,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18519,
											"end": 18536,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18515,
											"end": 18548,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 18507,
											"end": 18548,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18507,
											"end": 18548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18603,
											"end": 18607,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18597,
											"end": 18601,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18593,
											"end": 18608,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18585,
											"end": 18608,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18585,
											"end": 18608,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18355,
											"end": 18615,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18355,
											"end": 18615,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18355,
											"end": 18615,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18355,
											"end": 18615,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 18621,
											"end": 18753,
											"name": "tag",
											"source": 21,
											"value": "427"
										},
										{
											"begin": 18621,
											"end": 18753,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18621,
											"end": 18753,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18711,
											"end": 18714,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18703,
											"end": 18714,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18703,
											"end": 18714,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18741,
											"end": 18745,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18736,
											"end": 18739,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18732,
											"end": 18746,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18724,
											"end": 18746,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18724,
											"end": 18746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18693,
											"end": 18753,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18693,
											"end": 18753,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18693,
											"end": 18753,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18693,
											"end": 18753,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 18759,
											"end": 18890,
											"name": "tag",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 18759,
											"end": 18890,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18759,
											"end": 18890,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18840,
											"end": 18851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18840,
											"end": 18851,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18878,
											"end": 18882,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18873,
											"end": 18876,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18869,
											"end": 18883,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18861,
											"end": 18883,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18861,
											"end": 18883,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18830,
											"end": 18890,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18830,
											"end": 18890,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18830,
											"end": 18890,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18830,
											"end": 18890,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 18896,
											"end": 19010,
											"name": "tag",
											"source": 21,
											"value": "423"
										},
										{
											"begin": 18896,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18896,
											"end": 19010,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18997,
											"end": 19002,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18991,
											"end": 19003,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18981,
											"end": 19003,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18981,
											"end": 19003,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18970,
											"end": 19010,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18970,
											"end": 19010,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 18970,
											"end": 19010,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 18970,
											"end": 19010,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19016,
											"end": 19129,
											"name": "tag",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 19016,
											"end": 19129,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19016,
											"end": 19129,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19116,
											"end": 19121,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19110,
											"end": 19122,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19100,
											"end": 19122,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19100,
											"end": 19122,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19089,
											"end": 19129,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19089,
											"end": 19129,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19089,
											"end": 19129,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19089,
											"end": 19129,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19135,
											"end": 19233,
											"name": "tag",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 19135,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19135,
											"end": 19233,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19220,
											"end": 19225,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19214,
											"end": 19226,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19204,
											"end": 19226,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19204,
											"end": 19226,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19193,
											"end": 19233,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19193,
											"end": 19233,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19193,
											"end": 19233,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19193,
											"end": 19233,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19239,
											"end": 19338,
											"name": "tag",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 19239,
											"end": 19338,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19239,
											"end": 19338,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19325,
											"end": 19330,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19319,
											"end": 19331,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 19309,
											"end": 19331,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19309,
											"end": 19331,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19298,
											"end": 19338,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19298,
											"end": 19338,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19298,
											"end": 19338,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19298,
											"end": 19338,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19344,
											"end": 19457,
											"name": "tag",
											"source": 21,
											"value": "433"
										},
										{
											"begin": 19344,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19344,
											"end": 19457,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19446,
											"end": 19450,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19441,
											"end": 19444,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19437,
											"end": 19451,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19429,
											"end": 19451,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19429,
											"end": 19451,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19419,
											"end": 19457,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19419,
											"end": 19457,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19419,
											"end": 19457,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19419,
											"end": 19457,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19463,
											"end": 19575,
											"name": "tag",
											"source": 21,
											"value": "447"
										},
										{
											"begin": 19463,
											"end": 19575,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19463,
											"end": 19575,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19564,
											"end": 19568,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19559,
											"end": 19562,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19555,
											"end": 19569,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19547,
											"end": 19569,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19547,
											"end": 19569,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19537,
											"end": 19575,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19537,
											"end": 19575,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19537,
											"end": 19575,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19537,
											"end": 19575,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19581,
											"end": 19765,
											"name": "tag",
											"source": 21,
											"value": "425"
										},
										{
											"begin": 19581,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19581,
											"end": 19765,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19714,
											"end": 19720,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19709,
											"end": 19712,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19702,
											"end": 19721,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19754,
											"end": 19758,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19749,
											"end": 19752,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19745,
											"end": 19759,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19730,
											"end": 19759,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19730,
											"end": 19759,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19692,
											"end": 19765,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19692,
											"end": 19765,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19692,
											"end": 19765,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19692,
											"end": 19765,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19692,
											"end": 19765,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19771,
											"end": 19954,
											"name": "tag",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 19771,
											"end": 19954,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19771,
											"end": 19954,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19903,
											"end": 19909,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19898,
											"end": 19901,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19891,
											"end": 19910,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19943,
											"end": 19947,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 19938,
											"end": 19941,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19934,
											"end": 19948,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19919,
											"end": 19948,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19919,
											"end": 19948,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19881,
											"end": 19954,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 19881,
											"end": 19954,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 19881,
											"end": 19954,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19881,
											"end": 19954,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 19881,
											"end": 19954,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 19960,
											"end": 20128,
											"name": "tag",
											"source": 21,
											"value": "457"
										},
										{
											"begin": 19960,
											"end": 20128,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19960,
											"end": 20128,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20077,
											"end": 20083,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20072,
											"end": 20075,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20065,
											"end": 20084,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20117,
											"end": 20121,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20112,
											"end": 20115,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20108,
											"end": 20122,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20093,
											"end": 20122,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20093,
											"end": 20122,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20055,
											"end": 20128,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20055,
											"end": 20128,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20055,
											"end": 20128,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20055,
											"end": 20128,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20055,
											"end": 20128,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20134,
											"end": 20303,
											"name": "tag",
											"source": 21,
											"value": "470"
										},
										{
											"begin": 20134,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20134,
											"end": 20303,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20252,
											"end": 20258,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20247,
											"end": 20250,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20240,
											"end": 20259,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 20292,
											"end": 20296,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 20287,
											"end": 20290,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20283,
											"end": 20297,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 20268,
											"end": 20297,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20268,
											"end": 20297,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20303,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20303,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20303,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20303,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20230,
											"end": 20303,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20309,
											"end": 20405,
											"name": "tag",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 20309,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20309,
											"end": 20405,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20375,
											"end": 20399,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 20393,
											"end": 20398,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20375,
											"end": 20399,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 20375,
											"end": 20399,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 20375,
											"end": 20399,
											"name": "tag",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 20375,
											"end": 20399,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20364,
											"end": 20399,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20364,
											"end": 20399,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20354,
											"end": 20405,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20411,
											"end": 20501,
											"name": "tag",
											"source": 21,
											"value": "451"
										},
										{
											"begin": 20411,
											"end": 20501,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20411,
											"end": 20501,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20493,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20481,
											"end": 20494,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 20474,
											"end": 20495,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 20463,
											"end": 20495,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20463,
											"end": 20495,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20453,
											"end": 20501,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20453,
											"end": 20501,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20453,
											"end": 20501,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20453,
											"end": 20501,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20507,
											"end": 20597,
											"name": "tag",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 20507,
											"end": 20597,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20507,
											"end": 20597,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20585,
											"end": 20590,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20582,
											"end": 20583,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 20571,
											"end": 20591,
											"name": "SIGNEXTEND",
											"source": 21
										},
										{
											"begin": 20560,
											"end": 20591,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20560,
											"end": 20591,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20550,
											"end": 20597,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20550,
											"end": 20597,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20550,
											"end": 20597,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20550,
											"end": 20597,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20603,
											"end": 20679,
											"name": "tag",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 20603,
											"end": 20679,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20603,
											"end": 20679,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20668,
											"end": 20673,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 20657,
											"end": 20673,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20657,
											"end": 20673,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20647,
											"end": 20679,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20647,
											"end": 20679,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20647,
											"end": 20679,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20647,
											"end": 20679,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20685,
											"end": 20774,
											"name": "tag",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 20685,
											"end": 20774,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20685,
											"end": 20774,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20761,
											"end": 20767,
											"name": "PUSH",
											"source": 21,
											"value": "FFFF"
										},
										{
											"begin": 20754,
											"end": 20759,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20750,
											"end": 20768,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 20739,
											"end": 20768,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20739,
											"end": 20768,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20729,
											"end": 20774,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20729,
											"end": 20774,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20729,
											"end": 20774,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20729,
											"end": 20774,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20780,
											"end": 20906,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 20780,
											"end": 20906,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20780,
											"end": 20906,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20857,
											"end": 20899,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20850,
											"end": 20855,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20846,
											"end": 20900,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 20835,
											"end": 20900,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20835,
											"end": 20900,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20825,
											"end": 20906,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20825,
											"end": 20906,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20825,
											"end": 20906,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20825,
											"end": 20906,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 20912,
											"end": 21003,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 20912,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 20912,
											"end": 21003,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 20988,
											"end": 20996,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFF"
										},
										{
											"begin": 20981,
											"end": 20986,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20966,
											"end": 20997,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 21003,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 21003,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 21003,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 20956,
											"end": 21003,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21009,
											"end": 21086,
											"name": "tag",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 21009,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21009,
											"end": 21086,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21075,
											"end": 21080,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21064,
											"end": 21080,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21064,
											"end": 21080,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21054,
											"end": 21086,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21092,
											"end": 21185,
											"name": "tag",
											"source": 21,
											"value": "494"
										},
										{
											"begin": 21092,
											"end": 21185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21092,
											"end": 21185,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21168,
											"end": 21178,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21161,
											"end": 21166,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21157,
											"end": 21179,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21146,
											"end": 21179,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21146,
											"end": 21179,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21136,
											"end": 21185,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21136,
											"end": 21185,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21136,
											"end": 21185,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21136,
											"end": 21185,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21191,
											"end": 21277,
											"name": "tag",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 21191,
											"end": 21277,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21191,
											"end": 21277,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21266,
											"end": 21270,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 21259,
											"end": 21264,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21255,
											"end": 21271,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 21244,
											"end": 21271,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21244,
											"end": 21271,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21234,
											"end": 21277,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21234,
											"end": 21277,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21234,
											"end": 21277,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21234,
											"end": 21277,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21283,
											"end": 21437,
											"name": "tag",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 21283,
											"end": 21437,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21367,
											"end": 21373,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21362,
											"end": 21365,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21357,
											"end": 21360,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21344,
											"end": 21374,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 21429,
											"end": 21430,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21420,
											"end": 21426,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21415,
											"end": 21418,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21411,
											"end": 21427,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21404,
											"end": 21431,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21334,
											"end": 21437,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21334,
											"end": 21437,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21334,
											"end": 21437,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21334,
											"end": 21437,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21443,
											"end": 21750,
											"name": "tag",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 21443,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21511,
											"end": 21512,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "tag",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21535,
											"end": 21541,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21532,
											"end": 21533,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21529,
											"end": 21542,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21620,
											"end": 21621,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 21615,
											"end": 21618,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21611,
											"end": 21622,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21605,
											"end": 21623,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 21601,
											"end": 21602,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21596,
											"end": 21599,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 21592,
											"end": 21603,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21585,
											"end": 21624,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21557,
											"end": 21559,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 21554,
											"end": 21555,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21550,
											"end": 21560,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21545,
											"end": 21560,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21545,
											"end": 21560,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "562"
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "tag",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 21521,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21652,
											"end": 21658,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 21649,
											"end": 21650,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 21646,
											"end": 21659,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 21732,
											"end": 21733,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21723,
											"end": 21729,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 21718,
											"end": 21721,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 21714,
											"end": 21730,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 21707,
											"end": 21734,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "tag",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 21643,
											"end": 21645,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21492,
											"end": 21750,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21492,
											"end": 21750,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21492,
											"end": 21750,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21492,
											"end": 21750,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21492,
											"end": 21750,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21756,
											"end": 21856,
											"name": "tag",
											"source": 21,
											"value": "419"
										},
										{
											"begin": 21756,
											"end": 21856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21756,
											"end": 21856,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21824,
											"end": 21850,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 21844,
											"end": 21849,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21824,
											"end": 21850,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 21824,
											"end": 21850,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 21824,
											"end": 21850,
											"name": "tag",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 21824,
											"end": 21850,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21813,
											"end": 21850,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21813,
											"end": 21850,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21803,
											"end": 21856,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21803,
											"end": 21856,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21803,
											"end": 21856,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21803,
											"end": 21856,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21862,
											"end": 21956,
											"name": "tag",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 21862,
											"end": 21956,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21862,
											"end": 21956,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 21930,
											"end": 21950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 21944,
											"end": 21949,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 21930,
											"end": 21950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 21930,
											"end": 21950,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 21930,
											"end": 21950,
											"name": "tag",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 21930,
											"end": 21950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21919,
											"end": 21950,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21919,
											"end": 21950,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 21909,
											"end": 21956,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 21962,
											"end": 22056,
											"name": "tag",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 21962,
											"end": 22056,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 21962,
											"end": 22056,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22029,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 22044,
											"end": 22049,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 22029,
											"end": 22050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "574"
										},
										{
											"begin": 22029,
											"end": 22050,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22029,
											"end": 22050,
											"name": "tag",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 22029,
											"end": 22050,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22018,
											"end": 22050,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22018,
											"end": 22050,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22008,
											"end": 22056,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22008,
											"end": 22056,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22008,
											"end": 22056,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22008,
											"end": 22056,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22062,
											"end": 22110,
											"name": "tag",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 22062,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22095,
											"end": 22104,
											"name": "INVALID",
											"source": 21
										},
										{
											"begin": 22116,
											"end": 22218,
											"name": "tag",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 22116,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22116,
											"end": 22218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22208,
											"end": 22210,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 22204,
											"end": 22211,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 22199,
											"end": 22201,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 22192,
											"end": 22197,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 22188,
											"end": 22202,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 22184,
											"end": 22212,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 22174,
											"end": 22212,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22174,
											"end": 22212,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22164,
											"end": 22218,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22164,
											"end": 22218,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22164,
											"end": 22218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22164,
											"end": 22218,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22224,
											"end": 22320,
											"name": "tag",
											"source": 21,
											"value": "574"
										},
										{
											"begin": 22224,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22224,
											"end": 22320,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22307,
											"end": 22312,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22302,
											"end": 22305,
											"name": "PUSH",
											"source": 21,
											"value": "E8"
										},
										{
											"begin": 22298,
											"end": 22313,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 22277,
											"end": 22313,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22277,
											"end": 22313,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22267,
											"end": 22320,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22267,
											"end": 22320,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22267,
											"end": 22320,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22267,
											"end": 22320,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22326,
											"end": 22420,
											"name": "tag",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 22326,
											"end": 22420,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22326,
											"end": 22420,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22407,
											"end": 22412,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22403,
											"end": 22405,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 22399,
											"end": 22413,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 22378,
											"end": 22413,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22378,
											"end": 22413,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22368,
											"end": 22420,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 22368,
											"end": 22420,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 22368,
											"end": 22420,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22368,
											"end": 22420,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22426,
											"end": 22548,
											"name": "tag",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 22426,
											"end": 22548,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22499,
											"end": 22523,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 22517,
											"end": 22522,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22499,
											"end": 22523,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "414"
										},
										{
											"begin": 22499,
											"end": 22523,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22499,
											"end": 22523,
											"name": "tag",
											"source": 21,
											"value": "580"
										},
										{
											"begin": 22499,
											"end": 22523,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22492,
											"end": 22497,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22489,
											"end": 22524,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 22538,
											"end": 22539,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22536,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 22528,
											"end": 22540,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "tag",
											"source": 21,
											"value": "581"
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22469,
											"end": 22548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22469,
											"end": 22548,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22554,
											"end": 22670,
											"name": "tag",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 22554,
											"end": 22670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22624,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "583"
										},
										{
											"begin": 22639,
											"end": 22644,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22624,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "451"
										},
										{
											"begin": 22624,
											"end": 22645,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22624,
											"end": 22645,
											"name": "tag",
											"source": 21,
											"value": "583"
										},
										{
											"begin": 22624,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22617,
											"end": 22622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22614,
											"end": 22646,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 22660,
											"end": 22661,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22657,
											"end": 22658,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 22650,
											"end": 22662,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "tag",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22594,
											"end": 22670,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22594,
											"end": 22670,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22676,
											"end": 22794,
											"name": "tag",
											"source": 21,
											"value": "308"
										},
										{
											"begin": 22676,
											"end": 22794,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22747,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "586"
										},
										{
											"begin": 22763,
											"end": 22768,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22747,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "549"
										},
										{
											"begin": 22747,
											"end": 22769,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22747,
											"end": 22769,
											"name": "tag",
											"source": 21,
											"value": "586"
										},
										{
											"begin": 22747,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22740,
											"end": 22745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22737,
											"end": 22770,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "587"
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 22784,
											"end": 22785,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22781,
											"end": 22782,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 22774,
											"end": 22786,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "tag",
											"source": 21,
											"value": "587"
										},
										{
											"begin": 22727,
											"end": 22729,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22717,
											"end": 22794,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22717,
											"end": 22794,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22800,
											"end": 22920,
											"name": "tag",
											"source": 21,
											"value": "312"
										},
										{
											"begin": 22800,
											"end": 22920,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22872,
											"end": 22895,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 22889,
											"end": 22894,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22872,
											"end": 22895,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 22872,
											"end": 22895,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22872,
											"end": 22895,
											"name": "tag",
											"source": 21,
											"value": "589"
										},
										{
											"begin": 22872,
											"end": 22895,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22865,
											"end": 22870,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22862,
											"end": 22896,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 22910,
											"end": 22911,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 22907,
											"end": 22908,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 22900,
											"end": 22912,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "tag",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 22852,
											"end": 22854,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22842,
											"end": 22920,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22842,
											"end": 22920,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 22926,
											"end": 23046,
											"name": "tag",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 22926,
											"end": 23046,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22998,
											"end": 23021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "592"
										},
										{
											"begin": 23015,
											"end": 23020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22998,
											"end": 23021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 22998,
											"end": 23021,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 22998,
											"end": 23021,
											"name": "tag",
											"source": 21,
											"value": "592"
										},
										{
											"begin": 22998,
											"end": 23021,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22991,
											"end": 22996,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 22988,
											"end": 23022,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "593"
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 23036,
											"end": 23037,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23033,
											"end": 23034,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 23026,
											"end": 23038,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "tag",
											"source": 21,
											"value": "593"
										},
										{
											"begin": 22978,
											"end": 22980,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 22968,
											"end": 23046,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 22968,
											"end": 23046,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 23052,
											"end": 23174,
											"name": "tag",
											"source": 21,
											"value": "343"
										},
										{
											"begin": 23052,
											"end": 23174,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23125,
											"end": 23149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 23143,
											"end": 23148,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23125,
											"end": 23149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 23125,
											"end": 23149,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 23125,
											"end": 23149,
											"name": "tag",
											"source": 21,
											"value": "595"
										},
										{
											"begin": 23125,
											"end": 23149,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23118,
											"end": 23123,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23115,
											"end": 23150,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 23105,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "596"
										},
										{
											"begin": 23105,
											"end": 23107,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 23164,
											"end": 23165,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23161,
											"end": 23162,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 23154,
											"end": 23166,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 23105,
											"end": 23107,
											"name": "tag",
											"source": 21,
											"value": "596"
										},
										{
											"begin": 23105,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23095,
											"end": 23174,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23095,
											"end": 23174,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 23180,
											"end": 23300,
											"name": "tag",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 23180,
											"end": 23300,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23252,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "598"
										},
										{
											"begin": 23269,
											"end": 23274,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23252,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 23252,
											"end": 23275,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 23252,
											"end": 23275,
											"name": "tag",
											"source": 21,
											"value": "598"
										},
										{
											"begin": 23252,
											"end": 23275,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23245,
											"end": 23250,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23242,
											"end": 23276,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 23232,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "599"
										},
										{
											"begin": 23232,
											"end": 23234,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 23290,
											"end": 23291,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23287,
											"end": 23288,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 23280,
											"end": 23292,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 23232,
											"end": 23234,
											"name": "tag",
											"source": 21,
											"value": "599"
										},
										{
											"begin": 23232,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23222,
											"end": 23300,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23222,
											"end": 23300,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 23306,
											"end": 23428,
											"name": "tag",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 23306,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23379,
											"end": 23403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "601"
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23379,
											"end": 23403,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 23379,
											"end": 23403,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 23379,
											"end": 23403,
											"name": "tag",
											"source": 21,
											"value": "601"
										},
										{
											"begin": 23379,
											"end": 23403,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23372,
											"end": 23377,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23369,
											"end": 23404,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 23359,
											"end": 23361,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 23359,
											"end": 23361,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 23418,
											"end": 23419,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23415,
											"end": 23416,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 23408,
											"end": 23420,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 23359,
											"end": 23361,
											"name": "tag",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 23359,
											"end": 23361,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23349,
											"end": 23428,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23349,
											"end": 23428,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 23434,
											"end": 23552,
											"name": "tag",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 23434,
											"end": 23552,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23505,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 23521,
											"end": 23526,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23505,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "558"
										},
										{
											"begin": 23505,
											"end": 23527,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 23505,
											"end": 23527,
											"name": "tag",
											"source": 21,
											"value": "604"
										},
										{
											"begin": 23505,
											"end": 23527,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23498,
											"end": 23503,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 23495,
											"end": 23528,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 23485,
											"end": 23487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "605"
										},
										{
											"begin": 23485,
											"end": 23487,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 23542,
											"end": 23543,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 23539,
											"end": 23540,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 23532,
											"end": 23544,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 23485,
											"end": 23487,
											"name": "tag",
											"source": 21,
											"value": "605"
										},
										{
											"begin": 23485,
											"end": 23487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 23475,
											"end": 23552,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 23475,
											"end": 23552,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"stateVariables\":{\"amountOutCached\":{\"details\":\"Transient storage variable used to check a safety condition in exact output swaps.\"}},\"title\":\"Provides quotes for swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Allows getting the expected amount out or amount in for a given swap without executing the swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":\"QuoterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xd43c2355a7d5659b1fa1fb322647f760722d73a6a5e62ede53d426f3b406b795\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://657920576878ca936157383782a97b74166c303a3932c0d72eac3a2d057c3a96\",\"dweb:/ipfs/Qma71Ska1ZbPBnYpeE5S2EAeEtwGfHEMHo3SnDwY1fVmm5\"]},\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol\":{\"keccak256\":\"0x7e931f0cd34811851031c4f1318f59b4a4b427a2d2e2968b8e5ed87a9f7f89d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://63a8d7dcdd081004356b39e1b8e19ee56b02b3abd3e4165781bde1a100a35bed\",\"dweb:/ipfs/QmdfpYkMxoaeEd646aSioLZcPodnCnpZy9Ny4j98uAba2J\"]},\".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol\":{\"keccak256\":\"0x4498d65850fa2954aabf326bc61fdd5801b25e6f1af4766d77b8610105a9d621\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6642216c5a36919ef38eb6e7457a48ac7bb1b5caee87276f14608bc2f602edf0\",\"dweb:/ipfs/QmSPLBzwzSgcv2sY4g9yRYKTdjnjSqrZy6MfS7yu7mVbo8\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd\",\"dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":{\"keccak256\":\"0x45df43e95351dc152cecc0c4aaa9303f322434cd4c3981464879f55b75462220\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://855519ed3cd5f22b4b05f7f715414828bdca8d7e25ea71b4cde47a9694a8d754\",\"dweb:/ipfs/QmWpngV7EQkBSMi1JYwpLWBZLGfMTESCRypnmmhPqwksRA\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"@uniswap/v3-core/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x2035bacd76333baa4ef2bbd6423561638e1b7e97cb19be5b4d61feeea3340364\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://55da2e8d44c094b9aa1a40577f9ff32605516ae45ad54e799ec9d570d007a206\",\"dweb:/ipfs/QmakgjThKgfBTaj6Vvf54oKkxeHqgxKFmyiVbcjstsGDBF\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 170,
								"contract": ".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol:QuoterV2",
								"label": "amountOutCached",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Allows getting the expected amount out or amount in for a given swap without executing the swap",
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":376:4201  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":376:4201  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206c531eef0ffd08e421ee18f94f007ce7e266f1cee291b58f7bcfeba54cd520ce64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c531eef0ffd08e421ee18f94f007ce7e266f1cee291b58f7bcfeba54cd520ce64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x531EEF0FFD08E421EE18F94F00 PUSH29 0xE7E266F1CEE291B58F7BCFEBA54CD520CE64736F6C6343000706003300 ",
							"sourceMap": "376:3825:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c531eef0ffd08e421ee18f94f007ce7e266f1cee291b58f7bcfeba54cd520ce64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x531EEF0FFD08E421EE18F94F00 PUSH29 0xE7E266F1CEE291B58F7BCFEBA54CD520CE64736F6C6343000706003300 ",
							"sourceMap": "376:3825:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"slice(bytes memory,uint256,uint256)": "infinite",
								"toAddress(bytes memory,uint256)": "infinite",
								"toUint24(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c531eef0ffd08e421ee18f94f007ce7e266f1cee291b58f7bcfeba54cd520ce64736f6c63430007060033",
									".code": [
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":234:1470  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":234:1470  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d50255838a5ea7b88bf23b6ce45cdf57bda69c9127e24f7a96acdbeecd454f064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d50255838a5ea7b88bf23b6ce45cdf57bda69c9127e24f7a96acdbeecd454f064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE POP 0x25 PC CODESIZE 0xA5 0xEA PUSH28 0x88BF23B6CE45CDF57BDA69C9127E24F7A96ACDBEECD454F064736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "234:1236:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d50255838a5ea7b88bf23b6ce45cdf57bda69c9127e24f7a96acdbeecd454f064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE POP 0x25 PC CODESIZE 0xA5 0xEA PUSH28 0x88BF23B6CE45CDF57BDA69C9127E24F7A96ACDBEECD454F064736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "234:1236:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 234,
									"end": 1470,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d50255838a5ea7b88bf23b6ce45cdf57bda69c9127e24f7a96acdbeecd454f064736f6c63430007060033",
									".code": [
										{
											"begin": 234,
											"end": 1470,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 234,
											"end": 1470,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":\"CallbackValidation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0x490c80ca7f4a0ee0514041ddec0867e8a52b24febf1670991797af8fed9f3eec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f775ba8ad52041a351fbd7000801266d5a10be2f1a53d13c6c9862b2baa935bd\",\"dweb:/ipfs/Qmcaxyr6VutZeaymeBNVcZrBVAHhyJ11sjhWpgj2GX6D5K\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"Path": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADDR_SIZE": {
								"details": "The length of the bytes encoded address"
							},
							"FEE_SIZE": {
								"details": "The length of the bytes encoded fee"
							},
							"MULTIPLE_POOLS_MIN_LENGTH": {
								"details": "The minimum length of an encoding that contains 2 or more pools"
							},
							"NEXT_OFFSET": {
								"details": "The offset of a single token address and pool fee"
							},
							"POP_OFFSET": {
								"details": "The offset of an encoded pool key"
							}
						},
						"title": "Functions for manipulating path data for multihop swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":164:2786  library Path {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":164:2786  library Path {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209d3039260215fcae11e006511dda6cc7d3b5c95860d235169d32d92a93c776c664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d3039260215fcae11e006511dda6cc7d3b5c95860d235169d32d92a93c776c664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 ADDRESS CODECOPY 0x26 MUL ISZERO 0xFC 0xAE GT 0xE0 MOD MLOAD SAR 0xDA PUSH13 0xC7D3B5C95860D235169D32D92A SWAP4 0xC7 PUSH23 0xC664736F6C634300070600330000000000000000000000 ",
							"sourceMap": "164:2622:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d3039260215fcae11e006511dda6cc7d3b5c95860d235169d32d92a93c776c664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 ADDRESS CODECOPY 0x26 MUL ISZERO 0xFC 0xAE GT 0xE0 MOD MLOAD SAR 0xDA PUSH13 0xC7D3B5C95860D235169D32D92A SWAP4 0xC7 PUSH23 0xC664736F6C634300070600330000000000000000000000 ",
							"sourceMap": "164:2622:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeFirstPool(bytes memory)": "infinite",
								"getFirstPool(bytes memory)": "infinite",
								"hasMultiplePools(bytes memory)": "infinite",
								"numPools(bytes memory)": "infinite",
								"skipToken(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d3039260215fcae11e006511dda6cc7d3b5c95860d235169d32d92a93c776c664736f6c63430007060033",
									".code": [
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADDR_SIZE\":{\"details\":\"The length of the bytes encoded address\"},\"FEE_SIZE\":{\"details\":\"The length of the bytes encoded fee\"},\"MULTIPLE_POOLS_MIN_LENGTH\":{\"details\":\"The minimum length of an encoding that contains 2 or more pools\"},\"NEXT_OFFSET\":{\"details\":\"The offset of a single token address and pool fee\"},\"POP_OFFSET\":{\"details\":\"The offset of an encoded pool key\"}},\"title\":\"Functions for manipulating path data for multihop swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":\"Path\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1819  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":167:1819  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb182b71cb222791702a9df86b72824f0ea09b9a00280acddbda44df19f5cc8d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb182b71cb222791702a9df86b72824f0ea09b9a00280acddbda44df19f5cc8d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB XOR 0x2B PUSH18 0xCB222791702A9DF86B72824F0EA09B9A0028 EXP 0xCD 0xDB 0xDA DIFFICULTY 0xDF NOT CREATE2 0xCC DUP14 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "167:1652:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb182b71cb222791702a9df86b72824f0ea09b9a00280acddbda44df19f5cc8d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB XOR 0x2B PUSH18 0xCB222791702A9DF86B72824F0EA09B9A0028 EXP 0xCD 0xDB 0xDA DIFFICULTY 0xDF NOT CREATE2 0xCC DUP14 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "167:1652:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1819,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb182b71cb222791702a9df86b72824f0ea09b9a00280acddbda44df19f5cc8d64736f6c63430007060033",
									".code": [
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1819,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f375d0e6d5ea3674e1aa6f112b021e9a86721a6a2f3cb22d673378b30cf0e840\",\"dweb:/ipfs/QmWJir2qnJyp963mU6U3jEEx9i3H3V5BgKawAfSnG1pC8w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol": {
				"PoolTicksCounter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":139:4147  library PoolTicksCounter {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":139:4147  library PoolTicksCounter {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122004f3ded94e328e3819b8673ecc165618f0294db85d23f60f77675d7583746cae64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004f3ded94e328e3819b8673ecc165618f0294db85d23f60f77675d7583746cae64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV RETURN 0xDE 0xD9 0x4E ORIGIN DUP15 CODESIZE NOT 0xB8 PUSH8 0x3ECC165618F0294D 0xB8 0x5D 0x23 0xF6 0xF PUSH24 0x675D7583746CAE64736F6C63430007060033000000000000 ",
							"sourceMap": "139:4008:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004f3ded94e328e3819b8673ecc165618f0294db85d23f60f77675d7583746cae64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV RETURN 0xDE 0xD9 0x4E ORIGIN DUP15 CODESIZE NOT 0xB8 PUSH8 0x3ECC165618F0294D 0xB8 0x5D 0x23 0xF6 0xF PUSH24 0x675D7583746CAE64736F6C63430007060033000000000000 ",
							"sourceMap": "139:4008:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"countInitializedTicksCrossed(contract IUniswapV3Pool,int24,int24)": "infinite",
								"countOneBits(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 139,
									"end": 4147,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004f3ded94e328e3819b8673ecc165618f0294db85d23f60f77675d7583746cae64736f6c63430007060033",
									".code": [
										{
											"begin": 139,
											"end": 4147,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 139,
											"end": 4147,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":\"PoolTicksCounter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol\":{\"keccak256\":\"0x45df43e95351dc152cecc0c4aaa9303f322434cd4c3981464879f55b75462220\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://855519ed3cd5f22b4b05f7f715414828bdca8d7e25ea71b4cde47a9694a8d754\",\"dweb:/ipfs/QmWpngV7EQkBSMi1JYwpLWBZLGfMTESCRypnmmhPqwksRA\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0f1e7cef8dabe7657e151ca66e216e9fa2eaac7dd9389b08208036a5483f00464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f1e7cef8dabe7657e151ca66e216e9fa2eaac7dd9389b08208036a5483f00464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CALL 0xE7 0xCE 0xF8 0xDA 0xBE PUSH23 0x57E151CA66E216E9FA2EAAC7DD9389B08208036A5483F0 DIV PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f1e7cef8dabe7657e151ca66e216e9fa2eaac7dd9389b08208036a5483f00464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CALL 0xE7 0xCE 0xF8 0xDA 0xBE PUSH23 0x57E151CA66E216E9FA2EAAC7DD9389B08208036A5483F0 DIV PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "INVALID",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0f1e7cef8dabe7657e151ca66e216e9fa2eaac7dd9389b08208036a5483f00464736f6c63430007060033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":165:1047  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":165:1047  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122057f57b7f98f9a520456f4cb91b804d9389a70af9d5c556f10fcde052a78b357f64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057f57b7f98f9a520456f4cb91b804d9389a70af9d5c556f10fcde052a78b357f64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI CREATE2 PUSH28 0x7F98F9A520456F4CB91B804D9389A70AF9D5C556F10FCDE052A78B35 PUSH32 0x64736F6C63430007060033000000000000000000000000000000000000000000 ",
							"sourceMap": "165:882:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057f57b7f98f9a520456f4cb91b804d9389a70af9d5c556f10fcde052a78b357f64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI CREATE2 PUSH28 0x7F98F9A520456F4CB91B804D9389A70AF9D5C556F10FCDE052A78B35 PUSH32 0x64736F6C63430007060033000000000000000000000000000000000000000000 ",
							"sourceMap": "165:882:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 165,
									"end": 1047,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057f57b7f98f9a520456f4cb91b804d9389a70af9d5c556f10fcde052a78b357f64736f6c63430007060033",
									".code": [
										{
											"begin": 165,
											"end": 1047,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 165,
											"end": 1047,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickBitmap.sol\":331:4111  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickBitmap.sol\":331:4111  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f568fb03540418f0197668a8f596225ae43eb5e8f0bb9733f8f45cfbeaac3f3b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f568fb03540418f0197668a8f596225ae43eb5e8f0bb9733f8f45cfbeaac3f3b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH9 0xFB03540418F0197668 0xA8 CREATE2 SWAP7 0x22 GAS 0xE4 RETURNDATACOPY 0xB5 0xE8 CREATE 0xBB SWAP8 CALLER 0xF8 DELEGATECALL 0x5C 0xFB 0xEA 0xAC EXTCODEHASH EXTCODESIZE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "331:3780:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f568fb03540418f0197668a8f596225ae43eb5e8f0bb9733f8f45cfbeaac3f3b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH9 0xFB03540418F0197668 0xA8 CREATE2 SWAP7 0x22 GAS 0xE4 RETURNDATACOPY 0xB5 0xE8 CREATE 0xBB SWAP8 CALLER 0xF8 DELEGATECALL 0x5C 0xFB 0xEA 0xAC EXTCODEHASH EXTCODESIZE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "331:3780:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "INVALID",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 331,
									"end": 4111,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f568fb03540418f0197668a8f596225ae43eb5e8f0bb9733f8f45cfbeaac3f3b64736f6c63430007060033",
									".code": [
										{
											"begin": 331,
											"end": 4111,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 331,
											"end": 4111,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"@uniswap/v3-core/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x2035bacd76333baa4ef2bbd6423561638e1b7e97cb19be5b4d61feeea3340364\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://55da2e8d44c094b9aa1a40577f9ff32605516ae45ad54e799ec9d570d007a206\",\"dweb:/ipfs/QmakgjThKgfBTaj6Vvf54oKkxeHqgxKFmyiVbcjstsGDBF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							46
						],
						"PeripheryImmutableState": [
							30
						]
					},
					"id": 31,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:0"
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
							"file": "../interfaces/IPeripheryImmutableState.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 47,
							"src": "70:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 46,
										"src": "252:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$46",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "252:24:0"
								}
							],
							"contractDependencies": [
								46
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "124:83:0",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								46
							],
							"name": "PeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										39
									],
									"constant": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "283:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 9,
									"mutability": "immutable",
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 8,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "353:8:0"
									},
									"scope": 30,
									"src": "328:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										45
									],
									"constant": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "375:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 13,
									"mutability": "immutable",
									"name": "WETH9",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 12,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "445:8:0"
									},
									"scope": 30,
									"src": "420:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "512:59:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 21,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "532:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "522:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "522:18:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "550:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 25,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "558:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "550:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "550:14:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "478:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:34:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:0"
									},
									"scope": 30,
									"src": "466:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 31,
							"src": "207:366:0"
						}
					],
					"src": "45:529:0"
				},
				"id": 0
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							46
						]
					},
					"id": 47,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "71:91:1",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "IPeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "203:57:1",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:1"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "307:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:1"
									},
									"scope": 46,
									"src": "265:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "322:40:1",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:1"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "407:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:9:1"
									},
									"scope": 46,
									"src": "367:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 47,
							"src": "162:256:1"
						}
					],
					"src": "45:374:1"
				},
				"id": 1
			},
			".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
					"exportedSymbols": {
						"IQuoterV2": [
							137
						]
					},
					"id": 138,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 48,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"id": 49,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "91:451:2",
								"text": "@title QuoterV2 Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 137,
							"linearizedBaseContracts": [
								137
							],
							"name": "IQuoterV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "568:618:2",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "cdca1753",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1216:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1216:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1235:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:37:2"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1300:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1331:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 59,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1331:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 60,
													"nodeType": "ArrayTypeName",
													"src": "1331:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1383:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 62,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1383:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 63,
													"nodeType": "ArrayTypeName",
													"src": "1383:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1440:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:183:2"
									},
									"scope": 137,
									"src": "1191:279:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactInputSingleParams",
									"id": 79,
									"members": [
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1521:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 69,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1521:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1546:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1546:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1572:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 73,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1572:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1598:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 75,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1598:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1618:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 77,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactInputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 137,
									"src": "1476:174:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1656:790:2",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "c6a5026a",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2482:41:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 81,
													"name": "QuoteExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 79,
													"src": "2482:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:43:2"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2572:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2603:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 86,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2642:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 88,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2642:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2686:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:157:2"
									},
									"scope": 137,
									"src": "2451:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "2722:654:2",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "2f80bb1d",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3407:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3407:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3426:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:38:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3492:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3522:38:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 102,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "3522:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 103,
													"nodeType": "ArrayTypeName",
													"src": "3522:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3574:43:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 105,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "3574:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 106,
													"nodeType": "ArrayTypeName",
													"src": "3574:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3631:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:182:2"
									},
									"scope": 137,
									"src": "3381:280:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactOutputSingleParams",
									"id": 122,
									"members": [
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3713:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3713:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 115,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3738:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 114,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3738:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 117,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3764:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3764:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3788:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 118,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3788:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 122,
											"src": "3808:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 120,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3808:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactOutputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 137,
									"src": "3667:173:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3846:838:2",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "bd21704a",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4721:42:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 124,
													"name": "QuoteExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "4721:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:44:2"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4812:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4842:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 129,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4881:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 131,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4881:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "4925:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4798:156:2"
									},
									"scope": 137,
									"src": "4689:266:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 138,
							"src": "542:4415:2"
						}
					],
					"src": "45:4913:2"
				},
				"id": 2
			},
			".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/lens/QuoterV2.sol",
					"exportedSymbols": {
						"BitMath": [
							2319
						],
						"BytesLib": [
							989
						],
						"CallbackValidation": [
							1051
						],
						"IPeripheryImmutableState": [
							46
						],
						"IQuoterV2": [
							137
						],
						"IUniswapV3Pool": [
							1606
						],
						"IUniswapV3PoolActions": [
							1716
						],
						"IUniswapV3PoolDerivedState": [
							1747
						],
						"IUniswapV3PoolEvents": [
							1866
						],
						"IUniswapV3PoolImmutables": [
							1906
						],
						"IUniswapV3PoolOwnerActions": [
							1932
						],
						"IUniswapV3PoolState": [
							2040
						],
						"IUniswapV3SwapCallback": [
							1620
						],
						"Path": [
							1184
						],
						"PeripheryImmutableState": [
							30
						],
						"PoolAddress": [
							1276
						],
						"PoolTicksCounter": [
							1584
						],
						"QuoterV2": [
							870
						],
						"SafeCast": [
							2389
						],
						"TickBitmap": [
							2645
						],
						"TickMath": [
							3180
						]
					},
					"id": 871,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 139,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:3"
						},
						{
							"id": 140,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "69:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/SafeCast.sol",
							"file": "@uniswap/v3-core/contracts/libraries/SafeCast.sol",
							"id": 141,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 2390,
							"src": "90:59:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 142,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 3181,
							"src": "150:59:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickBitmap.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickBitmap.sol",
							"id": 143,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 2646,
							"src": "210:61:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 144,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1607,
							"src": "272:66:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 145,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1621,
							"src": "339:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/interfaces/IQuoterV2.sol",
							"file": "../interfaces/IQuoterV2.sol",
							"id": 146,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 138,
							"src": "424:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol",
							"file": "../base/PeripheryImmutableState.sol",
							"id": 147,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 31,
							"src": "462:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol",
							"file": "../libraries/Path.sol",
							"id": 148,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1185,
							"src": "508:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "../libraries/PoolAddress.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1277,
							"src": "540:38:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
							"file": "../libraries/CallbackValidation.sol",
							"id": 150,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1052,
							"src": "579:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol",
							"file": "../libraries/PoolTicksCounter.sol",
							"id": 151,
							"nodeType": "ImportDirective",
							"scope": 871,
							"sourceUnit": 1585,
							"src": "625:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IQuoterV2",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 137,
										"src": "1004:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IQuoterV2_$137",
											"typeString": "contract IQuoterV2"
										}
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1004:9:3"
								},
								{
									"baseName": {
										"id": 155,
										"name": "IUniswapV3SwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1620,
										"src": "1015:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$1620",
											"typeString": "contract IUniswapV3SwapCallback"
										}
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "1015:22:3"
								},
								{
									"baseName": {
										"id": 157,
										"name": "PeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 30,
										"src": "1039:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PeripheryImmutableState_$30",
											"typeString": "contract PeripheryImmutableState"
										}
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "1039:23:3"
								}
							],
							"contractDependencies": [
								30,
								46,
								137,
								1620
							],
							"contractKind": "contract",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "670:313:3",
								"text": "@title Provides quotes for swaps\n @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n the swap and check the amounts in the callback."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870,
								30,
								46,
								1620,
								137
							],
							"name": "QuoterV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 161,
									"libraryName": {
										"id": 159,
										"name": "Path",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1184,
										"src": "1075:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Path_$1184",
											"typeString": "library Path"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1069:21:3",
									"typeName": {
										"id": 160,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1084:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"id": 164,
									"libraryName": {
										"id": 162,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2389,
										"src": "1101:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$2389",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1095:27:3",
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1114:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "PoolTicksCounter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1584,
										"src": "1133:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PoolTicksCounter_$1584",
											"typeString": "library PoolTicksCounter"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1127:42:3",
									"typeName": {
										"id": 166,
										"name": "IUniswapV3Pool",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1606,
										"src": "1154:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
											"typeString": "contract IUniswapV3Pool"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1175:91:3",
										"text": "@dev Transient storage variable used to check a safety condition in exact output swaps."
									},
									"id": 170,
									"mutability": "mutable",
									"name": "amountOutCached",
									"nodeType": "VariableDeclaration",
									"scope": 870,
									"src": "1271:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1397:2:3",
										"statements": []
									},
									"id": 182,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 177,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "1379:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 178,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "1389:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 179,
											"modifierName": {
												"id": 176,
												"name": "PeripheryImmutableState",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 30,
												"src": "1355:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$30_$",
													"typeString": "type(contract PeripheryImmutableState)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1355:41:3"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1321:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1339:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:34:3"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:3"
									},
									"scope": 870,
									"src": "1309:90:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1534:120:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 196,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1593:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 199,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "1625:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 200,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "1633:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 201,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "1641:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"expression": {
																			"id": 197,
																			"name": "PoolAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "1602:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1276_$",
																				"typeString": "type(library PoolAddress)"
																			}
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getPoolKey",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1228,
																		"src": "1602:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$1197_memory_ptr_$",
																			"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1602:43:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																],
																"expression": {
																	"id": 194,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "1566:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1276_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "computeAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1275,
																"src": "1566:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1197_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1566:80:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 193,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "1551:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 192,
												"id": 205,
												"nodeType": "Return",
												"src": "1544:103:3"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1431:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1455:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1479:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 187,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1479:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:74:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1518:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 190,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1606,
													"src": "1518:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:16:3"
									},
									"scope": 870,
									"src": "1405:249:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1619
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1848:1460:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 219,
																	"name": "amount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1866:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1881:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1866:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "amount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "1886:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1901:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1886:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1866:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1858:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1858:45:3"
											},
											{
												"assignments": [
													229,
													231,
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "tokenIn",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "1977:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 228,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1977:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "tokenOut",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "1994:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 230,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1994:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2012:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 232,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "2012:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 234,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2026:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decodeFirstPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1150,
														"src": "2026:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (address,address,uint24)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2026:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
														"typeString": "tuple(address,address,uint24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1976:72:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2092:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2101:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2110:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2120:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 238,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "2058:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$1051_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1019,
														"src": "2058:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "function (address,address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2058:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "2058:66:3"
											},
											{
												"assignments": [
													248,
													250,
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "isExactInput",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2136:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2136:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "amountToPay",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2155:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2155:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "amountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2176:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2176:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 253,
															"name": "amount0Delta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2214:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2214:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 269,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "2336:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 270,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2347:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2336:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 274,
																		"name": "amount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 212,
																		"src": "2364:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2356:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 272,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2356:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2356:21:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "2387:13:3",
																		"subExpression": {
																			"id": 278,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "2388:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2379:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2379:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2379:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 281,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2335:67:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2214:188:3",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 256,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "2250:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 257,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "2260:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2250:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 261,
																		"name": "amount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "2278:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2270:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 259,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2270:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2270:21:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "2301:13:3",
																		"subExpression": {
																			"id": 265,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "2302:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2293:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 263,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2293:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2293:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 268,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2249:67:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2135:267:3"
											},
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2413:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 284,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1606,
															"src": "2413:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [
														{
															"id": 287,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2452:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2462:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 286,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2435:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2435:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2413:53:3"
											},
											{
												"assignments": [
													293,
													295,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "sqrtPriceX96After",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2477:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 292,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2477:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "tickAfter",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2504:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 294,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2504:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 299,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 296,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2533:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1953,
														"src": "2533:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:69:3"
											},
											{
												"condition": {
													"id": 300,
													"name": "isExactInput",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2560:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 314,
													"nodeType": "Block",
													"src": "2851:451:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 303,
																	"name": "amountOutCached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "2970:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2989:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2970:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "2966:68:3",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 307,
																				"name": "amountReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "3000:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 308,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "3018:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3000:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 306,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "2992:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2992:42:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 311,
																"nodeType": "ExpressionStatement",
																"src": "2992:42:3"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3057:235:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3075:22:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3092:4:3",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3086:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3086:11:3"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "3079:3:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "3121:3:3"
																				},
																				{
																					"name": "amountToPay",
																					"nodeType": "YulIdentifier",
																					"src": "3126:11:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3114:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:24:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:24:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3166:3:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3171:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3162:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3162:14:3"
																				},
																				{
																					"name": "sqrtPriceX96After",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3155:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3155:41:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3155:41:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3224:3:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3229:4:3",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3220:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3220:14:3"
																				},
																				{
																					"name": "tickAfter",
																					"nodeType": "YulIdentifier",
																					"src": "3236:9:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3213:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3213:33:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3213:33:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3275:2:3",
																					"type": "",
																					"value": "96"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:15:3"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 250,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3126:11:3",
																	"valueSize": 1
																},
																{
																	"declaration": 293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3178:17:3",
																	"valueSize": 1
																},
																{
																	"declaration": 295,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3236:9:3",
																	"valueSize": 1
																}
															],
															"id": 313,
															"nodeType": "InlineAssembly",
															"src": "3048:244:3"
														}
													]
												},
												"id": 315,
												"nodeType": "IfStatement",
												"src": "2556:746:3",
												"trueBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "2574:271:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2597:238:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2615:22:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2632:4:3",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2626:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:11:3"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "2619:3:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:3"
																				},
																				{
																					"name": "amountReceived",
																					"nodeType": "YulIdentifier",
																					"src": "2666:14:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2654:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2654:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2654:27:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "2709:3:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2714:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2705:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2705:14:3"
																				},
																				{
																					"name": "sqrtPriceX96After",
																					"nodeType": "YulIdentifier",
																					"src": "2721:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2698:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2698:41:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2698:41:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "2767:3:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2772:4:3",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2763:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2763:14:3"
																				},
																				{
																					"name": "tickAfter",
																					"nodeType": "YulIdentifier",
																					"src": "2779:9:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2756:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2756:33:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2756:33:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "2813:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:2:3",
																					"type": "",
																					"value": "96"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:15:3"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 252,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2666:14:3",
																	"valueSize": 1
																},
																{
																	"declaration": 293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2721:17:3",
																	"valueSize": 1
																},
																{
																	"declaration": 295,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2779:9:3",
																	"valueSize": 1
																}
															],
															"id": 301,
															"nodeType": "InlineAssembly",
															"src": "2588:247:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1660:38:3",
										"text": "@inheritdoc IUniswapV3SwapCallback"
									},
									"functionSelector": "fa461e33",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1839:8:3"
									},
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1743:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 209,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1772:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 211,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1772:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1801:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1801:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:91:3"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1848:0:3"
									},
									"scope": 870,
									"src": "1703:1605:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "3592:309:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 329,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3606:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3606:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3936",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3623:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "3606:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 354,
												"nodeType": "IfStatement",
												"src": "3602:231:3",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "3627:206:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 333,
																		"name": "reason",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "3645:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3645:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3638",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3661:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_68_by_1",
																		"typeString": "int_const 68"
																	},
																	"value": "68"
																},
																"src": "3645:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 341,
															"nodeType": "IfStatement",
															"src": "3641:50:3",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e6578706563746564206572726f72",
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3672:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			},
																			"value": "Unexpected error"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			}
																		],
																		"id": 337,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "3665:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3665:26:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 340,
																"nodeType": "ExpressionStatement",
																"src": "3665:26:3"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3714:59:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3732:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "reason",
																					"nodeType": "YulIdentifier",
																					"src": "3746:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3754:4:3",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3742:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3742:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "reason",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 320,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3732:6:3",
																	"valueSize": 1
																},
																{
																	"declaration": 320,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3746:6:3",
																	"valueSize": 1
																}
															],
															"id": 342,
															"nodeType": "InlineAssembly",
															"src": "3705:68:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "3804:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3813:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 347,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "3813:6:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 349,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3812:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			],
																			"expression": {
																				"id": 344,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3793:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3793:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3793:28:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 343,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3786:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3786:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "3786:36:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3860:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3869:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 358,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3869:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3878:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "3878:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3887:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int24_$",
																		"typeString": "type(int24)"
																	},
																	"typeName": {
																		"id": 362,
																		"name": "int24",
																		"nodeType": "ElementaryTypeName",
																		"src": "3887:5:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 364,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3868:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
																"typeString": "tuple(type(uint256),type(uint160),type(int24))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
																"typeString": "tuple(type(uint256),type(uint160),type(int24))"
															}
														],
														"expression": {
															"id": 355,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3849:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3849:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
														"typeString": "tuple(uint256,uint160,int24)"
													}
												},
												"functionReturnParameters": 328,
												"id": 366,
												"nodeType": "Return",
												"src": "3842:52:3"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3314:69:3",
										"text": "@dev Parses a revert reason that should contain the numeric quote"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseRevertReason",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "reason",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3415:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3415:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:21:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3495:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3523:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 324,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "tickAfter",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3562:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 326,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3562:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:106:3"
									},
									"scope": 870,
									"src": "3388:513:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4214:359:3",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "tickBefore",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "4224:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 385,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "4224:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"nodeType": "VariableDeclarationStatement",
												"src": "4224:16:3"
											},
											{
												"assignments": [
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "tickAfter",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "4250:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 388,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "4250:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"nodeType": "VariableDeclarationStatement",
												"src": "4250:15:3"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 391,
																"name": "tickBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4278:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															null,
															null,
															null,
															null,
															null
														],
														"id": 392,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4275:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
															"typeString": "tuple(,int24,,,,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 393,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "4302:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "slot0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1953,
															"src": "4302:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4302:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"src": "4275:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "4275:39:3"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 398,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "4325:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 399,
																"name": "sqrtPriceX96After",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "4333:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 400,
																"name": "tickAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "4352:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 401,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4324:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
															"typeString": "tuple(uint256,uint160,int24)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 403,
																"name": "reason",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "4383:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 402,
															"name": "parseRevertReason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4365:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_int24_$",
																"typeString": "function (bytes memory) pure returns (uint256,uint160,int24)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4365:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
															"typeString": "tuple(uint256,uint160,int24)"
														}
													},
													"src": "4324:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "4324:66:3"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "initializedTicksCrossed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4401:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 410,
																"name": "tickBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4461:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 411,
																"name": "tickAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "4473:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"expression": {
																"id": 408,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "4427:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "countInitializedTicksCrossed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1554,
															"src": "4427:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_contract$_IUniswapV3Pool_$1606_$_t_int24_$_t_int24_$returns$_t_uint32_$bound_to$_t_contract$_IUniswapV3Pool_$1606_$",
																"typeString": "function (contract IUniswapV3Pool,int24,int24) view returns (uint32)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4427:56:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4401:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "4401:82:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4502:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 416,
															"name": "sqrtPriceX96After",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4510:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 417,
															"name": "initializedTicksCrossed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4529:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 418,
															"name": "gasEstimate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4554:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 419,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4501:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
														"typeString": "tuple(uint256,uint160,uint32,uint256)"
													}
												},
												"functionReturnParameters": 384,
												"id": 420,
												"nodeType": "Return",
												"src": "4494:72:3"
											}
										]
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "handleRevert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "reason",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3938:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3938:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3967:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 371,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1606,
													"src": "3967:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3996:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:93:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4081:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4109:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 378,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4148:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 380,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4192:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4067:142:3"
									},
									"scope": 870,
									"src": "3907:666:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "4863:820:3",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "4873:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4873:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4891:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "4891:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 440,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4908:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "4908:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4891:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4873:50:3"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "4933:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 444,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1606,
															"src": "4933:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 447,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4963:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 70,
															"src": "4963:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 449,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4979:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "4979:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 451,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4996:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 76,
															"src": "4996:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 446,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4955:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4955:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4933:74:3"
											},
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "gasBefore",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "5018:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5018:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 457,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "5038:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5038:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5018:29:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 499,
															"nodeType": "Block",
															"src": "5526:2:3",
															"statements": []
														},
														"errorName": "",
														"id": 500,
														"nodeType": "TryCatchClause",
														"src": "5526:2:3"
													},
													{
														"block": {
															"id": 517,
															"nodeType": "Block",
															"src": "5557:120:3",
															"statements": [
																{
																	"expression": {
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 504,
																			"name": "gasEstimate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "5571:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 505,
																				"name": "gasBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 456,
																				"src": "5585:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 506,
																					"name": "gasleft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967289,
																					"src": "5597:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5597:9:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5585:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5571:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 510,
																	"nodeType": "ExpressionStatement",
																	"src": "5571:35:3"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 512,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "5640:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"id": 513,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "5648:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			{
																				"id": 514,
																				"name": "gasEstimate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "5654:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																					"typeString": "contract IUniswapV3Pool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 511,
																			"name": "handleRevert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "5627:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_contract$_IUniswapV3Pool_$1606_$_t_uint256_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																				"typeString": "function (bytes memory,contract IUniswapV3Pool,uint256) view returns (uint256,uint160,uint32,uint256)"
																			}
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5627:39:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																			"typeString": "tuple(uint256,uint160,uint32,uint256)"
																		}
																	},
																	"functionReturnParameters": 435,
																	"id": 516,
																	"nodeType": "Return",
																	"src": "5620:46:3"
																}
															]
														},
														"errorName": "",
														"id": 518,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 503,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 502,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "5536:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5536:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5535:21:3"
														},
														"src": "5529:148:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 464,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5108:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_QuoterV2_$870",
																		"typeString": "contract QuoterV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_QuoterV2_$870",
																		"typeString": "contract QuoterV2"
																	}
																],
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5100:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5100:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5100:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5181:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 467,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5209:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 74,
																	"src": "5209:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2388,
																"src": "5209:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5209:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 471,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5253:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sqrtPriceLimitX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 78,
																	"src": "5253:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5281:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5253:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"expression": {
																	"id": 486,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "5400:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																		"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sqrtPriceLimitX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 78,
																"src": "5400:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "5253:171:3",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 475,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "5306:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 480,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3180,
																					"src": "5349:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$3180_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2666,
																				"src": "5349:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5375:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5349:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "5306:70:3",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 476,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3180,
																					"src": "5319:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$3180_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2662,
																				"src": "5319:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5345:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5319:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5305:72:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 491,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5459:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 70,
																	"src": "5459:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 493,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5475:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "5475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 495,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5487:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "5487:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 489,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5442:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "5442:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5442:61:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 460,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "5073:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:444:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 519,
												"nodeType": "TryStatement",
												"src": "5057:620:3"
											}
										]
									},
									"functionSelector": "c6a5026a",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4676:8:3"
									},
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4610:41:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 423,
													"name": "QuoteExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 79,
													"src": "4610:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:43:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4715:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4746:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 429,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4785:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 431,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "4829:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:157:3"
									},
									"scope": 870,
									"src": "4579:1104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "5987:1320:3",
										"statements": [
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "sqrtPriceX96AfterList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5997:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 543,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "6035:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1116,
																	"src": "6035:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6035:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6021:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 540,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "6025:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 541,
																"nodeType": "ArrayTypeName",
																"src": "6025:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6021:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "5997:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5997:54:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 549,
														"name": "initializedTicksCrossedList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "6061:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 553,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "6104:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1116,
																	"src": "6104:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6104:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6091:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 550,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6095:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 551,
																"nodeType": "ArrayTypeName",
																"src": "6095:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																	"typeString": "uint32[]"
																}
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6091:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "6061:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "6061:59:3"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "6131:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6131:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"hexValue": "30",
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6143:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6131:13:3"
											},
											{
												"body": {
													"id": 633,
													"nodeType": "Block",
													"src": "6167:1134:3",
													"statements": [
														{
															"assignments": [
																565,
																567,
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 565,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6182:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 564,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6182:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 567,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6199:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 566,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6199:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6217:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "6217:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 573,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 570,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "6231:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1150,
																	"src": "6231:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6231:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6181:72:3"
														},
														{
															"assignments": [
																575,
																577,
																579,
																581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 575,
																	"mutability": "mutable",
																	"name": "_amountOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6348:18:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 574,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6348:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 577,
																	"mutability": "mutable",
																	"name": "_sqrtPriceX96After",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6368:26:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"typeName": {
																		"id": 576,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "6368:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 579,
																	"mutability": "mutable",
																	"name": "_initializedTicksCrossed",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6396:31:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6396:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 581,
																	"mutability": "mutable",
																	"name": "_gasEstimate",
																	"nodeType": "VariableDeclaration",
																	"scope": 633,
																	"src": "6429:20:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6429:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 591,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 584,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 565,
																				"src": "6575:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 585,
																				"name": "tokenOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "6618:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 586,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 569,
																				"src": "6657:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			{
																				"id": 587,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "6696:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6749:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 583,
																			"name": "QuoteExactInputSingleParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "6512:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_QuoteExactInputSingleParams_$79_storage_ptr_$",
																				"typeString": "type(struct IQuoterV2.QuoteExactInputSingleParams storage pointer)"
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"tokenIn",
																			"tokenOut",
																			"fee",
																			"amountIn",
																			"sqrtPriceLimitX96"
																		],
																		"nodeType": "FunctionCall",
																		"src": "6512:261:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$79_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	],
																	"id": 582,
																	"name": "quoteExactInputSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "6469:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QuoteExactInputSingleParams_$79_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																		"typeString": "function (struct IQuoterV2.QuoteExactInputSingleParams memory) returns (uint256,uint160,uint32,uint256)"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6469:322:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint160,uint32,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6347:444:3"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 592,
																		"name": "sqrtPriceX96AfterList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "6806:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																			"typeString": "uint160[] memory"
																		}
																	},
																	"id": 594,
																	"indexExpression": {
																		"id": 593,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6828:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6806:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 595,
																	"name": "_sqrtPriceX96After",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "6833:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "6806:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "6806:45:3"
														},
														{
															"expression": {
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 598,
																		"name": "initializedTicksCrossedList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "6865:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"id": 599,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6893:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6865:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 601,
																	"name": "_initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "6898:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6865:57:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 603,
															"nodeType": "ExpressionStatement",
															"src": "6865:57:3"
														},
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 604,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "6936:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 605,
																	"name": "_amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "6947:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6936:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "6936:21:3"
														},
														{
															"expression": {
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 608,
																	"name": "gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "6971:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 609,
																	"name": "_gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "6986:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6971:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "6971:27:3"
														},
														{
															"expression": {
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "7012:3:3",
																"subExpression": {
																	"id": 612,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7012:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 614,
															"nodeType": "ExpressionStatement",
															"src": "7012:3:3"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 615,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7089:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1098,
																	"src": "7089:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7089:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 631,
																"nodeType": "Block",
																"src": "7176:115:3",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 625,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 525,
																					"src": "7202:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 626,
																					"name": "sqrtPriceX96AfterList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "7212:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																						"typeString": "uint160[] memory"
																					}
																				},
																				{
																					"id": 627,
																					"name": "initializedTicksCrossedList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 535,
																					"src": "7235:27:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																						"typeString": "uint32[] memory"
																					}
																				},
																				{
																					"id": 628,
																					"name": "gasEstimate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "7264:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 629,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7201:75:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint160_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint160[] memory,uint32[] memory,uint256)"
																			}
																		},
																		"functionReturnParameters": 538,
																		"id": 630,
																		"nodeType": "Return",
																		"src": "7194:82:3"
																	}
																]
															},
															"id": 632,
															"nodeType": "IfStatement",
															"src": "7085:206:3",
															"trueBody": {
																"id": 624,
																"nodeType": "Block",
																"src": "7114:56:3",
																"statements": [
																	{
																		"expression": {
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 618,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "7132:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 619,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 523,
																						"src": "7139:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1183,
																					"src": "7139:14:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7139:16:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "7132:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 623,
																		"nodeType": "ExpressionStatement",
																		"src": "7132:23:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6161:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 634,
												"nodeType": "WhileStatement",
												"src": "6154:1147:3"
											}
										]
									},
									"functionSelector": "cdca1753",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 527,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5774:8:3"
									},
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5714:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5733:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:37:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5813:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5844:38:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 530,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "5844:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 531,
													"nodeType": "ArrayTypeName",
													"src": "5844:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5896:43:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "5896:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "5896:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "5953:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5953:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:183:3"
									},
									"scope": 870,
									"src": "5689:1618:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										136
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "7598:1090:3",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "7608:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7608:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 652,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7626:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "7626:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7643:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 115,
														"src": "7643:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7626:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7608:50:3"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "7668:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 658,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1606,
															"src": "7668:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 661,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "7698:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 113,
															"src": "7698:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 663,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "7714:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 115,
															"src": "7714:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 665,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "7731:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "7731:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 660,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "7690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7690:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7668:74:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 669,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7866:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sqrtPriceLimitX96",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "7866:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7866:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "7862:66:3",
												"trueBody": {
													"expression": {
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 673,
															"name": "amountOutCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "7897:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 674,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "7915:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 117,
															"src": "7915:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7897:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 677,
													"nodeType": "ExpressionStatement",
													"src": "7897:31:3"
												}
											},
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "gasBefore",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "7938:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7938:29:3"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 724,
															"nodeType": "Block",
															"src": "8445:2:3",
															"statements": []
														},
														"errorName": "",
														"id": 725,
														"nodeType": "TryCatchClause",
														"src": "8445:2:3"
													},
													{
														"block": {
															"id": 750,
															"nodeType": "Block",
															"src": "8476:206:3",
															"statements": [
																{
																	"expression": {
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 729,
																			"name": "gasEstimate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "8490:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 730,
																				"name": "gasBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 680,
																				"src": "8504:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 731,
																					"name": "gasleft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967289,
																					"src": "8516:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8516:9:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8504:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8490:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "8490:35:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 736,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "8543:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																					"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sqrtPriceLimitX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 121,
																			"src": "8543:24:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8571:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8543:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 743,
																	"nodeType": "IfStatement",
																	"src": "8539:57:3",
																	"trueBody": {
																		"expression": {
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "8574:22:3",
																			"subExpression": {
																				"id": 740,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "8581:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 742,
																		"nodeType": "ExpressionStatement",
																		"src": "8574:22:3"
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 745,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "8645:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"id": 746,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "8653:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			{
																				"id": 747,
																				"name": "gasEstimate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "8659:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																					"typeString": "contract IUniswapV3Pool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 744,
																			"name": "handleRevert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "8632:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_contract$_IUniswapV3Pool_$1606_$_t_uint256_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																				"typeString": "function (bytes memory,contract IUniswapV3Pool,uint256) view returns (uint256,uint160,uint32,uint256)"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8632:39:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																			"typeString": "tuple(uint256,uint160,uint32,uint256)"
																		}
																	},
																	"functionReturnParameters": 649,
																	"id": 749,
																	"nodeType": "Return",
																	"src": "8625:46:3"
																}
															]
														},
														"errorName": "",
														"id": 751,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 728,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 727,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 751,
																	"src": "8455:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 726,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8455:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "8454:21:3"
														},
														"src": "8448:234:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8028:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_QuoterV2_$870",
																		"typeString": "contract QuoterV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_QuoterV2_$870",
																		"typeString": "contract QuoterV2"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8020:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8020:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8020:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8101:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "8129:25:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 691,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "8130:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																				"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																			}
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 117,
																		"src": "8130:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2388,
																	"src": "8130:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8130:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 696,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "8172:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sqrtPriceLimitX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "8172:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8200:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8172:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"expression": {
																	"id": 711,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "8319:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																		"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sqrtPriceLimitX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 121,
																"src": "8319:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8172:171:3",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 700,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "8225:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 705,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3180,
																					"src": "8268:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$3180_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2666,
																				"src": "8268:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8268:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8225:70:3",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 701,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3180,
																					"src": "8238:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$3180_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2662,
																				"src": "8238:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8264:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8238:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8224:72:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 716,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "8378:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 115,
																	"src": "8378:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 718,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "8395:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "8395:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 720,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "8407:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 113,
																	"src": "8407:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 714,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8361:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8361:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8361:61:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 684,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "7993:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "7993:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7993:443:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 752,
												"nodeType": "TryStatement",
												"src": "7977:705:3"
											}
										]
									},
									"functionSelector": "bd21704a",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 640,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7412:8:3"
									},
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "7345:42:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 637,
													"name": "QuoteExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 122,
													"src": "7345:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7344:44:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "7451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "7481:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 643,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "7520:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 645,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7520:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "7564:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7564:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7437:156:3"
									},
									"scope": 870,
									"src": "7313:1375:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "8993:1321:3",
										"statements": [
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "sqrtPriceX96AfterList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "9003:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 776,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "9041:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1116,
																	"src": "9041:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9041:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "9027:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 773,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 774,
																"nodeType": "ArrayTypeName",
																"src": "9031:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9027:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "9003:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "9003:54:3"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 782,
														"name": "initializedTicksCrossedList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "9067:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 786,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "9110:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1116,
																	"src": "9110:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9110:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "9097:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 783,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 784,
																"nodeType": "ArrayTypeName",
																"src": "9101:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																	"typeString": "uint32[]"
																}
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9097:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "9067:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "9067:59:3"
											},
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "9137:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"hexValue": "30",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9149:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9137:13:3"
											},
											{
												"body": {
													"id": 866,
													"nodeType": "Block",
													"src": "9173:1135:3",
													"statements": [
														{
															"assignments": [
																798,
																800,
																802
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 798,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9188:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 797,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9188:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 800,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9206:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9206:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 802,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9223:10:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 801,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "9223:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 806,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 803,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "9237:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1150,
																	"src": "9237:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9237:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9187:72:3"
														},
														{
															"assignments": [
																808,
																810,
																812,
																814
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 808,
																	"mutability": "mutable",
																	"name": "_amountIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9354:17:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 807,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9354:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 810,
																	"mutability": "mutable",
																	"name": "_sqrtPriceX96After",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9373:26:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"typeName": {
																		"id": 809,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9373:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "_initializedTicksCrossed",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9401:31:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "9401:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 814,
																	"mutability": "mutable",
																	"name": "_gasEstimate",
																	"nodeType": "VariableDeclaration",
																	"scope": 866,
																	"src": "9434:20:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 813,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9434:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 824,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 817,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "9582:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 818,
																				"name": "tokenOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9625:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 819,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 758,
																				"src": "9667:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 820,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "9707:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9755:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 816,
																			"name": "QuoteExactOutputSingleParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 122,
																			"src": "9518:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_QuoteExactOutputSingleParams_$122_storage_ptr_$",
																				"typeString": "type(struct IQuoterV2.QuoteExactOutputSingleParams storage pointer)"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"tokenIn",
																			"tokenOut",
																			"amount",
																			"fee",
																			"sqrtPriceLimitX96"
																		],
																		"nodeType": "FunctionCall",
																		"src": "9518:261:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	],
																	"id": 815,
																	"name": "quoteExactOutputSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "9474:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QuoteExactOutputSingleParams_$122_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																		"typeString": "function (struct IQuoterV2.QuoteExactOutputSingleParams memory) returns (uint256,uint160,uint32,uint256)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9474:323:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint160,uint32,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9353:444:3"
														},
														{
															"expression": {
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 825,
																		"name": "sqrtPriceX96AfterList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9812:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																			"typeString": "uint160[] memory"
																		}
																	},
																	"id": 827,
																	"indexExpression": {
																		"id": 826,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "9834:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9812:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 828,
																	"name": "_sqrtPriceX96After",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "9839:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9812:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "9812:45:3"
														},
														{
															"expression": {
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 831,
																		"name": "initializedTicksCrossedList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "9871:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 833,
																	"indexExpression": {
																		"id": 832,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "9899:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9871:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 834,
																	"name": "_initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "9904:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "9871:57:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "9871:57:3"
														},
														{
															"expression": {
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 837,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "9942:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 838,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "9954:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9942:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "9942:21:3"
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "9977:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "_gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "9992:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9977:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "9977:27:3"
														},
														{
															"expression": {
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10018:3:3",
																"subExpression": {
																	"id": 845,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "10018:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 847,
															"nodeType": "ExpressionStatement",
															"src": "10018:3:3"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 848,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "10095:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1098,
																	"src": "10095:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10095:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 864,
																"nodeType": "Block",
																"src": "10182:116:3",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 858,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "10208:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 859,
																					"name": "sqrtPriceX96AfterList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 765,
																					"src": "10219:21:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																						"typeString": "uint160[] memory"
																					}
																				},
																				{
																					"id": 860,
																					"name": "initializedTicksCrossedList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 768,
																					"src": "10242:27:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																						"typeString": "uint32[] memory"
																					}
																				},
																				{
																					"id": 861,
																					"name": "gasEstimate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 770,
																					"src": "10271:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10207:76:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint160_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint160[] memory,uint32[] memory,uint256)"
																			}
																		},
																		"functionReturnParameters": 771,
																		"id": 863,
																		"nodeType": "Return",
																		"src": "10200:83:3"
																	}
																]
															},
															"id": 865,
															"nodeType": "IfStatement",
															"src": "10091:207:3",
															"trueBody": {
																"id": 857,
																"nodeType": "Block",
																"src": "10120:56:3",
																"statements": [
																	{
																		"expression": {
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 851,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 756,
																				"src": "10138:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 852,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 756,
																						"src": "10145:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 853,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1183,
																					"src": "10145:14:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10145:16:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "10138:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 856,
																		"nodeType": "ExpressionStatement",
																		"src": "10138:23:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9167:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 867,
												"nodeType": "WhileStatement",
												"src": "9160:1148:3"
											}
										]
									},
									"functionSelector": "2f80bb1d",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8781:8:3"
									},
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8720:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8720:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8739:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8719:38:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8820:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8850:38:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 763,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "8850:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 764,
													"nodeType": "ArrayTypeName",
													"src": "8850:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8902:43:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 766,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "8902:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 767,
													"nodeType": "ArrayTypeName",
													"src": "8902:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "8959:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8959:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8806:182:3"
									},
									"scope": 870,
									"src": "8694:1620:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 871,
							"src": "983:9333:3"
						}
					],
					"src": "45:10272:3"
				},
				"id": 3
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol",
					"exportedSymbols": {
						"BytesLib": [
							989
						]
					},
					"id": 990,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 872,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "343:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 989,
							"linearizedBaseContracts": [
								989
							],
							"name": "BytesLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "535:2871:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 884,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "553:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "563:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "553:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 887,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "569:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "553:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "545:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "545:50:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 893,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "613:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 894,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "622:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "613:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 896,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "633:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "613:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "605:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "605:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 902,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "676:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "676:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "693:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 905,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "702:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "693:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "676:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f75744f66426f756e6473",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "711:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															},
															"value": "slice_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "668:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "668:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "668:63:4"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "742:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 911,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"nodeType": "VariableDeclarationStatement",
												"src": "742:22:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "784:2589:4",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "844:2092:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1012:24:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1031:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1025:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1025:11:4"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "1012:9:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1696:33:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "1717:7:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1726:2:4",
																							"type": "",
																							"value": "31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1713:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1713:16:4"
																				},
																				"variables": [
																					{
																						"name": "lengthmod",
																						"nodeType": "YulTypedName",
																						"src": "1700:9:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2070:70:4",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "2088:9:4"
																								},
																								{
																									"name": "lengthmod",
																									"nodeType": "YulIdentifier",
																									"src": "2099:9:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2084:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2084:25:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2115:4:4",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"name": "lengthmod",
																											"nodeType": "YulIdentifier",
																											"src": "2128:9:4"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "2121:6:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2121:17:4"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "2111:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2111:28:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2080:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2080:60:4"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nodeType": "YulTypedName",
																						"src": "2074:2:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2161:27:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "2176:2:4"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "2180:7:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2172:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2172:16:4"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nodeType": "YulTypedName",
																						"src": "2165:3:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2602:69:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "2635:2:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "cc",
																												"nodeType": "YulIdentifier",
																												"src": "2645:2:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2639:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2639:9:4"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "2628:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2628:21:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2628:21:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "2481:2:4"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2485:3:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2478:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2478:11:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2490:111:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2516:19:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "2526:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2530:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2522:13:4"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nodeType": "YulIdentifier",
																									"src": "2516:2:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2560:19:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nodeType": "YulIdentifier",
																										"src": "2570:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2574:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2566:13:4"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nodeType": "YulIdentifier",
																									"src": "2560:2:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2214:263:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2375:80:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_bytes",
																														"nodeType": "YulIdentifier",
																														"src": "2397:6:4"
																													},
																													{
																														"name": "lengthmod",
																														"nodeType": "YulIdentifier",
																														"src": "2405:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2393:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2393:22:4"
																											},
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "2421:4:4",
																														"type": "",
																														"value": "0x20"
																													},
																													{
																														"arguments": [
																															{
																																"name": "lengthmod",
																																"nodeType": "YulIdentifier",
																																"src": "2434:9:4"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nodeType": "YulIdentifier",
																															"src": "2427:6:4"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2427:17:4"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nodeType": "YulIdentifier",
																													"src": "2417:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2417:28:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2389:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2389:57:4"
																									},
																									{
																										"name": "_start",
																										"nodeType": "YulIdentifier",
																										"src": "2448:6:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2385:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2385:70:4"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nodeType": "YulTypedName",
																									"src": "2379:2:4",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "2210:461:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "2700:9:4"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "2711:7:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2693:26:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2693:26:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2886:4:4",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nodeType": "YulIdentifier",
																											"src": "2900:2:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2904:2:4",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2896:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2896:11:4"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2913:2:4",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "2909:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2909:7:4"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "2892:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2892:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "2879:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2879:39:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:39:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "837:2099:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3048:315:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3070:24:4",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:4:4",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3083:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3083:11:4"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "3070:9:4"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "3276:9:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3287:1:4",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3269:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3269:20:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3269:20:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3318:4:4",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "3328:9:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3339:4:4",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3324:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3324:20:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3311:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3311:34:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3311:34:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3040:323:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "_length",
																		"nodeType": "YulIdentifier",
																		"src": "812:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:15:4"
															},
															"nodeType": "YulSwitch",
															"src": "798:2565:4"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:6:4",
														"valueSize": 1
													},
													{
														"declaration": 878,
														"isOffset": false,
														"isSlot": false,
														"src": "1717:7:4",
														"valueSize": 1
													},
													{
														"declaration": 878,
														"isOffset": false,
														"isSlot": false,
														"src": "2180:7:4",
														"valueSize": 1
													},
													{
														"declaration": 878,
														"isOffset": false,
														"isSlot": false,
														"src": "2711:7:4",
														"valueSize": 1
													},
													{
														"declaration": 878,
														"isOffset": false,
														"isSlot": false,
														"src": "812:7:4",
														"valueSize": 1
													},
													{
														"declaration": 876,
														"isOffset": false,
														"isSlot": false,
														"src": "2448:6:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "1012:9:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "2088:9:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "2700:9:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "3070:9:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "3276:9:4",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "3328:9:4",
														"valueSize": 1
													}
												],
												"id": 914,
												"nodeType": "InlineAssembly",
												"src": "775:2598:4"
											},
											{
												"expression": {
													"id": 915,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "3390:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 882,
												"id": 916,
												"nodeType": "Return",
												"src": "3383:16:4"
											}
										]
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "423:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "423:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "452:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_length",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "476:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:4"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "521:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "521:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:14:4"
									},
									"scope": 989,
									"src": "399:3007:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "3500:328:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 928,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "3518:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3527:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "3518:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 931,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "3533:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3518:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f766572666c6f77",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3541:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															},
															"value": "toAddress_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3510:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "3510:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 937,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "3580:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3580:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "3597:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3606:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "3597:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3580:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3572:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "3572:62:4"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "tempAddress",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "3644:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 946,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3644:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "3644:19:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3683:110:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3697:86:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nodeType": "YulIdentifier",
																								"src": "3730:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3738:4:4",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3726:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3726:17:4"
																					},
																					{
																						"name": "_start",
																						"nodeType": "YulIdentifier",
																						"src": "3745:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3722:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3722:30:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3716:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:37:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3755:27:4",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:71:4"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nodeType": "YulIdentifier",
																	"src": "3697:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 920,
														"isOffset": false,
														"isSlot": false,
														"src": "3730:6:4",
														"valueSize": 1
													},
													{
														"declaration": 922,
														"isOffset": false,
														"isSlot": false,
														"src": "3745:6:4",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "3697:11:4",
														"valueSize": 1
													}
												],
												"id": 949,
												"nodeType": "InlineAssembly",
												"src": "3674:119:4"
											},
											{
												"expression": {
													"id": 950,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "3810:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 926,
												"id": 951,
												"nodeType": "Return",
												"src": "3803:18:4"
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3431:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3431:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3452:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:37:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3491:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:9:4"
									},
									"scope": 989,
									"src": "3412:416:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "3920:279:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 963,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "3938:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3947:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3938:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 966,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "3952:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3938:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f766572666c6f77",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3960:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															},
															"value": "toUint24_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															}
														],
														"id": 962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3930:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "3930:50:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 972,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3998:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3998:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 974,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "4015:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4024:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "4015:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3998:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f75744f66426f756e6473",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4027:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															},
															"value": "toUint24_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3990:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3990:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "3990:60:4"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "tempUint",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "4060:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 981,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "4060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"nodeType": "VariableDeclarationStatement",
												"src": "4060:15:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4095:72:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4109:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4135:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4143:3:4",
																						"type": "",
																						"value": "0x3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4131:16:4"
																			},
																			{
																				"name": "_start",
																				"nodeType": "YulIdentifier",
																				"src": "4149:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:29:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4121:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:36:4"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nodeType": "YulIdentifier",
																	"src": "4109:8:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 955,
														"isOffset": false,
														"isSlot": false,
														"src": "4135:6:4",
														"valueSize": 1
													},
													{
														"declaration": 957,
														"isOffset": false,
														"isSlot": false,
														"src": "4149:6:4",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "4109:8:4",
														"valueSize": 1
													}
												],
												"id": 984,
												"nodeType": "InlineAssembly",
												"src": "4086:81:4"
											},
											{
												"expression": {
													"id": 985,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 982,
													"src": "4184:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 961,
												"id": 986,
												"nodeType": "Return",
												"src": "4177:15:4"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3852:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3852:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3873:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:37:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3912:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 959,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3912:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:8:4"
									},
									"scope": 989,
									"src": "3834:365:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 990,
							"src": "376:3825:4"
						}
					],
					"src": "343:3859:4"
				},
				"id": 4
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							1051
						],
						"IUniswapV3Pool": [
							1606
						],
						"IUniswapV3PoolActions": [
							1716
						],
						"IUniswapV3PoolDerivedState": [
							1747
						],
						"IUniswapV3PoolEvents": [
							1866
						],
						"IUniswapV3PoolImmutables": [
							1906
						],
						"IUniswapV3PoolOwnerActions": [
							1932
						],
						"IUniswapV3PoolState": [
							2040
						],
						"PoolAddress": [
							1276
						]
					},
					"id": 1052,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 991,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:5"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 992,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1607,
							"src": "70:66:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
							"file": "./PoolAddress.sol",
							"id": 993,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1277,
							"src": "137:27:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "166:68:5",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "CallbackValidation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "850:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1012,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "914:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1013,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "922:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1014,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "930:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 1010,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "891:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1276_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1228,
																"src": "891:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$1197_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "891:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 1008,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1019,
															1050
														],
														"referencedDeclaration": 1050,
														"src": "867:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$1197_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$1606_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1017,
												"nodeType": "Return",
												"src": "860:75:5"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "267:411:5",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "716:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "741:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "765:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "789:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1002,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:99:5"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "829:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1005,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1606,
													"src": "829:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:21:5"
									},
									"scope": 1051,
									"src": "683:259:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1338:130:5",
										"statements": [
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "1348:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1033,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "1397:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1034,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "1406:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 1031,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "1370:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$1276_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1275,
																	"src": "1370:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$1197_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1370:44:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1030,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "1355:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1606_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1355:60:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "1348:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1348:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1040,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1433:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1433:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1044,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "1455:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1447:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1447:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1447:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1433:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1425:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1425:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1425:36:5"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "948:236:5",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1213:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "poolKey",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1230:34:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1023,
													"name": "PoolAddress.PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1197,
													"src": "1230:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1197_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:53:5"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1313:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1026,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1606,
													"src": "1313:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:21:5"
									},
									"scope": 1051,
									"src": "1189:279:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "234:1236:5"
						}
					],
					"src": "45:1426:5"
				},
				"id": 5
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/Path.sol",
					"exportedSymbols": {
						"BytesLib": [
							989
						],
						"Path": [
							1184
						]
					},
					"id": 1185,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/BytesLib.sol",
							"file": "./BytesLib.sol",
							"id": 1054,
							"nodeType": "ImportDirective",
							"scope": 1185,
							"sourceUnit": 990,
							"src": "71:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "97:67:6",
								"text": "@title Functions for manipulating path data for multihop swaps"
							},
							"fullyImplemented": true,
							"id": 1184,
							"linearizedBaseContracts": [
								1184
							],
							"name": "Path",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1058,
									"libraryName": {
										"id": 1056,
										"name": "BytesLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 989,
										"src": "189:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BytesLib_$989",
											"typeString": "library BytesLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "183:25:6",
									"typeName": {
										"id": 1057,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "214:48:6",
										"text": "@dev The length of the bytes encoded address"
									},
									"id": 1062,
									"mutability": "constant",
									"name": "ADDR_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 1184,
									"src": "267:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1060,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1061,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "304:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "312:44:6",
										"text": "@dev The length of the bytes encoded fee"
									},
									"id": 1066,
									"mutability": "constant",
									"name": "FEE_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 1184,
									"src": "361:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "397:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "405:58:6",
										"text": "@dev The offset of a single token address and pool fee"
									},
									"id": 1072,
									"mutability": "constant",
									"name": "NEXT_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 1184,
									"src": "468:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1068,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1071,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1069,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1062,
											"src": "507:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 1070,
											"name": "FEE_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1066,
											"src": "519:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "507:20:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "533:42:6",
										"text": "@dev The offset of an encoded pool key"
									},
									"id": 1078,
									"mutability": "constant",
									"name": "POP_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 1184,
									"src": "580:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1075,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1072,
											"src": "618:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 1076,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1062,
											"src": "632:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "618:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "647:72:6",
										"text": "@dev The minimum length of an encoding that contains 2 or more pools"
									},
									"id": 1084,
									"mutability": "constant",
									"name": "MULTIPLE_POOLS_MIN_LENGTH",
									"nodeType": "VariableDeclaration",
									"scope": 1184,
									"src": "724:77:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1083,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1081,
											"name": "POP_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1078,
											"src": "777:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 1082,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1072,
											"src": "790:11:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "777:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1066:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1092,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1083:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1083:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1094,
														"name": "MULTIPLE_POOLS_MIN_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1098:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1083:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1096,
												"nodeType": "Return",
												"src": "1076:47:6"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "808:179:6",
										"text": "@notice Returns true iff the path contains two or more pools\n @param path The encoded swap path\n @return True if path contains two or more pools, otherwise false"
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1018:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1018:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:19:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:6:6"
									},
									"scope": 1184,
									"src": "992:138:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1351:166:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1106,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "1471:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1471:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1108,
																			"name": "ADDR_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "1485:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1471:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1470:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1111,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "1498:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1470:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1113,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1469:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1114,
												"nodeType": "Return",
												"src": "1462:48:6"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1136:141:6",
										"text": "@notice Returns the number of pools in the path\n @param path The encoded swap path\n @return The number of pools in the path"
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numPools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1300:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1300:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:19:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1342:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:9:6"
									},
									"scope": 1184,
									"src": "1282:235:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "1964:129:6",
										"statements": [
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1974:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1998:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 1129,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "1983:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 953,
															"src": "1983:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1974:26:6"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1135,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "2010:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1138,
																"name": "ADDR_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2030:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1136,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "2016:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint24",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "2016:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint24)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "2010:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2010:30:6"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1142,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "2050:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1145,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "2074:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1143,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "2059:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 953,
															"src": "2059:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2050:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "2050:36:6"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "1523:251:6",
										"text": "@notice Decodes the first pool in path\n @param path The bytes encoded swap path\n @return tokenA The first token of the given pool\n @return tokenB The second token of the given pool\n @return fee The fee level of the pool"
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1804:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1804:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:19:6"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1883:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1911:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1939:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1125,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1939:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:90:6"
									},
									"scope": 1184,
									"src": "1779:314:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "2397:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2425:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1161,
															"name": "POP_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2428:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1158,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2414:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "2414:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1163,
												"nodeType": "Return",
												"src": "2407:32:6"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "2099:215:6",
										"text": "@notice Gets the segment corresponding to the first pool in the path\n @param path The bytes encoded swap path\n @return The segment containing all data necessary to target the first pool in the path"
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2341:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:19:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2383:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:14:6"
									},
									"scope": 1184,
									"src": "2319:127:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "2710:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "NEXT_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2738:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1176,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "2751:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2751:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1178,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "2765:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1173,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "2727:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "2727:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2727:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1172,
												"id": 1181,
												"nodeType": "Return",
												"src": "2720:57:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "2452:178:6",
										"text": "@notice Skips a token + fee element from the buffer and returns the remainder\n @param path The swap path\n @return The remaining token + fee elements in the path"
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "skipToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "2654:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2654:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:19:6"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "2696:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2696:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:14:6"
									},
									"scope": 1184,
									"src": "2635:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1185,
							"src": "164:2622:6"
						}
					],
					"src": "45:2742:6"
				},
				"id": 6
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							1276
						]
					},
					"id": 1277,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1186,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1187,
								"nodeType": "StructuredDocumentation",
								"src": "71:96:7",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1276,
							"linearizedBaseContracts": [
								1276
							],
							"name": "PoolAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1190,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "193:114:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1188,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 1189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 1197,
									"members": [
										{
											"constant": false,
											"id": 1192,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1197,
											"src": "387:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1191,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1194,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1197,
											"src": "411:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1197,
											"src": "435:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1195,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "435:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nodeType": "StructDefinition",
									"scope": 1276,
									"src": "362:90:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "917:141:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "931:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1210,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "940:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "931:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "927:56:7",
												"trueBody": {
													"expression": {
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1212,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "949:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1213,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "957:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "948:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1215,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "968:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1216,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "976:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1217,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "967:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "948:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1219,
													"nodeType": "ExpressionStatement",
													"src": "948:35:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1222,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "1033:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1046:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1221,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1000:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1197_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1000:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1226,
												"nodeType": "Return",
												"src": "993:58:7"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "458:321:7",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "813:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "837:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "861:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1203,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "861:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:74:7"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "901:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1206,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1197,
													"src": "901:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1197_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:16:7"
									},
									"scope": 1276,
									"src": "784:274:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "1403:414:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1239,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "1421:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1192,
																"src": "1421:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1241,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "1434:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1194,
																"src": "1434:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1413:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1413:32:7"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "1455:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 1254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1581:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 1255,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1231,
																						"src": "1614:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 1259,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1233,
																											"src": "1668:3:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1260,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1192,
																										"src": "1668:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1261,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1233,
																											"src": "1680:3:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1262,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1194,
																										"src": "1680:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1263,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1233,
																											"src": "1692:3:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1264,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "fee",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1196,
																										"src": "1692:7:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									],
																									"expression": {
																										"id": 1257,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "1657:3:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 1258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encode",
																									"nodeType": "MemberAccess",
																									"src": "1657:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1657:43:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1256,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "1647:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 1266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1647:54:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 1267,
																						"name": "POOL_INIT_CODE_HASH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1190,
																						"src": "1727:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"id": 1252,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "1539:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1253,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "1539:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1539:229:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1251,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1508:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1508:278:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1483:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1249,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1483:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1483:317:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1247,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1462:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1462:348:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1455:355:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "1455:355:7"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "1064:236:7",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1329:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1346:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1197_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1232,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1197,
													"src": "1346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1197_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:37:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1389:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:14:7"
									},
									"scope": 1276,
									"src": "1305:512:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1277,
							"src": "167:1652:7"
						}
					],
					"src": "45:1775:7"
				},
				"id": 7
			},
			".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol": {
				"ast": {
					"absolutePath": ".deps/github/Uniswap/v3-periphery/contracts/libraries/PoolTicksCounter.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1606
						],
						"IUniswapV3PoolActions": [
							1716
						],
						"IUniswapV3PoolDerivedState": [
							1747
						],
						"IUniswapV3PoolEvents": [
							1866
						],
						"IUniswapV3PoolImmutables": [
							1906
						],
						"IUniswapV3PoolOwnerActions": [
							1932
						],
						"IUniswapV3PoolState": [
							2040
						],
						"PoolTicksCounter": [
							1584
						]
					},
					"id": 1585,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1278,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1279,
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 1607,
							"src": "71:66:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584
							],
							"name": "PoolTicksCounter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "816:3126:8",
										"statements": [
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "wordPosLower",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "826:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1291,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "826:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"nodeType": "VariableDeclarationStatement",
												"src": "826:18:8"
											},
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "wordPosHigher",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "854:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1294,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "854:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"nodeType": "VariableDeclarationStatement",
												"src": "854:19:8"
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "bitPosLower",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "883:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1297,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "883:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"nodeType": "VariableDeclarationStatement",
												"src": "883:17:8"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "bitPosHigher",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "910:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1300,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "910:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"nodeType": "VariableDeclarationStatement",
												"src": "910:18:8"
											},
											{
												"assignments": [
													1304
												],
												"declarations": [
													{
														"constant": false,
														"id": 1304,
														"mutability": "mutable",
														"name": "tickBeforeInitialized",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "938:26:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "938:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"nodeType": "VariableDeclarationStatement",
												"src": "938:26:8"
											},
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "tickAfterInitialized",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "974:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1306,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "974:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"nodeType": "VariableDeclarationStatement",
												"src": "974:25:8"
											},
											{
												"id": 1474,
												"nodeType": "Block",
												"src": "1010:1887:8",
												"statements": [
													{
														"assignments": [
															1310
														],
														"declarations": [
															{
																"constant": false,
																"id": 1310,
																"mutability": "mutable",
																"name": "wordPos",
																"nodeType": "VariableDeclaration",
																"scope": 1474,
																"src": "1127:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"typeName": {
																	"id": 1309,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "1127:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1322,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1313,
																					"name": "tickBefore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "1150:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1314,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1282,
																							"src": "1163:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 1315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "1163:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1163:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "1150:31:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 1318,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1149:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1186:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "1149:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1143:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int16_$",
																	"typeString": "type(int16)"
																},
																"typeName": {
																	"id": 1311,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "1143:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1127:61:8"
													},
													{
														"assignments": [
															1324
														],
														"declarations": [
															{
																"constant": false,
																"id": 1324,
																"mutability": "mutable",
																"name": "bitPos",
																"nodeType": "VariableDeclaration",
																"scope": 1474,
																"src": "1202:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1323,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1202:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1336,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1327,
																					"name": "tickBefore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "1224:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1328,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1282,
																							"src": "1237:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 1329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "1237:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1237:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "1224:31:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 1332,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1223:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "323536",
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1259:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "1223:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1217:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1217:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1217:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1202:61:8"
													},
													{
														"assignments": [
															1338
														],
														"declarations": [
															{
																"constant": false,
																"id": 1338,
																"mutability": "mutable",
																"name": "wordPosAfter",
																"nodeType": "VariableDeclaration",
																"scope": 1474,
																"src": "1278:18:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"typeName": {
																	"id": 1337,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "1278:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1350,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1341,
																					"name": "tickAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "1306:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1342,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1282,
																							"src": "1318:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 1343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "1318:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 1344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1318:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "1306:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 1346,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1305:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1341:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "1305:37:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1299:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int16_$",
																	"typeString": "type(int16)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "1299:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1299:44:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1278:65:8"
													},
													{
														"assignments": [
															1352
														],
														"declarations": [
															{
																"constant": false,
																"id": 1352,
																"mutability": "mutable",
																"name": "bitPosAfter",
																"nodeType": "VariableDeclaration",
																"scope": 1474,
																"src": "1357:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1351,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1357:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1364,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1355,
																					"name": "tickAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "1384:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1356,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1282,
																							"src": "1396:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 1357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "1396:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 1358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1396:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "1384:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 1360,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1383:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "323536",
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1418:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "1383:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1377:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1353,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1377:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1377:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1357:65:8"
													},
													{
														"expression": {
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1365,
																"name": "tickAfterInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "1802:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [
																									{
																										"id": 1368,
																										"name": "wordPosAfter",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1338,
																										"src": "1859:12:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									],
																									"expression": {
																										"id": 1366,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1282,
																										"src": "1843:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1367,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickBitmap",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2009,
																									"src": "1843:15:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																										"typeString": "function (int16) view external returns (uint256)"
																									}
																								},
																								"id": 1369,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1843:29:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1372,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "31",
																											"id": 1370,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "1876:1:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"id": 1371,
																											"name": "bitPosAfter",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1352,
																											"src": "1881:11:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "1876:16:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1373,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1875:18:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1843:50:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1375,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1842:52:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1897:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "1842:56:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1378,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1841:58:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							"id": 1383,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1379,
																								"name": "tickAfter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1286,
																								"src": "1921:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "%",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 1380,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1282,
																										"src": "1933:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1381,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickSpacing",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1899,
																									"src": "1933:16:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																										"typeString": "function () view external returns (int24)"
																									}
																								},
																								"id": 1382,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1933:18:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"src": "1921:30:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						}
																					],
																					"id": 1384,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1920:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1956:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "1920:37:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1387,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1919:39:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1841:117:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1389,
																				"name": "tickBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "1979:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 1390,
																				"name": "tickAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1286,
																				"src": "1992:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "1979:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1392,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1978:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1841:161:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1802:200:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1395,
														"nodeType": "ExpressionStatement",
														"src": "1802:200:8"
													},
													{
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1396,
																"name": "tickBeforeInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "2226:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1405,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [
																									{
																										"id": 1399,
																										"name": "wordPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1310,
																										"src": "2284:7:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									],
																									"expression": {
																										"id": 1397,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1282,
																										"src": "2268:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1398,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickBitmap",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2009,
																									"src": "2268:15:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																										"typeString": "function (int16) view external returns (uint256)"
																									}
																								},
																								"id": 1400,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2268:24:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1403,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "31",
																											"id": 1401,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2296:1:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"id": 1402,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1324,
																											"src": "2301:6:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "2296:11:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1404,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2295:13:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2268:40:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1406,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2267:42:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2312:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2267:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1409,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2266:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							"id": 1414,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1410,
																								"name": "tickBefore",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1284,
																								"src": "2336:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "%",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 1411,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1282,
																										"src": "2349:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1412,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickSpacing",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1899,
																									"src": "2349:16:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																										"typeString": "function () view external returns (int24)"
																									}
																								},
																								"id": 1413,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2349:18:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"src": "2336:31:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						}
																					],
																					"id": 1415,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2335:33:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2372:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2335:38:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1418,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2334:40:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2266:108:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1420,
																				"name": "tickBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "2395:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1421,
																				"name": "tickAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1286,
																				"src": "2408:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "2395:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1423,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2394:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2266:152:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2226:192:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1426,
														"nodeType": "ExpressionStatement",
														"src": "2226:192:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1427,
																	"name": "wordPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "2437:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1428,
																	"name": "wordPosAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "2447:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "2437:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1430,
																				"name": "wordPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "2464:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int16",
																					"typeString": "int16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1431,
																				"name": "wordPosAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "2475:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int16",
																					"typeString": "int16"
																				}
																			},
																			"src": "2464:23:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1433,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1324,
																				"src": "2491:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1434,
																				"name": "bitPosAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "2501:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2491:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2464:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1437,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2463:50:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2437:76:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1472,
															"nodeType": "Block",
															"src": "2704:183:8",
															"statements": [
																{
																	"expression": {
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1456,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "2722:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1457,
																			"name": "wordPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "2737:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "2722:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1459,
																	"nodeType": "ExpressionStatement",
																	"src": "2722:27:8"
																},
																{
																	"expression": {
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1460,
																			"name": "bitPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "2767:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1461,
																			"name": "bitPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "2781:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2767:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1463,
																	"nodeType": "ExpressionStatement",
																	"src": "2767:25:8"
																},
																{
																	"expression": {
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1464,
																			"name": "wordPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "2810:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1465,
																			"name": "wordPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "2826:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "2810:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1467,
																	"nodeType": "ExpressionStatement",
																	"src": "2810:23:8"
																},
																{
																	"expression": {
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1468,
																			"name": "bitPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1301,
																			"src": "2851:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1469,
																			"name": "bitPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "2866:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2851:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1471,
																	"nodeType": "ExpressionStatement",
																	"src": "2851:21:8"
																}
															]
														},
														"id": 1473,
														"nodeType": "IfStatement",
														"src": "2433:454:8",
														"trueBody": {
															"id": 1455,
															"nodeType": "Block",
															"src": "2515:183:8",
															"statements": [
																{
																	"expression": {
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1439,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "2533:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1440,
																			"name": "wordPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "2548:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "2533:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1442,
																	"nodeType": "ExpressionStatement",
																	"src": "2533:22:8"
																},
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1443,
																			"name": "bitPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "2573:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1444,
																			"name": "bitPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "2587:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2573:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "2573:20:8"
																},
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "wordPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "2611:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1448,
																			"name": "wordPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "2627:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "2611:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "2611:28:8"
																},
																{
																	"expression": {
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1451,
																			"name": "bitPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1301,
																			"src": "2657:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1452,
																			"name": "bitPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "2672:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2657:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1454,
																	"nodeType": "ExpressionStatement",
																	"src": "2657:26:8"
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "3086:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3086:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3106:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1478,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3106:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1477,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3101:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3101:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3101:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1482,
														"name": "bitPosLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "3122:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3101:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3086:47:8"
											},
											{
												"body": {
													"id": 1535,
													"nodeType": "Block",
													"src": "3181:535:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1488,
																	"name": "wordPosLower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "3313:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1489,
																	"name": "wordPosHigher",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "3329:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "3313:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1508,
															"nodeType": "IfStatement",
															"src": "3309:125:8",
															"trueBody": {
																"id": 1507,
																"nodeType": "Block",
																"src": "3344:90:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1491,
																				"name": "mask",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1476,
																				"src": "3362:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1492,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1476,
																					"src": "3369:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1502,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"arguments": [
																										{
																											"id": 1495,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "3382:7:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 1494,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "3382:7:8",
																												"typeDescriptions": {}
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											}
																										],
																										"id": 1493,
																										"name": "type",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967269,
																										"src": "3377:4:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																											"typeString": "function () pure"
																										}
																									},
																									"id": 1496,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3377:13:8",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_meta_type_t_uint256",
																										"typeString": "type(uint256)"
																									}
																								},
																								"id": 1497,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "max",
																								"nodeType": "MemberAccess",
																								"src": "3377:17:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1500,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "323535",
																											"id": 1498,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "3399:3:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_255_by_1",
																												"typeString": "int_const 255"
																											},
																											"value": "255"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"id": 1499,
																											"name": "bitPosHigher",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1301,
																											"src": "3405:12:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "3399:18:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"id": 1501,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "3398:20:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "3377:41:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1503,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3376:43:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3369:50:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3362:57:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1506,
																		"nodeType": "ExpressionStatement",
																		"src": "3362:57:8"
																	}
																]
															}
														},
														{
															"assignments": [
																1510
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1510,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 1535,
																	"src": "3448:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3448:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1517,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1513,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "3481:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		],
																		"expression": {
																			"id": 1511,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1282,
																			"src": "3465:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
																				"typeString": "contract IUniswapV3Pool"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickBitmap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2009,
																		"src": "3465:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																			"typeString": "function (int16) view external returns (uint256)"
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3465:29:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1515,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "3497:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3465:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3448:53:8"
														},
														{
															"expression": {
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1518,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "3515:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1520,
																			"name": "masked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "3555:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1519,
																		"name": "countOneBits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3542:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
																			"typeString": "function (uint256) pure returns (uint16)"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3542:20:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "3515:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "3515:47:8"
														},
														{
															"expression": {
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3576:14:8",
																"subExpression": {
																	"id": 1524,
																	"name": "wordPosLower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "3576:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "3576:14:8"
														},
														{
															"expression": {
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1527,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "3681:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3693:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1529,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3693:7:8",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 1528,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "3688:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3688:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "3688:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3681:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1534,
															"nodeType": "ExpressionStatement",
															"src": "3681:24:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "wordPosLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "3150:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1486,
														"name": "wordPosHigher",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3166:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "3150:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1536,
												"nodeType": "WhileStatement",
												"src": "3143:573:8"
											},
											{
												"condition": {
													"id": 1537,
													"name": "tickAfterInitialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "3730:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "3726:79:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "3752:53:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1538,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "3766:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3793:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3766:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "3766:28:8"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1544,
													"name": "tickBeforeInitialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1304,
													"src": "3819:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "3815:80:8",
												"trueBody": {
													"id": 1549,
													"nodeType": "Block",
													"src": "3842:53:8",
													"statements": [
														{
															"expression": {
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1545,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "3856:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3883:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3856:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "3856:28:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1551,
													"name": "initializedTicksCrossed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1289,
													"src": "3912:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1552,
												"nodeType": "Return",
												"src": "3905:30:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "170:462:8",
										"text": "@dev This function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter.\n When tickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the\n direction of the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do\n want to count tickAfter. The opposite is true if we are swapping downwards."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "countInitializedTicksCrossed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "684:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1281,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1606,
													"src": "684:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1606",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "tickBefore",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "713:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1283,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "713:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "tickAfter",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "739:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1285,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:86:8"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "784:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1288,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "784:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:32:8"
									},
									"scope": 1584,
									"src": "637:3305:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "4011:134:8",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "bits",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "4021:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1561,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4021:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"hexValue": "30",
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4035:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4021:15:8"
											},
											{
												"body": {
													"id": 1578,
													"nodeType": "Block",
													"src": "4061:57:8",
													"statements": [
														{
															"expression": {
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4075:6:8",
																"subExpression": {
																	"id": 1568,
																	"name": "bits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "4075:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1570,
															"nodeType": "ExpressionStatement",
															"src": "4075:6:8"
														},
														{
															"expression": {
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1571,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "4095:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "&=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1572,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "4101:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4105:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4101:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1575,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4100:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4095:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "4095:12:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1565,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "4053:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4058:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "WhileStatement",
												"src": "4046:72:8"
											},
											{
												"expression": {
													"id": 1580,
													"name": "bits",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1562,
													"src": "4134:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1581,
												"nodeType": "Return",
												"src": "4127:11:8"
											}
										]
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "countOneBits",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "3970:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:11:8"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "4003:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1558,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4003:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:8:8"
									},
									"scope": 1584,
									"src": "3948:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1585,
							"src": "139:4008:8"
						}
					],
					"src": "45:4103:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1606
						],
						"IUniswapV3PoolActions": [
							1716
						],
						"IUniswapV3PoolDerivedState": [
							1747
						],
						"IUniswapV3PoolEvents": [
							1866
						],
						"IUniswapV3PoolImmutables": [
							1906
						],
						"IUniswapV3PoolOwnerActions": [
							1932
						],
						"IUniswapV3PoolState": [
							2040
						]
					},
					"id": 1607,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1586,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 1587,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1907,
							"src": "71:45:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 1588,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 2041,
							"src": "117:40:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 1589,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1748,
							"src": "158:47:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 1590,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1717,
							"src": "206:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 1591,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1933,
							"src": "249:47:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 1592,
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1867,
							"src": "297:41:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1594,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1906,
										"src": "637:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$1906",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 1595,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:9"
								},
								{
									"baseName": {
										"id": 1596,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2040,
										"src": "667:19:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$2040",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 1597,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:9"
								},
								{
									"baseName": {
										"id": 1598,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1747,
										"src": "692:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$1747",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 1599,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:9"
								},
								{
									"baseName": {
										"id": 1600,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1716,
										"src": "724:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$1716",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 1601,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:9"
								},
								{
									"baseName": {
										"id": 1602,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1932,
										"src": "751:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$1932",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 1603,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:9"
								},
								{
									"baseName": {
										"id": 1604,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1866,
										"src": "783:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$1866",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:9"
								}
							],
							"contractDependencies": [
								1716,
								1747,
								1866,
								1906,
								1932,
								2040
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1593,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:9",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1606,
							"linearizedBaseContracts": [
								1606,
								1866,
								1932,
								1716,
								1747,
								2040,
								1906
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1607,
							"src": "605:203:9"
						}
					],
					"src": "45:764:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							1620
						]
					},
					"id": 1621,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1608,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1609,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:10",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1620,
							"linearizedBaseContracts": [
								1620
							],
							"name": "IUniswapV3SwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:10",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1197:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1611,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1226:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1255:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:10"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:10"
									},
									"scope": 1620,
									"src": "1157:133:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1621,
							"src": "215:1077:10"
						}
					],
					"src": "45:1248:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1716
						]
					},
					"id": 1717,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1622,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1623,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:11",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1716,
							"linearizedBaseContracts": [
								1716
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:11",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "442:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1625,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:11"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:11"
									},
									"scope": 1716,
									"src": "422:51:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:11",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1536:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1563:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1633,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1588:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1635,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1613:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1637,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1637:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:11"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1681:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "1698:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:11"
									},
									"scope": 1716,
									"src": "1513:202:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:11",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2805:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2832:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1651,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2857:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1653,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2882:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1655,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2916:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1657,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:11"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2965:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1660,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2982:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1662,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:11"
									},
									"scope": 1716,
									"src": "2779:220:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:11",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3664:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1667,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3689:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1669,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3714:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1671,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:11"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3753:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3770:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:11"
									},
									"scope": 1716,
									"src": "3641:146:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:11",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4836:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4863:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4888:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1685,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4920:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1687,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4955:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:11"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4999:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1692,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5015:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:11"
									},
									"scope": 1716,
									"src": "4813:218:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:11",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "5723:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "5750:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "5775:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "5800:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:11"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:11"
									},
									"scope": 1716,
									"src": "5699:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:11",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6257:33:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1711,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:11"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:11"
									},
									"scope": 1716,
									"src": "6213:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1717,
							"src": "173:6130:11"
						}
					],
					"src": "45:6259:11"
				},
				"id": 11
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1747
						]
					},
					"id": 1748,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1718,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1719,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:12",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1747,
							"linearizedBaseContracts": [
								1747
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:12",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "1403:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1721,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1722,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:12"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "1481:30:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1725,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1726,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "1513:51:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1728,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1729,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:12"
									},
									"scope": 1747,
									"src": "1386:180:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:12",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2383:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1734,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2400:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1736,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2477:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1739,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2517:37:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1741,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2568:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1743,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:12"
									},
									"scope": 1747,
									"src": "2348:251:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1748,
							"src": "293:2308:12"
						}
					],
					"src": "45:2557:12"
				},
				"id": 12
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1866
						]
					},
					"id": 1867,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1749,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1750,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:13",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1866,
							"linearizedBaseContracts": [
								1866
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:13",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 1757,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "562:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1752,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "584:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1754,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:13"
									},
									"src": "545:51:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:13",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 1774,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1178:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1202:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1233:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1763,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1266:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1765,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1299:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1767,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1323:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1348:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:13"
									},
									"src": "1158:212:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:13",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 1789,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1897:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1928:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1955:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1780,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "1988:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1782,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2021:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1784,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2046:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1786,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:13"
									},
									"src": "1874:194:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:13",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 1804,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2622:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2653:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1793,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2686:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1795,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2719:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1797,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2743:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "2768:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:13"
									},
									"src": "2602:188:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:13",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 1821,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3421:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3453:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3488:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1810,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3512:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1812,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3536:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1814,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3566:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1816,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "3593:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1818,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:13"
									},
									"src": "3401:209:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:13",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 1836,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4204:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4236:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4271:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4296:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4321:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4344:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:13"
									},
									"src": "4183:181:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:13",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 1843,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4876:36:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1838,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4922:36:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1840,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:13"
									},
									"src": "4826:139:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:13",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 1854,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "5367:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1845,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "5390:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1847,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "5413:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1849,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "5436:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1851,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:13"
									},
									"src": "5346:113:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:13",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 1865,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5876:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5900:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5927:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1860,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5944:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1862,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:13"
									},
									"src": "5854:107:13"
								}
							],
							"scope": 1867,
							"src": "159:5804:13"
						}
					],
					"src": "45:5919:13"
				},
				"id": 13
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1906
						]
					},
					"id": 1907,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1868,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1869,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:14",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1906,
							"linearizedBaseContracts": [
								1906
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:14",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:14"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "450:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:14"
									},
									"scope": 1906,
									"src": "408:51:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:14",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:14"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "624:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:14"
									},
									"scope": 1906,
									"src": "583:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:14",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:14"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "799:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:14"
									},
									"scope": 1906,
									"src": "758:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:14",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:14"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "941:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1890,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:14"
									},
									"scope": 1906,
									"src": "903:46:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:14",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:14"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1364:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1896,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:14"
									},
									"scope": 1906,
									"src": "1318:53:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:14",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:14"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1799:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1902,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:14"
									},
									"scope": 1906,
									"src": "1745:63:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1907,
							"src": "224:1586:14"
						}
					],
					"src": "45:1766:14"
				},
				"id": 14
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1932
						]
					},
					"id": 1933,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1908,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1909,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:15",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1932,
							"linearizedBaseContracts": [
								1932
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:15",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "464:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1911,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "484:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1913,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:15"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:15"
									},
									"scope": 1932,
									"src": "440:73:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:15",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1041:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1068:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1921,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1102:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1923,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:15"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1151:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1926,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1168:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1928,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:15"
									},
									"scope": 1932,
									"src": "1007:178:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1933,
							"src": "187:1000:15"
						}
					],
					"src": "45:1143:15"
				},
				"id": 15
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2040
						]
					},
					"id": 2041,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1934,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1935,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:16",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2040,
							"linearizedBaseContracts": [
								2040
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:16",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:16"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1498:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1938,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1532:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1940,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1556:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1942,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1593:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1944,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1636:33:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1946,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1683:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1714:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:16"
									},
									"scope": 2040,
									"src": "1421:317:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:16",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:16"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1972:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:16"
									},
									"scope": 2040,
									"src": "1917:64:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:16",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:16"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2215:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:16"
									},
									"scope": 2040,
									"src": "2160:64:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:16",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:16"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2429:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1968,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2445:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1970,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:16"
									},
									"scope": 2040,
									"src": "2382:79:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:16",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:16"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2666:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1976,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:16"
									},
									"scope": 2040,
									"src": "2622:53:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:16",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "3945:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1981,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:16"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4017:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1984,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4053:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1986,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4086:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4129:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4172:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1992,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4213:38:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1994,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4265:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1996,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "4300:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:16"
									},
									"scope": 2040,
									"src": "3930:397:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:16",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "4457:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2003,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:16"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "4500:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:16"
									},
									"scope": 2040,
									"src": "4437:72:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:16",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5239:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2011,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:16"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5312:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2014,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5344:32:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5390:32:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5436:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2020,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "5469:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2022,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:16"
									},
									"scope": 2040,
									"src": "5220:279:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:16",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6281:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:16"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6356:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2030,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6391:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2032,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6425:41:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2034,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "6480:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:16"
									},
									"scope": 2040,
									"src": "6259:248:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2041,
							"src": "240:6269:16"
						}
					],
					"src": "45:6465:16"
				},
				"id": 16
			},
			"@uniswap/v3-core/contracts/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							2319
						]
					},
					"id": 2320,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2042,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2043,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:17",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 2319,
							"linearizedBaseContracts": [
								2319
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "742:660:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2052,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "760:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "752:14:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2057,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "781:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"nodeType": "IfStatement",
												"src": "777:102:17",
												"trueBody": {
													"id": 2068,
													"nodeType": "Block",
													"src": "823:56:17",
													"statements": [
														{
															"expression": {
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2060,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "837:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "837:9:17"
														},
														{
															"expression": {
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2064,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "860:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2067,
															"nodeType": "ExpressionStatement",
															"src": "860:8:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2070,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "892:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2082,
												"nodeType": "IfStatement",
												"src": "888:84:17",
												"trueBody": {
													"id": 2081,
													"nodeType": "Block",
													"src": "918:54:17",
													"statements": [
														{
															"expression": {
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2073,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "932:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "932:8:17"
														},
														{
															"expression": {
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2077,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "954:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2080,
															"nodeType": "ExpressionStatement",
															"src": "954:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2083,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "985:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "981:76:17",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "1003:54:17",
													"statements": [
														{
															"expression": {
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2086,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1017:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2089,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:17"
														},
														{
															"expression": {
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2090,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1039:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2093,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2096,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "1070:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "1066:72:17",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "1084:54:17",
													"statements": [
														{
															"expression": {
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2099,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1098:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2102,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:17"
														},
														{
															"expression": {
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2103,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1120:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2106,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2109,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "1151:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "IfStatement",
												"src": "1147:68:17",
												"trueBody": {
													"id": 2120,
													"nodeType": "Block",
													"src": "1163:52:17",
													"statements": [
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2112,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1177:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:17"
														},
														{
															"expression": {
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2116,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1198:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2119,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2122,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "1228:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "1224:67:17",
												"trueBody": {
													"id": 2133,
													"nodeType": "Block",
													"src": "1239:52:17",
													"statements": [
														{
															"expression": {
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2125,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1253:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2128,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:17"
														},
														{
															"expression": {
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2129,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1274:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2132,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2135,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "1304:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2147,
												"nodeType": "IfStatement",
												"src": "1300:66:17",
												"trueBody": {
													"id": 2146,
													"nodeType": "Block",
													"src": "1314:52:17",
													"statements": [
														{
															"expression": {
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2138,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1328:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2141,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:17"
														},
														{
															"expression": {
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2142,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "1349:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2145,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2148,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "1379:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2155,
												"nodeType": "IfStatement",
												"src": "1375:20:17",
												"trueBody": {
													"expression": {
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2151,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "1389:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2154,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:17"
												}
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:17",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "699:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:17"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "733:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2048,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:17"
									},
									"scope": 2319,
									"src": "671:731:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "1965:822:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2166,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "1983:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:17"
											},
											{
												"expression": {
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2171,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "2000:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2175,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2021:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 2177,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 2176,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2193,
													"nodeType": "Block",
													"src": "2087:34:17",
													"statements": [
														{
															"expression": {
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2189,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2101:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2192,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:17"
														}
													]
												},
												"id": 2194,
												"nodeType": "IfStatement",
												"src": "2017:104:17",
												"trueBody": {
													"id": 2188,
													"nodeType": "Block",
													"src": "2048:33:17",
													"statements": [
														{
															"expression": {
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2184,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2062:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2187,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2195,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2134:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 2197,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 2196,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "2198:33:17",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2209,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2212:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2212,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:17"
														}
													]
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "2130:101:17",
												"trueBody": {
													"id": 2208,
													"nodeType": "Block",
													"src": "2160:32:17",
													"statements": [
														{
															"expression": {
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2204,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2174:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2207,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2215,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2244:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 2217,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 2216,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2233,
													"nodeType": "Block",
													"src": "2308:33:17",
													"statements": [
														{
															"expression": {
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2229,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2322:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2232,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:17"
														}
													]
												},
												"id": 2234,
												"nodeType": "IfStatement",
												"src": "2240:101:17",
												"trueBody": {
													"id": 2228,
													"nodeType": "Block",
													"src": "2270:32:17",
													"statements": [
														{
															"expression": {
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2224,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2284:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2227,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2235,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2354:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2237,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 2236,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2253,
													"nodeType": "Block",
													"src": "2418:33:17",
													"statements": [
														{
															"expression": {
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2249,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2432:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2252,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:17"
														}
													]
												},
												"id": 2254,
												"nodeType": "IfStatement",
												"src": "2350:101:17",
												"trueBody": {
													"id": 2248,
													"nodeType": "Block",
													"src": "2380:32:17",
													"statements": [
														{
															"expression": {
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2244,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2394:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2247,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2255,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2464:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 2257,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 2256,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2273,
													"nodeType": "Block",
													"src": "2526:32:17",
													"statements": [
														{
															"expression": {
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2269,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2540:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2272,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:17"
														}
													]
												},
												"id": 2274,
												"nodeType": "IfStatement",
												"src": "2460:98:17",
												"trueBody": {
													"id": 2268,
													"nodeType": "Block",
													"src": "2489:31:17",
													"statements": [
														{
															"expression": {
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2264,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2503:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2267,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2275,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2571:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2289,
													"nodeType": "Block",
													"src": "2621:32:17",
													"statements": [
														{
															"expression": {
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2285,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2635:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2288,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:17"
														}
													]
												},
												"id": 2290,
												"nodeType": "IfStatement",
												"src": "2567:86:17",
												"trueBody": {
													"id": 2284,
													"nodeType": "Block",
													"src": "2584:31:17",
													"statements": [
														{
															"expression": {
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2280,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2598:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2283,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2291,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2666:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2305,
													"nodeType": "Block",
													"src": "2716:32:17",
													"statements": [
														{
															"expression": {
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2301,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "2730:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2304,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:17"
														}
													]
												},
												"id": 2306,
												"nodeType": "IfStatement",
												"src": "2662:86:17",
												"trueBody": {
													"id": 2300,
													"nodeType": "Block",
													"src": "2679:31:17",
													"statements": [
														{
															"expression": {
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2296,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2693:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2299,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2307,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2761:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "2757:23:17",
												"trueBody": {
													"expression": {
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2312,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "2774:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2315,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:17"
												}
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:17",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "1922:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:17"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "1956:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2162,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:17"
									},
									"scope": 2319,
									"src": "1893:894:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2320,
							"src": "187:2602:17"
						}
					],
					"src": "45:2745:17"
				},
				"id": 17
			},
			"@uniswap/v3-core/contracts/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							2389
						]
					},
					"id": 2390,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2321,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2322,
								"nodeType": "StructuredDocumentation",
								"src": "71:94:18",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 2389,
							"linearizedBaseContracts": [
								2389
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2342,
										"nodeType": "Block",
										"src": "421:47:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2331,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2328,
																			"src": "440:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2334,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2325,
																					"src": "452:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "444:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2332,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "444:7:18",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "444:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "440:14:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2337,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "439:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2338,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "459:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "431:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:30:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2341,
												"nodeType": "ExpressionStatement",
												"src": "431:30:18"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "188:164:18",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 2343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "376:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:11:18"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "410:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2327,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:11:18"
									},
									"scope": 2389,
									"src": "357:111:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "713:46:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "732:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2355,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2346,
																					"src": "743:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 2354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "736:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 2353,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "736:6:18",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "736:9:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "732:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "731:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2359,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "750:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "731:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "723:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:29:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "723:29:18"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "474:173:18",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "670:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2345,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "670:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:10:18"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "703:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2348,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:10:18"
									},
									"scope": 2389,
									"src": "652:107:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "986:59:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2373,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "1004:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1011:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "1008:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "1004:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "996:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:19:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "996:19:18"
											},
											{
												"expression": {
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2380,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "1025:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2383,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "1036:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1029:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2381,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1029:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1029:9:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1025:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "1025:13:18"
											}
										]
									},
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "765:154:18",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "942:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:11:18"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "976:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2369,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:10:18"
									},
									"scope": 2389,
									"src": "924:121:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2390,
							"src": "165:882:18"
						}
					],
					"src": "45:1003:18"
				},
				"id": 18
			},
			"@uniswap/v3-core/contracts/libraries/TickBitmap.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							2319
						],
						"TickBitmap": [
							2645
						]
					},
					"id": 2646,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2391,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:19"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 2392,
							"nodeType": "ImportDirective",
							"scope": 2646,
							"sourceUnit": 2320,
							"src": "63:23:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2393,
								"nodeType": "StructuredDocumentation",
								"src": "88:243:19",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 2645,
							"linearizedBaseContracts": [
								2645
							],
							"name": "TickBitmap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2421,
										"nodeType": "Block",
										"src": "767:79:19",
										"statements": [
											{
												"expression": {
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2403,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "777:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2406,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "793:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "801:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "793:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "787:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 2404,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "787:5:19",
																"typeDescriptions": {}
															}
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "787:16:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "777:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "777:26:19"
											},
											{
												"expression": {
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2412,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "813:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2415,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "828:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "323536",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "835:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "828:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "822:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 2413,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "822:5:19",
																"typeDescriptions": {}
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "822:17:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "813:26:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "813:26:19"
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "356:325:19",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 2422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "704:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2395,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "704:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:12:19"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "wordPos",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "738:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2398,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "738:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "bitPos",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "753:12:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2400,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "753:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:29:19"
									},
									"scope": 2645,
									"src": "686:160:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "1230:220:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2435,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "1248:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 2436,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "1255:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1248:18:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1270:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1248:23:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:32:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "1240:32:19"
											},
											{
												"assignments": [
													2443,
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2443,
														"mutability": "mutable",
														"name": "wordPos",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "1317:13:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 2442,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1317:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "bitPos",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "1332:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2444,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1332:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2451,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "1357:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2448,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "1364:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1357:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 2446,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "1348:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:28:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:60:19"
											},
											{
												"assignments": [
													2453
												],
												"declarations": [
													{
														"constant": false,
														"id": 2453,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "1386:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2452,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1386:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1401:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2455,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "1406:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1401:11:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1386:26:19"
											},
											{
												"expression": {
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2458,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "1422:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 2460,
														"indexExpression": {
															"id": 2459,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "1427:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1422:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 2461,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "1439:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:21:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "1422:21:19"
											}
										]
									},
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "852:245:19",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1129:38:19",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 2426,
													"keyType": {
														"id": 2424,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1137:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1129:25:19",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 2425,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1146:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1177:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2428,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1197:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2430,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1197:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:101:19"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:0:19"
									},
									"scope": 2645,
									"src": "1102:348:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2643,
										"nodeType": "Block",
										"src": "2402:1707:19",
										"statements": [
											{
												"assignments": [
													2484
												],
												"declarations": [
													{
														"constant": false,
														"id": 2484,
														"mutability": "mutable",
														"name": "compressed",
														"nodeType": "VariableDeclaration",
														"scope": 2643,
														"src": "2412:16:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2483,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2412:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2488,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2485,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "2431:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2486,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2474,
														"src": "2438:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2431:18:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2412:37:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2489,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "2463:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2470:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2463:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2492,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "2475:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2493,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "2482:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2475:18:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2497:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2475:23:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2463:35:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2501,
												"nodeType": "IfStatement",
												"src": "2459:53:19",
												"trueBody": {
													"expression": {
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2500:12:19",
														"subExpression": {
															"id": 2498,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "2500:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2500,
													"nodeType": "ExpressionStatement",
													"src": "2500:12:19"
												}
											},
											{
												"condition": {
													"id": 2502,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2476,
													"src": "2562:3:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2641,
													"nodeType": "Block",
													"src": "3289:814:19",
													"statements": [
														{
															"assignments": [
																2569,
																2571
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2569,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 2641,
																	"src": "3401:13:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 2568,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3401:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2571,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 2641,
																	"src": "3416:12:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2570,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3416:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2577,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2573,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "3441:10:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3454:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3441:14:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2572,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2422,
																	"src": "3432:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3432:24:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3400:56:19"
														},
														{
															"assignments": [
																2579
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2579,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 2641,
																	"src": "3528:12:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2578,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3528:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2588,
															"initialValue": {
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3543:20:19",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2580,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3546:1:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2581,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2571,
																							"src": "3551:6:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3546:11:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2583,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3545:13:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3561:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3545:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2586,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3544:19:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3528:35:19"
														},
														{
															"assignments": [
																2590
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2590,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 2641,
																	"src": "3577:14:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2589,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3577:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2596,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2591,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2470,
																		"src": "3594:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 2593,
																	"indexExpression": {
																		"id": 2592,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "3599:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3594:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2594,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2579,
																	"src": "3610:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3594:20:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3577:37:19"
														},
														{
															"expression": {
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2597,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "3739:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2598,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "3753:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3763:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3753:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3739:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2602,
															"nodeType": "ExpressionStatement",
															"src": "3739:25:19"
														},
														{
															"expression": {
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2603,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "3888:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 2604,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2481,
																		"src": "3895:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 2623,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2621,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2484,
																							"src": "4029:10:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2622,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4042:1:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4029:14:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2632,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 2628,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "4057:5:19",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												},
																												"typeName": {
																													"id": 2627,
																													"name": "uint8",
																													"nodeType": "ElementaryTypeName",
																													"src": "4057:5:19",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												}
																											],
																											"id": 2626,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "4052:4:19",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 2629,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4052:11:19",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint8",
																											"typeString": "type(uint8)"
																										}
																									},
																									"id": 2630,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "4052:15:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 2631,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2571,
																									"src": "4070:6:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "4052:24:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 2625,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4046:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2624,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4046:5:19",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4046:31:19",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4029:48:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2635,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4028:50:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2636,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "4081:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4028:64:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3895:197:19",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 2607,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2605,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2484,
																							"src": "3926:10:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2606,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3939:1:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3926:14:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2615,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 2612,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2590,
																											"src": "3977:6:19",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2610,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2319,
																											"src": "3949:7:19",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$2319_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 2611,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "leastSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2318,
																										"src": "3949:27:19",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 2613,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3949:35:19",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 2614,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2571,
																									"src": "3987:6:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3949:44:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 2609,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3943:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2608,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3943:5:19",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2616,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3943:51:19",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3926:68:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2618,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3925:70:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2619,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "3998:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3925:84:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3888:204:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2640,
															"nodeType": "ExpressionStatement",
															"src": "3888:204:19"
														}
													]
												},
												"id": 2642,
												"nodeType": "IfStatement",
												"src": "2558:1545:19",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "2567:716:19",
													"statements": [
														{
															"assignments": [
																2504,
																2506
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2504,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 2567,
																	"src": "2582:13:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 2503,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2582:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2506,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 2567,
																	"src": "2597:12:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2505,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2597:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2510,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2508,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2484,
																		"src": "2622:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2507,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2422,
																	"src": "2613:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2613:20:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2581:52:19"
														},
														{
															"assignments": [
																2512
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2512,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 2567,
																	"src": "2714:12:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2511,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2714:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2524,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2730:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2514,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "2735:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2730:11:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2516,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2729:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2745:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2729:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2750:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2520,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2506,
																				"src": "2755:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2750:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2522,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2749:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2729:33:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2714:48:19"
														},
														{
															"assignments": [
																2526
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2526,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 2567,
																	"src": "2776:14:19",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2525,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2776:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2532,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2527,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2470,
																		"src": "2793:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 2529,
																	"indexExpression": {
																		"id": 2528,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2504,
																		"src": "2798:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2793:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2530,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2512,
																	"src": "2809:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2793:20:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2776:37:19"
														},
														{
															"expression": {
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2533,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "2946:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2534,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2526,
																		"src": "2960:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2970:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2960:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2946:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2538,
															"nodeType": "ExpressionStatement",
															"src": "2946:25:19"
														},
														{
															"expression": {
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2539,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "3095:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 2540,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2481,
																		"src": "3102:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2555,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2484,
																						"src": "3231:10:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 2558,
																								"name": "bitPos",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2506,
																								"src": "3250:6:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 2557,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3244:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2556,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3244:5:19",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3244:13:19",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3231:26:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2561,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3230:28:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2562,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "3261:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3230:42:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3102:170:19",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2541,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2484,
																						"src": "3133:10:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 2549,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2544,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2506,
																									"src": "3152:6:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"arguments": [
																										{
																											"id": 2547,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2526,
																											"src": "3188:6:19",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2545,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2319,
																											"src": "3161:7:19",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$2319_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 2546,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mostSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2157,
																										"src": "3161:26:19",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 2548,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3161:34:19",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3152:43:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 2543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3146:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2542,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3146:5:19",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3146:50:19",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3133:63:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2552,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3132:65:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2553,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "3200:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3132:79:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3095:177:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2566,
															"nodeType": "ExpressionStatement",
															"src": "3095:177:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "1456:727:19",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 2644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2239:38:19",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 2469,
													"keyType": {
														"id": 2467,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2247:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2239:25:19",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 2468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2256:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2287:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2471,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2287:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2307:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2473,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2307:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "lte",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2334:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2334:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:119:19"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2372:10:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2478,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2372:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "2384:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2384:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:30:19"
									},
									"scope": 2645,
									"src": "2188:1921:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2646,
							"src": "331:3780:19"
						}
					],
					"src": "37:4075:19"
				},
				"id": 19
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							3180
						]
					},
					"id": 3181,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2647,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2648,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:20",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 3180,
							"linearizedBaseContracts": [
								3180
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:20",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 2653,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 3180,
									"src": "449:42:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2650,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:20",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2652,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:20",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 2651,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:20",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2654,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:20",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 2658,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 3180,
									"src": "609:44:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2655,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:20",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:20",
										"subExpression": {
											"id": 2656,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2653,
											"src": "645:8:20",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2659,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:20",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 2662,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 3180,
									"src": "781:53:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2660,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 2661,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:20",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 2666,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 3180,
									"src": "961:92:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2664,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 2665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "1447:2495:20",
										"statements": [
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 3039,
														"src": "1457:15:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2695,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2676,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2669,
															"src": "1475:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2691,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2669,
																		"src": "1526:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2689,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2687,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:20",
													"trueExpression": {
														"arguments": [
															{
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:20",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2683,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "1502:4:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2681,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:20",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2679,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2697,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "1550:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2700,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2658,
																		"src": "1569:8:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:20",
																		"typeDescriptions": {}
																	}
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:20",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 2696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:20"
											},
											{
												"assignments": [
													2707
												],
												"declarations": [
													{
														"constant": false,
														"id": 2707,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 3039,
														"src": "1595:13:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2716,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2708,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "1611:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:20",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 2713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:20"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2717,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "1718:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2731,
												"nodeType": "IfStatement",
												"src": "1714:83:20",
												"trueBody": {
													"expression": {
														"id": 2729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2722,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "1738:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2723,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "1747:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2726,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2730,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2732,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "1811:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2746,
												"nodeType": "IfStatement",
												"src": "1807:83:20",
												"trueBody": {
													"expression": {
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2737,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "1831:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2738,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "1840:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 2739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2745,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2747,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "1904:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2761,
												"nodeType": "IfStatement",
												"src": "1900:83:20",
												"trueBody": {
													"expression": {
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2752,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "1924:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2753,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "1933:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2760,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2762,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "1997:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2776,
												"nodeType": "IfStatement",
												"src": "1993:84:20",
												"trueBody": {
													"expression": {
														"id": 2774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2767,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2018:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2768,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2027:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2775,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2777,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2091:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2791,
												"nodeType": "IfStatement",
												"src": "2087:84:20",
												"trueBody": {
													"expression": {
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2782,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2112:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2783,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2121:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 2784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2786,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2790,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2792,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2185:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2806,
												"nodeType": "IfStatement",
												"src": "2181:84:20",
												"trueBody": {
													"expression": {
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2797,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2206:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2798,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2215:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2805,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2807,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2279:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2821,
												"nodeType": "IfStatement",
												"src": "2275:84:20",
												"trueBody": {
													"expression": {
														"id": 2819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2812,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2300:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2813,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2309:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2816,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2820,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2822,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2373:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2836,
												"nodeType": "IfStatement",
												"src": "2369:85:20",
												"trueBody": {
													"expression": {
														"id": 2834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2827,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2395:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2828,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2404:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2835,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2837,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2468:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2851,
												"nodeType": "IfStatement",
												"src": "2464:85:20",
												"trueBody": {
													"expression": {
														"id": 2849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2842,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2490:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2843,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2499:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2846,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2850,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2852,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2563:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2866,
												"nodeType": "IfStatement",
												"src": "2559:85:20",
												"trueBody": {
													"expression": {
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2857,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2585:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2858,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2594:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2865,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2867,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2658:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2881,
												"nodeType": "IfStatement",
												"src": "2654:85:20",
												"trueBody": {
													"expression": {
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2872,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2680:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2873,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2689:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2880,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2882,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2753:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2896,
												"nodeType": "IfStatement",
												"src": "2749:86:20",
												"trueBody": {
													"expression": {
														"id": 2894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2887,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2776:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2888,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2785:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2895,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2897,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2849:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2911,
												"nodeType": "IfStatement",
												"src": "2845:86:20",
												"trueBody": {
													"expression": {
														"id": 2909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2902,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2872:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2903,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2881:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2906,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2910,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2912,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2945:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2926,
												"nodeType": "IfStatement",
												"src": "2941:86:20",
												"trueBody": {
													"expression": {
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2917,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "2968:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2918,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "2977:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2921,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2925,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2927,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3041:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2941,
												"nodeType": "IfStatement",
												"src": "3037:86:20",
												"trueBody": {
													"expression": {
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2932,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3064:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2933,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "3073:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2936,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2940,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2942,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3137:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2956,
												"nodeType": "IfStatement",
												"src": "3133:86:20",
												"trueBody": {
													"expression": {
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2947,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3161:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2948,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "3170:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2951,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2955,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2957,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3233:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2971,
												"nodeType": "IfStatement",
												"src": "3229:85:20",
												"trueBody": {
													"expression": {
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2962,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3257:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2963,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "3266:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2966,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2970,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2972,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3328:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2986,
												"nodeType": "IfStatement",
												"src": "3324:83:20",
												"trueBody": {
													"expression": {
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2977,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3352:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2978,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "3361:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2985,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2987,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "3421:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3001,
												"nodeType": "IfStatement",
												"src": "3417:78:20",
												"trueBody": {
													"expression": {
														"id": 2999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2992,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3445:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2993,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2707,
																			"src": "3454:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2996,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3000,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:20"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2669,
														"src": "3510:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3015,
												"nodeType": "IfStatement",
												"src": "3506:47:20",
												"trueBody": {
													"expression": {
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3005,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "3520:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 3007,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:20",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 3006,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3011,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2707,
																"src": "3548:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3014,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:20"
												}
											},
											{
												"expression": {
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3016,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "3863:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3019,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2707,
																				"src": "3887:5:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3022,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3028,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3023,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2707,
																						"src": "3903:5:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 3026,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 3024,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:20",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 3025,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:20",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:20",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 3027,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 3029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 3032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:20",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 3031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 3034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 3017,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 3036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 3038,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:20"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:20",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "1390:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2668,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:20"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "1425:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2671,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:20"
									},
									"scope": 3180,
									"src": "1362:2580:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3178,
										"nodeType": "Block",
										"src": "4446:4196:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3049,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3043,
																	"src": "4563:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3050,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2662,
																	"src": "4579:14:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3052,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3043,
																	"src": "4597:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3053,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "4612:14:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 3048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:20"
											},
											{
												"assignments": [
													3060
												],
												"declarations": [
													{
														"constant": false,
														"id": 3060,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "4642:13:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3059,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3067,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3063,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3043,
																"src": "4666:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3061,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:20",
																"typeDescriptions": {}
															}
														},
														"id": 3064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:20"
											},
											{
												"assignments": [
													3069
												],
												"declarations": [
													{
														"constant": false,
														"id": 3069,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "4696:9:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3068,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3071,
												"initialValue": {
													"id": 3070,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3060,
													"src": "4708:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:20"
											},
											{
												"assignments": [
													3073
												],
												"declarations": [
													{
														"constant": false,
														"id": 3073,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "4723:11:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3075,
												"initialValue": {
													"hexValue": "30",
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:20",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:20",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:20",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:20",
														"valueSize": 1
													}
												],
												"id": 3076,
												"nodeType": "InlineAssembly",
												"src": "4749:148:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:20",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:20",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:20",
														"valueSize": 1
													}
												],
												"id": 3077,
												"nodeType": "InlineAssembly",
												"src": "4906:132:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:20",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:20",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:20",
														"valueSize": 1
													}
												],
												"id": 3078,
												"nodeType": "InlineAssembly",
												"src": "5047:124:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:20",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:20",
														"valueSize": 1
													}
												],
												"id": 3079,
												"nodeType": "InlineAssembly",
												"src": "5180:120:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:20",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:20",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:20",
														"valueSize": 1
													}
												],
												"id": 3080,
												"nodeType": "InlineAssembly",
												"src": "5309:118:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:20",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:20",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:20",
														"valueSize": 1
													}
												],
												"id": 3081,
												"nodeType": "InlineAssembly",
												"src": "5436:117:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:20",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:20",
														"valueSize": 1
													}
												],
												"id": 3082,
												"nodeType": "InlineAssembly",
												"src": "5562:117:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:20",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:20",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:20"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:20"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3073,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:20",
														"valueSize": 1
													}
												],
												"id": 3083,
												"nodeType": "InlineAssembly",
												"src": "5688:82:20"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3084,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "5784:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 3103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3096,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "5835:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3097,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3060,
																"src": "5839:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 3098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3099,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3073,
																			"src": "5855:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3104,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:20"
												},
												"id": 3105,
												"nodeType": "IfStatement",
												"src": "5780:79:20",
												"trueBody": {
													"expression": {
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3087,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "5796:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3088,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3060,
																"src": "5800:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3089,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3073,
																			"src": "5810:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 3090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3092,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3095,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:20"
												}
											},
											{
												"assignments": [
													3107
												],
												"declarations": [
													{
														"constant": false,
														"id": 3107,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "5870:12:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3106,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3110,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3073,
																			"src": "5893:3:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3108,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:20",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3114,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 3115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:20",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:20",
														"valueSize": 1
													}
												],
												"id": 3118,
												"nodeType": "InlineAssembly",
												"src": "5921:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:20",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:20",
														"valueSize": 1
													}
												],
												"id": 3119,
												"nodeType": "InlineAssembly",
												"src": "6090:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:20",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:20",
														"valueSize": 1
													}
												],
												"id": 3120,
												"nodeType": "InlineAssembly",
												"src": "6259:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:20",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:20",
														"valueSize": 1
													}
												],
												"id": 3121,
												"nodeType": "InlineAssembly",
												"src": "6428:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:20",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:20",
														"valueSize": 1
													}
												],
												"id": 3122,
												"nodeType": "InlineAssembly",
												"src": "6597:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:20",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:20",
														"valueSize": 1
													}
												],
												"id": 3123,
												"nodeType": "InlineAssembly",
												"src": "6766:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:20",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:20",
														"valueSize": 1
													}
												],
												"id": 3124,
												"nodeType": "InlineAssembly",
												"src": "6935:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:20",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:20",
														"valueSize": 1
													}
												],
												"id": 3125,
												"nodeType": "InlineAssembly",
												"src": "7104:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:20",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:20",
														"valueSize": 1
													}
												],
												"id": 3126,
												"nodeType": "InlineAssembly",
												"src": "7273:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:20",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:20",
														"valueSize": 1
													}
												],
												"id": 3127,
												"nodeType": "InlineAssembly",
												"src": "7442:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:20",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:20",
														"valueSize": 1
													}
												],
												"id": 3128,
												"nodeType": "InlineAssembly",
												"src": "7611:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:20",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:20",
														"valueSize": 1
													}
												],
												"id": 3129,
												"nodeType": "InlineAssembly",
												"src": "7780:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:20",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:20"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:20",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:20"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:20",
														"valueSize": 1
													}
												],
												"id": 3130,
												"nodeType": "InlineAssembly",
												"src": "7949:160:20"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:20",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:20"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:20"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:20",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:20"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:20",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:20"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:20"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:20",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:20",
														"valueSize": 1
													}
												],
												"id": 3131,
												"nodeType": "InlineAssembly",
												"src": "8118:133:20"
											},
											{
												"assignments": [
													3133
												],
												"declarations": [
													{
														"constant": false,
														"id": 3133,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "8261:20:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3132,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3134,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3107,
														"src": "8284:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:20",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:20"
											},
											{
												"assignments": [
													3139
												],
												"declarations": [
													{
														"constant": false,
														"id": 3139,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "8345:13:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3138,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3149,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3142,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "8368:13:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 3143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3140,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:20",
															"typeDescriptions": {}
														}
													},
													"id": 3148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:20"
											},
											{
												"assignments": [
													3151
												],
												"declarations": [
													{
														"constant": false,
														"id": 3151,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 3178,
														"src": "8440:12:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3150,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3161,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3154,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3133,
																			"src": "8462:13:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 3155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3152,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:20",
															"typeDescriptions": {}
														}
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:20"
											},
											{
												"expression": {
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3162,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "8537:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3163,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3139,
																"src": "8544:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3164,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "8555:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3168,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3151,
																			"src": "8593:6:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 3167,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "8574:18:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 3169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 3170,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3043,
																	"src": "8604:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 3173,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3139,
																"src": "8628:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:20",
															"trueExpression": {
																"id": 3172,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "8619:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 3175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:20",
														"trueExpression": {
															"id": 3166,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "8564:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3177,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:20"
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:20",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 3179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 3179,
												"src": "4389:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3042,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:20"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3179,
												"src": "4434:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3045,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:20"
									},
									"scope": 3180,
									"src": "4361:4281:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3181,
							"src": "313:8331:20"
						}
					],
					"src": "45:8600:20"
				},
				"id": 20
			}
		}
	}
}